<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on darwin)" generated="20190817 19:24:49.366" rpa="false">
<suite id="s1" name="Generate Tests" source="/Users/christian/Documents/Git/docker-su-hw-challenge-chrisluis/su-hw-challenge-answer-chrisluis/Tests/generate_tests.robot">
<kw name="Create Request Session" library="common" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_API_URL}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.682" level="INFO">Creating Session using : alias=hardware_test, url=http://localhost:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190817 19:24:49.682" endtime="20190817 19:24:49.683"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.681" endtime="20190817 19:24:49.683"></status>
</kw>
<test id="s1-t1" name="Generate Supported Country Code User With No Null Values On Response">
<kw name="${item} IN [ @{SUPPORTED_COUNTRY_CODES} ]" type="for">
<kw name="${item} = AL" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.687" level="INFO">&amp;{parameter} = { locale=AL }</msg>
<status status="PASS" starttime="20190817 19:24:49.686" endtime="20190817 19:24:49.687"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.754" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.687" endtime="20190817 19:24:49.754"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.755" endtime="20190817 19:24:49.756"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.756" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AL","personal_profile":{"first_name":"Aleks","last_name":"Kodra","date_of_birth":"1970-08-17T00:00:00.000Z","mobile_phone":"+355","national_id":""},"address":{"country":"AL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+355","first_name":"Aleks","last_name":"Kodra","company":"Umbrella Corp. AL"}}} </msg>
<msg timestamp="20190817 19:24:49.756" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.757" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AL', 'personal_profile': {'first_name': 'Aleks', 'last_name': 'Kodra', 'date_of_birth': '1970-08-17T00:00:00.000Z', 'mobile_phone': '+355', 'national...</msg>
<status status="PASS" starttime="20190817 19:24:49.756" endtime="20190817 19:24:49.757"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.757" endtime="20190817 19:24:49.759"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.757" endtime="20190817 19:24:49.759"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.760" endtime="20190817 19:24:49.761"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.759" endtime="20190817 19:24:49.761"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.762" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.762" endtime="20190817 19:24:49.762"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.761" endtime="20190817 19:24:49.762"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.764" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.763" endtime="20190817 19:24:49.764"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.763" endtime="20190817 19:24:49.764"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.765" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.764" endtime="20190817 19:24:49.765"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.764" endtime="20190817 19:24:49.765"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.766" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.765" endtime="20190817 19:24:49.766"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.765" endtime="20190817 19:24:49.766"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.767" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.766" endtime="20190817 19:24:49.767"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.766" endtime="20190817 19:24:49.767"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.767" endtime="20190817 19:24:49.768"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.767" endtime="20190817 19:24:49.768"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.768" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.768" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.768" endtime="20190817 19:24:49.769"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.768" endtime="20190817 19:24:49.769"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.769" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.769" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.769" endtime="20190817 19:24:49.769"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.769" endtime="20190817 19:24:49.769"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.770" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.770" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.770" endtime="20190817 19:24:49.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.770" endtime="20190817 19:24:49.771"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.771" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.771" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.771" endtime="20190817 19:24:49.771"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.771" endtime="20190817 19:24:49.771"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.772" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.772" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.771" endtime="20190817 19:24:49.772"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.771" endtime="20190817 19:24:49.772"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.773" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.773" endtime="20190817 19:24:49.773"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.772" endtime="20190817 19:24:49.773"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.774" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.774" endtime="20190817 19:24:49.774"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.773" endtime="20190817 19:24:49.774"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.775" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.775" endtime="20190817 19:24:49.775"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.774" endtime="20190817 19:24:49.775"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.776" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.775" endtime="20190817 19:24:49.776"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.775" endtime="20190817 19:24:49.776"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.685" endtime="20190817 19:24:49.776"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.685" endtime="20190817 19:24:49.776"></status>
</kw>
<kw name="${item} = AR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.777" level="INFO">&amp;{parameter} = { locale=AR }</msg>
<status status="PASS" starttime="20190817 19:24:49.776" endtime="20190817 19:24:49.777"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.812" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.777" endtime="20190817 19:24:49.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.812" endtime="20190817 19:24:49.813"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.813" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AR","personal_profile":{"first_name":"Benjamín","last_name":"Ramos","date_of_birth":"1974-08-17T00:00:00.000Z","mobile_phone":"+54911 82243272","national_id":""},"address":{"country":"AR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+54911 82243272","first_name":"Benjamín","last_name":"Ramos","company":"Umbrella Corp. AR"}}} </msg>
<msg timestamp="20190817 19:24:49.813" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.813" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AR', 'personal_profile': {'first_name': 'Benjamín', 'last_name': 'Ramos', 'date_of_birth': '1974-08-17T00:00:00.000Z', 'mobile_phone': '+54911 822432...</msg>
<status status="PASS" starttime="20190817 19:24:49.813" endtime="20190817 19:24:49.813"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.814" endtime="20190817 19:24:49.814"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.813" endtime="20190817 19:24:49.814"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.814" endtime="20190817 19:24:49.815"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.814" endtime="20190817 19:24:49.815"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.815" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:49.815" endtime="20190817 19:24:49.816"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.815" endtime="20190817 19:24:49.816"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.817" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.816" endtime="20190817 19:24:49.817"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.816" endtime="20190817 19:24:49.817"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.818" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.817" endtime="20190817 19:24:49.818"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.817" endtime="20190817 19:24:49.818"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.819" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:49.819" endtime="20190817 19:24:49.819"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.818" endtime="20190817 19:24:49.819"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.820" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.820" endtime="20190817 19:24:49.820"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.819" endtime="20190817 19:24:49.820"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.821" endtime="20190817 19:24:49.822"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.821" endtime="20190817 19:24:49.822"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.823" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.823" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.822" endtime="20190817 19:24:49.823"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.822" endtime="20190817 19:24:49.823"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.824" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.824" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.824" endtime="20190817 19:24:49.824"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.823" endtime="20190817 19:24:49.824"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.825" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.825" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.825" endtime="20190817 19:24:49.826"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.825" endtime="20190817 19:24:49.826"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.826" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.827" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.826" endtime="20190817 19:24:49.827"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.826" endtime="20190817 19:24:49.827"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.828" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.828" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.828" endtime="20190817 19:24:49.828"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.827" endtime="20190817 19:24:49.828"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.829" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:49.829" endtime="20190817 19:24:49.829"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.829" endtime="20190817 19:24:49.829"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.830" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:49.830" endtime="20190817 19:24:49.830"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.829" endtime="20190817 19:24:49.830"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.831" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.831" endtime="20190817 19:24:49.831"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.830" endtime="20190817 19:24:49.831"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.832" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.832" endtime="20190817 19:24:49.832"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.832" endtime="20190817 19:24:49.833"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.776" endtime="20190817 19:24:49.833"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.776" endtime="20190817 19:24:49.833"></status>
</kw>
<kw name="${item} = AM" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.835" level="INFO">&amp;{parameter} = { locale=AM }</msg>
<status status="PASS" starttime="20190817 19:24:49.834" endtime="20190817 19:24:49.835"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.844" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.835" endtime="20190817 19:24:49.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.844" endtime="20190817 19:24:49.844"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.848" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AM","personal_profile":{"first_name":"Գագիկ","last_name":"Գեւորգյան","date_of_birth":"1978-08-17T00:00:00.000Z","mobile_phone":"+37455946207","national_id":""},"address":{"country":"AM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+37455946207","first_name":"Գագիկ","last_name":"Գեւորգյան","company":"Umbrella Corp. AM"}}} </msg>
<msg timestamp="20190817 19:24:49.848" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.849" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AM', 'personal_profile': {'first_name': 'Գագիկ', 'last_name': 'Գեւորգյան', 'date_of_birth': '1978-08-17T00:00:00.000Z', 'mobile_phone': '+37455946207...</msg>
<status status="PASS" starttime="20190817 19:24:49.844" endtime="20190817 19:24:49.849"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.849" endtime="20190817 19:24:49.850"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.849" endtime="20190817 19:24:49.850"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.851" endtime="20190817 19:24:49.852"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.851" endtime="20190817 19:24:49.852"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.854" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.853" endtime="20190817 19:24:49.854"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.853" endtime="20190817 19:24:49.854"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.855" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:49.854" endtime="20190817 19:24:49.855"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.854" endtime="20190817 19:24:49.855"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.856" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.855" endtime="20190817 19:24:49.856"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.855" endtime="20190817 19:24:49.856"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.857" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.856" endtime="20190817 19:24:49.857"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.856" endtime="20190817 19:24:49.857"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.859" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.857" endtime="20190817 19:24:49.859"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.857" endtime="20190817 19:24:49.859"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.860" endtime="20190817 19:24:49.860"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.859" endtime="20190817 19:24:49.860"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.861" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.861" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.860" endtime="20190817 19:24:49.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.860" endtime="20190817 19:24:49.861"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.861" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.861" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.861" endtime="20190817 19:24:49.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.861" endtime="20190817 19:24:49.862"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.863" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.863" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.862" endtime="20190817 19:24:49.863"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.862" endtime="20190817 19:24:49.863"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.864" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.864" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.863" endtime="20190817 19:24:49.864"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.863" endtime="20190817 19:24:49.864"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.864" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.864" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.864" endtime="20190817 19:24:49.864"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.864" endtime="20190817 19:24:49.865"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.865" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.865" endtime="20190817 19:24:49.865"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.865" endtime="20190817 19:24:49.865"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.866" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.866" endtime="20190817 19:24:49.866"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.866" endtime="20190817 19:24:49.866"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.867" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:49.867" endtime="20190817 19:24:49.867"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.867" endtime="20190817 19:24:49.867"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.868" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.867" endtime="20190817 19:24:49.868"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.867" endtime="20190817 19:24:49.868"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.833" endtime="20190817 19:24:49.868"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.833" endtime="20190817 19:24:49.868"></status>
</kw>
<kw name="${item} = AU" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.869" level="INFO">&amp;{parameter} = { locale=AU }</msg>
<status status="PASS" starttime="20190817 19:24:49.868" endtime="20190817 19:24:49.869"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.883" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.869" endtime="20190817 19:24:49.884"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.884" endtime="20190817 19:24:49.884"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.884" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AU","personal_profile":{"first_name":"Ruby","last_name":"Williams","date_of_birth":"1984-08-17T00:00:00.000Z","mobile_phone":"+61423200567","national_id":""},"address":{"country":"AU","address_line1":"56158 Wilkinson Loop","address_line2":"","city":"Lake Jettberg","post_code":"2412","region_name":"Australian Capital Territory","landline":"+61423200567","first_name":"Ruby","last_name":"Williams","company":"Umbrella Corp. AU"}}} </msg>
<msg timestamp="20190817 19:24:49.884" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.885" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AU', 'personal_profile': {'first_name': 'Ruby', 'last_name': 'Williams', 'date_of_birth': '1984-08-17T00:00:00.000Z', 'mobile_phone': '+61423200567',...</msg>
<status status="PASS" starttime="20190817 19:24:49.884" endtime="20190817 19:24:49.885"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.885" endtime="20190817 19:24:49.885"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.885" endtime="20190817 19:24:49.885"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.885" endtime="20190817 19:24:49.886"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.885" endtime="20190817 19:24:49.886"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.886" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.886" endtime="20190817 19:24:49.886"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.886" endtime="20190817 19:24:49.886"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.887" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:49.887" endtime="20190817 19:24:49.887"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.886" endtime="20190817 19:24:49.887"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.887" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.887" endtime="20190817 19:24:49.887"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.887" endtime="20190817 19:24:49.887"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.888" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.888" endtime="20190817 19:24:49.888"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.888" endtime="20190817 19:24:49.888"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.889" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.889" endtime="20190817 19:24:49.889"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.888" endtime="20190817 19:24:49.889"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.889" endtime="20190817 19:24:49.890"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.889" endtime="20190817 19:24:49.890"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.891" level="INFO">Length is 20</msg>
<status status="PASS" starttime="20190817 19:24:49.890" endtime="20190817 19:24:49.891"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.890" endtime="20190817 19:24:49.891"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.892" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.892" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.891" endtime="20190817 19:24:49.892"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.891" endtime="20190817 19:24:49.892"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.893" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:49.893" endtime="20190817 19:24:49.893"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.892" endtime="20190817 19:24:49.893"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.894" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.894" endtime="20190817 19:24:49.894"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.894" endtime="20190817 19:24:49.894"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.895" level="INFO">Length is 28</msg>
<status status="PASS" starttime="20190817 19:24:49.894" endtime="20190817 19:24:49.895"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.894" endtime="20190817 19:24:49.895"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.895" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.895" endtime="20190817 19:24:49.895"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.895" endtime="20190817 19:24:49.895"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.896" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.895" endtime="20190817 19:24:49.896"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.895" endtime="20190817 19:24:49.896"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.897" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:49.896" endtime="20190817 19:24:49.897"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.896" endtime="20190817 19:24:49.897"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.898" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.898" endtime="20190817 19:24:49.898"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.897" endtime="20190817 19:24:49.898"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.868" endtime="20190817 19:24:49.899"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.868" endtime="20190817 19:24:49.899"></status>
</kw>
<kw name="${item} = AT" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.899" level="INFO">&amp;{parameter} = { locale=AT }</msg>
<status status="PASS" starttime="20190817 19:24:49.899" endtime="20190817 19:24:49.900"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.911" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.900" endtime="20190817 19:24:49.911"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.911" endtime="20190817 19:24:49.911"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.912" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AT","personal_profile":{"first_name":"Gregor","last_name":"Brunner","date_of_birth":"1959-08-17T00:00:00.000Z","mobile_phone":"+436505216917","national_id":""},"address":{"country":"AT","address_line1":"801 Nicole Mews","address_line2":"","city":"Roloffside","post_code":"2301","region_name":"Wien","landline":"+436505216917","first_name":"Gregor","last_name":"Brunner","company":"Umbrella Corp. AT"}}} </msg>
<msg timestamp="20190817 19:24:49.912" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.912" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AT', 'personal_profile': {'first_name': 'Gregor', 'last_name': 'Brunner', 'date_of_birth': '1959-08-17T00:00:00.000Z', 'mobile_phone': '+436505216917...</msg>
<status status="PASS" starttime="20190817 19:24:49.911" endtime="20190817 19:24:49.912"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.912" endtime="20190817 19:24:49.912"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.912" endtime="20190817 19:24:49.912"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.913" endtime="20190817 19:24:49.913"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.913" endtime="20190817 19:24:49.913"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.914" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:49.913" endtime="20190817 19:24:49.914"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.913" endtime="20190817 19:24:49.914"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.914" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.914" endtime="20190817 19:24:49.914"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.914" endtime="20190817 19:24:49.914"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.915" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.915" endtime="20190817 19:24:49.915"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.914" endtime="20190817 19:24:49.915"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.915" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:49.915" endtime="20190817 19:24:49.915"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.915" endtime="20190817 19:24:49.915"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.916" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.916" endtime="20190817 19:24:49.916"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.915" endtime="20190817 19:24:49.916"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.916" endtime="20190817 19:24:49.917"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.916" endtime="20190817 19:24:49.917"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.918" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:49.917" endtime="20190817 19:24:49.918"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.917" endtime="20190817 19:24:49.918"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.918" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.918" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.918" endtime="20190817 19:24:49.918"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.918" endtime="20190817 19:24:49.919"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.919" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:49.919" endtime="20190817 19:24:49.919"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.919" endtime="20190817 19:24:49.919"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.920" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.919" endtime="20190817 19:24:49.920"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.919" endtime="20190817 19:24:49.920"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.920" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:49.920" endtime="20190817 19:24:49.920"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.920" endtime="20190817 19:24:49.920"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.921" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:49.920" endtime="20190817 19:24:49.921"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.920" endtime="20190817 19:24:49.921"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.921" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:49.921" endtime="20190817 19:24:49.921"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.921" endtime="20190817 19:24:49.921"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.922" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.922" endtime="20190817 19:24:49.922"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.921" endtime="20190817 19:24:49.922"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.922" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.922" endtime="20190817 19:24:49.923"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.922" endtime="20190817 19:24:49.923"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.899" endtime="20190817 19:24:49.923"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.899" endtime="20190817 19:24:49.923"></status>
</kw>
<kw name="${item} = AZ" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.925" level="INFO">&amp;{parameter} = { locale=AZ }</msg>
<status status="PASS" starttime="20190817 19:24:49.924" endtime="20190817 19:24:49.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.933" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.925" endtime="20190817 19:24:49.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.934" endtime="20190817 19:24:49.934"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.934" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AZ","personal_profile":{"first_name":"Əhməd","last_name":"Kamalzadə","date_of_birth":"1970-08-17T00:00:00.000Z","mobile_phone":"+994405237405","national_id":""},"address":{"country":"AZ","address_line1":"8221 Quliyev pr.","address_line2":"","city":"Şəhriyarfort","post_code":"AZ3213","region_name":"","landline":"+994405237405","first_name":"Əhməd","last_name":"Kamalzadə","company":"Umbrella Corp. AZ"}}} </msg>
<msg timestamp="20190817 19:24:49.934" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.935" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AZ', 'personal_profile': {'first_name': 'Əhməd', 'last_name': 'Kamalzadə', 'date_of_birth': '1970-08-17T00:00:00.000Z', 'mobile_phone': '+99440523740...</msg>
<status status="PASS" starttime="20190817 19:24:49.934" endtime="20190817 19:24:49.935"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.935" endtime="20190817 19:24:49.935"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.935" endtime="20190817 19:24:49.935"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.935" endtime="20190817 19:24:49.936"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.935" endtime="20190817 19:24:49.936"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.936" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.936" endtime="20190817 19:24:49.936"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.936" endtime="20190817 19:24:49.937"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.937" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:49.937" endtime="20190817 19:24:49.937"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.937" endtime="20190817 19:24:49.937"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.938" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.938" endtime="20190817 19:24:49.938"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.937" endtime="20190817 19:24:49.938"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.939" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:49.939" endtime="20190817 19:24:49.939"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.939" endtime="20190817 19:24:49.940"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.941" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.940" endtime="20190817 19:24:49.941"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.940" endtime="20190817 19:24:49.941"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.941" endtime="20190817 19:24:49.942"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.941" endtime="20190817 19:24:49.942"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.944" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:49.943" endtime="20190817 19:24:49.944"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.942" endtime="20190817 19:24:49.944"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.945" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.945" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.944" endtime="20190817 19:24:49.945"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.944" endtime="20190817 19:24:49.945"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.946" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.946" endtime="20190817 19:24:49.946"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.945" endtime="20190817 19:24:49.946"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.947" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:49.947" endtime="20190817 19:24:49.947"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.946" endtime="20190817 19:24:49.947"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.947" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.947" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.947" endtime="20190817 19:24:49.948"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.947" endtime="20190817 19:24:49.948"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.948" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:49.948" endtime="20190817 19:24:49.948"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.948" endtime="20190817 19:24:49.948"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.949" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.948" endtime="20190817 19:24:49.949"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.948" endtime="20190817 19:24:49.949"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.949" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:49.949" endtime="20190817 19:24:49.949"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.949" endtime="20190817 19:24:49.949"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.950" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.950" endtime="20190817 19:24:49.950"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.949" endtime="20190817 19:24:49.950"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.923" endtime="20190817 19:24:49.950"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.923" endtime="20190817 19:24:49.950"></status>
</kw>
<kw name="${item} = BD" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.951" level="INFO">&amp;{parameter} = { locale=BD }</msg>
<status status="PASS" starttime="20190817 19:24:49.951" endtime="20190817 19:24:49.951"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.956" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.951" endtime="20190817 19:24:49.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.956" endtime="20190817 19:24:49.956"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.957" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BD","personal_profile":{"first_name":"Samia","last_name":"Hussain","date_of_birth":"1972-08-17T00:00:00.000Z","mobile_phone":"+8801111205342","national_id":""},"address":{"country":"BD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+8801111205342","first_name":"Samia","last_name":"Hussain","company":"Umbrella Corp. BD"}}} </msg>
<msg timestamp="20190817 19:24:49.957" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.957" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BD', 'personal_profile': {'first_name': 'Samia', 'last_name': 'Hussain', 'date_of_birth': '1972-08-17T00:00:00.000Z', 'mobile_phone': '+8801111205342...</msg>
<status status="PASS" starttime="20190817 19:24:49.957" endtime="20190817 19:24:49.957"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.958" endtime="20190817 19:24:49.959"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.958" endtime="20190817 19:24:49.959"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.959" endtime="20190817 19:24:49.960"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.959" endtime="20190817 19:24:49.960"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.961" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.961" endtime="20190817 19:24:49.962"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.961" endtime="20190817 19:24:49.962"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.963" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.963" endtime="20190817 19:24:49.963"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.962" endtime="20190817 19:24:49.963"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.965" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.964" endtime="20190817 19:24:49.965"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.964" endtime="20190817 19:24:49.965"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.966" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:49.965" endtime="20190817 19:24:49.966"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.965" endtime="20190817 19:24:49.966"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.967" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.967" endtime="20190817 19:24:49.967"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.966" endtime="20190817 19:24:49.967"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.968" endtime="20190817 19:24:49.969"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.968" endtime="20190817 19:24:49.969"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.970" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.970" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.969" endtime="20190817 19:24:49.970"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.969" endtime="20190817 19:24:49.970"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.971" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.971" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.971" endtime="20190817 19:24:49.971"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.970" endtime="20190817 19:24:49.971"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.973" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.973" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.972" endtime="20190817 19:24:49.973"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.972" endtime="20190817 19:24:49.973"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.974" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.974" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.974" endtime="20190817 19:24:49.974"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.973" endtime="20190817 19:24:49.974"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.974" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.975" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.974" endtime="20190817 19:24:49.975"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.974" endtime="20190817 19:24:49.975"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.975" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:49.975" endtime="20190817 19:24:49.975"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.975" endtime="20190817 19:24:49.975"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.976" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.976" endtime="20190817 19:24:49.976"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.975" endtime="20190817 19:24:49.976"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.976" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.976" endtime="20190817 19:24:49.976"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.976" endtime="20190817 19:24:49.976"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.977" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.977" endtime="20190817 19:24:49.977"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.977" endtime="20190817 19:24:49.977"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.950" endtime="20190817 19:24:49.977"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.950" endtime="20190817 19:24:49.977"></status>
</kw>
<kw name="${item} = BE" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.978" level="INFO">&amp;{parameter} = { locale=BE }</msg>
<status status="PASS" starttime="20190817 19:24:49.978" endtime="20190817 19:24:49.978"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:49.984" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:49.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.978" endtime="20190817 19:24:49.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.984" endtime="20190817 19:24:49.985"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:49.985" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BE","personal_profile":{"first_name":"Lucie","last_name":"Laurent","date_of_birth":"1970-08-17T00:00:00.000Z","mobile_phone":"+32456840555","national_id":""},"address":{"country":"BE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+32456840555","first_name":"Lucie","last_name":"Laurent","company":"Umbrella Corp. BE"}}} </msg>
<msg timestamp="20190817 19:24:49.985" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:49.985" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BE', 'personal_profile': {'first_name': 'Lucie', 'last_name': 'Laurent', 'date_of_birth': '1970-08-17T00:00:00.000Z', 'mobile_phone': '+32456840555',...</msg>
<status status="PASS" starttime="20190817 19:24:49.985" endtime="20190817 19:24:49.985"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.985" endtime="20190817 19:24:49.986"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.985" endtime="20190817 19:24:49.986"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.986" endtime="20190817 19:24:49.987"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.986" endtime="20190817 19:24:49.987"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.987" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.987" endtime="20190817 19:24:49.987"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.987" endtime="20190817 19:24:49.987"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.988" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.988" endtime="20190817 19:24:49.988"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.987" endtime="20190817 19:24:49.988"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.989" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:49.988" endtime="20190817 19:24:49.989"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.988" endtime="20190817 19:24:49.989"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.990" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.989" endtime="20190817 19:24:49.990"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.989" endtime="20190817 19:24:49.990"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:49.990" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.990" endtime="20190817 19:24:49.990"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.990" endtime="20190817 19:24:49.990"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:49.991" endtime="20190817 19:24:49.991"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.990" endtime="20190817 19:24:49.991"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.992" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.992" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.992" endtime="20190817 19:24:49.992"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.991" endtime="20190817 19:24:49.992"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.993" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.993" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.992" endtime="20190817 19:24:49.993"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.992" endtime="20190817 19:24:49.993"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.993" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.994" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.993" endtime="20190817 19:24:49.994"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.993" endtime="20190817 19:24:49.994"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.994" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.994" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.994" endtime="20190817 19:24:49.994"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.994" endtime="20190817 19:24:49.994"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.995" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:49.995" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:49.995" endtime="20190817 19:24:49.995"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.995" endtime="20190817 19:24:49.995"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.996" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:49.996" endtime="20190817 19:24:49.996"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.995" endtime="20190817 19:24:49.996"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.996" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:49.996" endtime="20190817 19:24:49.996"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.996" endtime="20190817 19:24:49.996"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.997" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:49.997" endtime="20190817 19:24:49.997"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.997" endtime="20190817 19:24:49.997"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:49.998" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:49.997" endtime="20190817 19:24:49.998"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:49.997" endtime="20190817 19:24:49.998"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.977" endtime="20190817 19:24:49.998"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.977" endtime="20190817 19:24:49.998"></status>
</kw>
<kw name="${item} = BA" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:49.999" level="INFO">&amp;{parameter} = { locale=BA }</msg>
<status status="PASS" starttime="20190817 19:24:49.998" endtime="20190817 19:24:49.999"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.014" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:49.999" endtime="20190817 19:24:50.015"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.015" endtime="20190817 19:24:50.015"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.016" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BA","personal_profile":{"first_name":"Milla","last_name":"Burić","date_of_birth":"1959-08-17T00:00:00.000Z","mobile_phone":"+3876096355885","national_id":""},"address":{"country":"BA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+3876096355885","first_name":"Milla","last_name":"Burić","company":"Umbrella Corp. BA"}}} </msg>
<msg timestamp="20190817 19:24:50.016" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.016" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BA', 'personal_profile': {'first_name': 'Milla', 'last_name': 'Burić', 'date_of_birth': '1959-08-17T00:00:00.000Z', 'mobile_phone': '+3876096355885',...</msg>
<status status="PASS" starttime="20190817 19:24:50.015" endtime="20190817 19:24:50.016"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.016" endtime="20190817 19:24:50.017"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.016" endtime="20190817 19:24:50.017"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.017" endtime="20190817 19:24:50.017"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.017" endtime="20190817 19:24:50.017"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.018" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.018" endtime="20190817 19:24:50.018"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.018" endtime="20190817 19:24:50.018"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.019" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.019" endtime="20190817 19:24:50.020"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.019" endtime="20190817 19:24:50.020"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.021" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.020" endtime="20190817 19:24:50.021"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.020" endtime="20190817 19:24:50.021"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.022" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.022" endtime="20190817 19:24:50.022"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.021" endtime="20190817 19:24:50.022"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.023" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.023" endtime="20190817 19:24:50.024"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.022" endtime="20190817 19:24:50.024"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.024" endtime="20190817 19:24:50.025"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.024" endtime="20190817 19:24:50.025"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.026" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.026" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.025" endtime="20190817 19:24:50.026"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.025" endtime="20190817 19:24:50.026"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.027" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.028" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.027" endtime="20190817 19:24:50.028"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.026" endtime="20190817 19:24:50.028"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.029" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.029" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.029" endtime="20190817 19:24:50.030"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.028" endtime="20190817 19:24:50.030"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.030" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.031" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.030" endtime="20190817 19:24:50.031"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.030" endtime="20190817 19:24:50.031"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.032" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.032" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.031" endtime="20190817 19:24:50.032"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.031" endtime="20190817 19:24:50.032"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.033" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.033" endtime="20190817 19:24:50.033"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.032" endtime="20190817 19:24:50.033"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.034" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.034" endtime="20190817 19:24:50.034"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.033" endtime="20190817 19:24:50.034"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.035" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.034" endtime="20190817 19:24:50.035"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.034" endtime="20190817 19:24:50.035"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.036" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.036" endtime="20190817 19:24:50.036"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.036" endtime="20190817 19:24:50.036"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.998" endtime="20190817 19:24:50.036"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.998" endtime="20190817 19:24:50.037"></status>
</kw>
<kw name="${item} = BR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.038" level="INFO">&amp;{parameter} = { locale=BR }</msg>
<status status="PASS" starttime="20190817 19:24:50.037" endtime="20190817 19:24:50.038"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.052" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.038" endtime="20190817 19:24:50.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.053" endtime="20190817 19:24:50.053"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.054" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BR","personal_profile":{"first_name":"Francisca","last_name":"Lourenço","date_of_birth":"1973-08-17T00:00:00.000Z","mobile_phone":"+5511941237401","national_id":"000.000.000-00"},"address":{"country":"BR","address_line1":"49566 Moraes Rua","address_line2":"","city":"Batistado Descoberto","post_code":"72999-631","region_name":"Goiás - GO","landline":"+5511941237401","first_name":"Francisca","last_name":"Lourenço","company":"Umbrella Corp. BR"}}} </msg>
<msg timestamp="20190817 19:24:50.054" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.054" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BR', 'personal_profile': {'first_name': 'Francisca', 'last_name': 'Lourenço', 'date_of_birth': '1973-08-17T00:00:00.000Z', 'mobile_phone': '+55119412...</msg>
<status status="PASS" starttime="20190817 19:24:50.053" endtime="20190817 19:24:50.054"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.054" endtime="20190817 19:24:50.055"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.054" endtime="20190817 19:24:50.055"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.055" endtime="20190817 19:24:50.056"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.055" endtime="20190817 19:24:50.056"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.056" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.056" endtime="20190817 19:24:50.057"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.056" endtime="20190817 19:24:50.057"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.058" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.057" endtime="20190817 19:24:50.058"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.057" endtime="20190817 19:24:50.058"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.059" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.058" endtime="20190817 19:24:50.059"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.058" endtime="20190817 19:24:50.059"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.059" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.059" endtime="20190817 19:24:50.060"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.059" endtime="20190817 19:24:50.060"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.060" level="INFO">Length is 21</msg>
<status status="PASS" starttime="20190817 19:24:50.060" endtime="20190817 19:24:50.060"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.060" endtime="20190817 19:24:50.060"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.061" endtime="20190817 19:24:50.062"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.061" endtime="20190817 19:24:50.062"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.063" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.063" endtime="20190817 19:24:50.063"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.062" endtime="20190817 19:24:50.064"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.065" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.065" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.064" endtime="20190817 19:24:50.065"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.064" endtime="20190817 19:24:50.065"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.067" level="INFO">Length is 20</msg>
<status status="PASS" starttime="20190817 19:24:50.066" endtime="20190817 19:24:50.067"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.065" endtime="20190817 19:24:50.067"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.068" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.067" endtime="20190817 19:24:50.068"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.067" endtime="20190817 19:24:50.068"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.069" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.068" endtime="20190817 19:24:50.069"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.068" endtime="20190817 19:24:50.069"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.069" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.069" endtime="20190817 19:24:50.069"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.069" endtime="20190817 19:24:50.069"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.070" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.070" endtime="20190817 19:24:50.070"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.070" endtime="20190817 19:24:50.071"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.071" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.071" endtime="20190817 19:24:50.071"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.071" endtime="20190817 19:24:50.072"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.072" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.072" endtime="20190817 19:24:50.072"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.072" endtime="20190817 19:24:50.072"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.037" endtime="20190817 19:24:50.073"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.037" endtime="20190817 19:24:50.073"></status>
</kw>
<kw name="${item} = BZ" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.074" level="INFO">&amp;{parameter} = { locale=BZ }</msg>
<status status="PASS" starttime="20190817 19:24:50.073" endtime="20190817 19:24:50.074"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.081" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.074" endtime="20190817 19:24:50.081"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.082" endtime="20190817 19:24:50.083"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.083" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BZ","personal_profile":{"first_name":"Luana","last_name":"Schmitz","date_of_birth":"1976-08-17T00:00:00.000Z","mobile_phone":"+501629317","national_id":""},"address":{"country":"BZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+501629317","first_name":"Luana","last_name":"Schmitz","company":"Umbrella Corp. BZ"}}} </msg>
<msg timestamp="20190817 19:24:50.084" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.084" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BZ', 'personal_profile': {'first_name': 'Luana', 'last_name': 'Schmitz', 'date_of_birth': '1976-08-17T00:00:00.000Z', 'mobile_phone': '+501629317', '...</msg>
<status status="PASS" starttime="20190817 19:24:50.083" endtime="20190817 19:24:50.084"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.084" endtime="20190817 19:24:50.085"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.084" endtime="20190817 19:24:50.085"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.085" endtime="20190817 19:24:50.086"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.085" endtime="20190817 19:24:50.086"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.087" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.087" endtime="20190817 19:24:50.087"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.086" endtime="20190817 19:24:50.087"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.088" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.088" endtime="20190817 19:24:50.088"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.088" endtime="20190817 19:24:50.088"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.089" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.089" endtime="20190817 19:24:50.089"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.088" endtime="20190817 19:24:50.089"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.089" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.089" endtime="20190817 19:24:50.090"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.089" endtime="20190817 19:24:50.090"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.091" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.090" endtime="20190817 19:24:50.091"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.090" endtime="20190817 19:24:50.091"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.091" endtime="20190817 19:24:50.091"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.091" endtime="20190817 19:24:50.092"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.092" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.092" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.092" endtime="20190817 19:24:50.092"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.092" endtime="20190817 19:24:50.092"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.093" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.093" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.092" endtime="20190817 19:24:50.093"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.092" endtime="20190817 19:24:50.093"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.094" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.094" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.093" endtime="20190817 19:24:50.094"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.093" endtime="20190817 19:24:50.094"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.095" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.095" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.095" endtime="20190817 19:24:50.095"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.095" endtime="20190817 19:24:50.096"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.096" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.097" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.096" endtime="20190817 19:24:50.097"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.096" endtime="20190817 19:24:50.097"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.098" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.097" endtime="20190817 19:24:50.098"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.097" endtime="20190817 19:24:50.098"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.099" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.098" endtime="20190817 19:24:50.099"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.098" endtime="20190817 19:24:50.099"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.100" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.099" endtime="20190817 19:24:50.100"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.099" endtime="20190817 19:24:50.100"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.101" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.101" endtime="20190817 19:24:50.101"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.100" endtime="20190817 19:24:50.101"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.073" endtime="20190817 19:24:50.101"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.073" endtime="20190817 19:24:50.101"></status>
</kw>
<kw name="${item} = BG" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.103" level="INFO">&amp;{parameter} = { locale=BG }</msg>
<status status="PASS" starttime="20190817 19:24:50.102" endtime="20190817 19:24:50.103"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.109" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.103" endtime="20190817 19:24:50.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.110" endtime="20190817 19:24:50.111"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.111" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BG","personal_profile":{"first_name":"Маргарита","last_name":"ТОДОРОВА","date_of_birth":"1981-08-17T00:00:00.000Z","mobile_phone":"+359889261701","national_id":""},"address":{"country":"BG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+359889261701","first_name":"Маргарита","last_name":"ТОДОРОВА","company":"Umbrella Corp. BG"}}} </msg>
<msg timestamp="20190817 19:24:50.111" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.112" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BG', 'personal_profile': {'first_name': 'Маргарита', 'last_name': 'ТОДОРОВА', 'date_of_birth': '1981-08-17T00:00:00.000Z', 'mobile_phone': '+35988926...</msg>
<status status="PASS" starttime="20190817 19:24:50.111" endtime="20190817 19:24:50.112"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.113" endtime="20190817 19:24:50.113"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.112" endtime="20190817 19:24:50.113"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.114" endtime="20190817 19:24:50.115"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.114" endtime="20190817 19:24:50.115"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.116" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.115" endtime="20190817 19:24:50.116"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.115" endtime="20190817 19:24:50.116"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.117" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.116" endtime="20190817 19:24:50.117"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.116" endtime="20190817 19:24:50.117"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.118" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.118" endtime="20190817 19:24:50.119"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.117" endtime="20190817 19:24:50.119"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.120" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.119" endtime="20190817 19:24:50.120"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.119" endtime="20190817 19:24:50.120"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.121" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.120" endtime="20190817 19:24:50.121"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.120" endtime="20190817 19:24:50.121"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.122" endtime="20190817 19:24:50.122"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.121" endtime="20190817 19:24:50.122"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.123" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.123" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.123" endtime="20190817 19:24:50.123"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.122" endtime="20190817 19:24:50.123"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.125" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.125" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.124" endtime="20190817 19:24:50.125"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.124" endtime="20190817 19:24:50.125"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.126" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.126" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.125" endtime="20190817 19:24:50.126"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.125" endtime="20190817 19:24:50.126"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.127" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.128" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.127" endtime="20190817 19:24:50.128"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.127" endtime="20190817 19:24:50.128"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.129" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.129" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.128" endtime="20190817 19:24:50.129"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.128" endtime="20190817 19:24:50.129"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.129" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.129" endtime="20190817 19:24:50.130"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.129" endtime="20190817 19:24:50.130"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.130" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.130" endtime="20190817 19:24:50.130"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.130" endtime="20190817 19:24:50.130"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.131" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.131" endtime="20190817 19:24:50.131"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.131" endtime="20190817 19:24:50.131"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.132" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.132" endtime="20190817 19:24:50.132"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.132" endtime="20190817 19:24:50.133"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.102" endtime="20190817 19:24:50.133"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.102" endtime="20190817 19:24:50.133"></status>
</kw>
<kw name="${item} = CA" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.134" level="INFO">&amp;{parameter} = { locale=CA }</msg>
<status status="PASS" starttime="20190817 19:24:50.133" endtime="20190817 19:24:50.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.146" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.134" endtime="20190817 19:24:50.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.146" endtime="20190817 19:24:50.147"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.148" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CA","personal_profile":{"first_name":"Gavin","last_name":"Leblanc","date_of_birth":"1958-08-17T00:00:00.000Z","mobile_phone":"+16066863218","national_id":""},"address":{"country":"CA","address_line1":"03741 Jake Lodge","address_line2":"","city":"East Rosalynview","post_code":"Z6Y 0W1","region_name":"Ontario","landline":"+16066863218","first_name":"Gavin","last_name":"Leblanc","company":"Umbrella Corp. CA"}}} </msg>
<msg timestamp="20190817 19:24:50.148" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.148" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CA', 'personal_profile': {'first_name': 'Gavin', 'last_name': 'Leblanc', 'date_of_birth': '1958-08-17T00:00:00.000Z', 'mobile_phone': '+16066863218',...</msg>
<status status="PASS" starttime="20190817 19:24:50.147" endtime="20190817 19:24:50.148"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.148" endtime="20190817 19:24:50.149"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.148" endtime="20190817 19:24:50.149"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.150" endtime="20190817 19:24:50.151"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.149" endtime="20190817 19:24:50.151"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.152" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.151" endtime="20190817 19:24:50.152"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.151" endtime="20190817 19:24:50.152"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.154" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.153" endtime="20190817 19:24:50.154"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.153" endtime="20190817 19:24:50.154"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.155" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.154" endtime="20190817 19:24:50.155"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.154" endtime="20190817 19:24:50.155"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.156" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.156" endtime="20190817 19:24:50.156"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.155" endtime="20190817 19:24:50.156"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.157" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.157" endtime="20190817 19:24:50.157"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.156" endtime="20190817 19:24:50.157"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.158" endtime="20190817 19:24:50.158"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.157" endtime="20190817 19:24:50.158"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.159" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.159" endtime="20190817 19:24:50.160"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.159" endtime="20190817 19:24:50.160"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.160" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.161" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.160" endtime="20190817 19:24:50.161"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.160" endtime="20190817 19:24:50.161"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.162" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.161" endtime="20190817 19:24:50.162"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.161" endtime="20190817 19:24:50.162"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.163" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.162" endtime="20190817 19:24:50.163"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.162" endtime="20190817 19:24:50.163"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.164" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.163" endtime="20190817 19:24:50.164"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.163" endtime="20190817 19:24:50.164"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.165" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.164" endtime="20190817 19:24:50.165"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.164" endtime="20190817 19:24:50.165"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.166" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.165" endtime="20190817 19:24:50.166"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.165" endtime="20190817 19:24:50.166"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.167" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.167" endtime="20190817 19:24:50.167"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.166" endtime="20190817 19:24:50.167"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.168" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.168" endtime="20190817 19:24:50.168"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.167" endtime="20190817 19:24:50.168"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.133" endtime="20190817 19:24:50.168"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.133" endtime="20190817 19:24:50.168"></status>
</kw>
<kw name="${item} = CL" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.169" level="INFO">&amp;{parameter} = { locale=CL }</msg>
<status status="PASS" starttime="20190817 19:24:50.169" endtime="20190817 19:24:50.169"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.176" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.170" endtime="20190817 19:24:50.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.176" endtime="20190817 19:24:50.176"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.177" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CL","personal_profile":{"first_name":"Noelia","last_name":"Vicente","date_of_birth":"1985-08-17T00:00:00.000Z","mobile_phone":"+56988907113","national_id":""},"address":{"country":"CL","address_line1":"Siete Sur 43 ","address_line2":"","city":"Cerrillos","post_code":13102,"region_name":"Cerrillos","landline":"+56988907113","first_name":"Noelia","last_name":"Vicente","company":"Umbrella Corp. CL"}}} </msg>
<msg timestamp="20190817 19:24:50.177" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.177" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CL', 'personal_profile': {'first_name': 'Noelia', 'last_name': 'Vicente', 'date_of_birth': '1985-08-17T00:00:00.000Z', 'mobile_phone': '+56988907113'...</msg>
<status status="PASS" starttime="20190817 19:24:50.177" endtime="20190817 19:24:50.177"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.177" endtime="20190817 19:24:50.178"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.177" endtime="20190817 19:24:50.178"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.179" endtime="20190817 19:24:50.179"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.178" endtime="20190817 19:24:50.179"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.180" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.180" endtime="20190817 19:24:50.180"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.179" endtime="20190817 19:24:50.180"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.181" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.181" endtime="20190817 19:24:50.181"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.180" endtime="20190817 19:24:50.181"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.182" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.182" endtime="20190817 19:24:50.183"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.181" endtime="20190817 19:24:50.183"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.184" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.184" endtime="20190817 19:24:50.184"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.183" endtime="20190817 19:24:50.184"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.185" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.184" endtime="20190817 19:24:50.185"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.184" endtime="20190817 19:24:50.185"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.185" endtime="20190817 19:24:50.185"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.185" endtime="20190817 19:24:50.185"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.186" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.186" endtime="20190817 19:24:50.186"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.186" endtime="20190817 19:24:50.186"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.187" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.187" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.186" endtime="20190817 19:24:50.187"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.186" endtime="20190817 19:24:50.187"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.188" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.187" endtime="20190817 19:24:50.188"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.187" endtime="20190817 19:24:50.188"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.188" level="FAIL">Could not get length of '13102'.</msg>
<status status="FAIL" starttime="20190817 19:24:50.188" endtime="20190817 19:24:50.188"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.188" endtime="20190817 19:24:50.189"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.189" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.189" endtime="20190817 19:24:50.189"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.189" endtime="20190817 19:24:50.189"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.190" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.189" endtime="20190817 19:24:50.190"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.189" endtime="20190817 19:24:50.190"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.190" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.190" endtime="20190817 19:24:50.190"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.190" endtime="20190817 19:24:50.190"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.191" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.191" endtime="20190817 19:24:50.191"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.190" endtime="20190817 19:24:50.191"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.191" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.191" endtime="20190817 19:24:50.191"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.191" endtime="20190817 19:24:50.191"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.169" endtime="20190817 19:24:50.192"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.168" endtime="20190817 19:24:50.192"></status>
</kw>
<kw name="${item} = CN" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.192" level="INFO">&amp;{parameter} = { locale=CN }</msg>
<status status="PASS" starttime="20190817 19:24:50.192" endtime="20190817 19:24:50.193"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.202" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.193" endtime="20190817 19:24:50.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.203" endtime="20190817 19:24:50.204"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.205" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CN","personal_profile":{"first_name":"进","last_name":"汤","date_of_birth":"1958-08-17T00:00:00.000Z","mobile_phone":"+8613233511355","national_id":""},"address":{"country":"CN","address_line1":"633 薛 侬","address_line2":"","city":"西 戴","post_code":"036802","region_name":"重庆市","landline":"+8613233511355","first_name":"进","last_name":"汤","company":"Umbrella Corp. CN"}}} </msg>
<msg timestamp="20190817 19:24:50.205" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.205" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CN', 'personal_profile': {'first_name': '进', 'last_name': '汤', 'date_of_birth': '1958-08-17T00:00:00.000Z', 'mobile_phone': '+8613233511355', 'nation...</msg>
<status status="PASS" starttime="20190817 19:24:50.204" endtime="20190817 19:24:50.205"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.206" endtime="20190817 19:24:50.206"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.205" endtime="20190817 19:24:50.206"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.206" endtime="20190817 19:24:50.207"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.206" endtime="20190817 19:24:50.207"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.208" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:50.207" endtime="20190817 19:24:50.208"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.207" endtime="20190817 19:24:50.208"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.209" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:50.209" endtime="20190817 19:24:50.209"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.208" endtime="20190817 19:24:50.209"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.210" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.210" endtime="20190817 19:24:50.210"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.209" endtime="20190817 19:24:50.210"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.211" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.211" endtime="20190817 19:24:50.211"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.211" endtime="20190817 19:24:50.211"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.212" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.212" endtime="20190817 19:24:50.212"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.212" endtime="20190817 19:24:50.212"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.213" endtime="20190817 19:24:50.213"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.213" endtime="20190817 19:24:50.213"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.214" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.214" endtime="20190817 19:24:50.214"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.213" endtime="20190817 19:24:50.214"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.215" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.215" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.215" endtime="20190817 19:24:50.215"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.214" endtime="20190817 19:24:50.216"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.216" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:50.216" endtime="20190817 19:24:50.217"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.216" endtime="20190817 19:24:50.217"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.218" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.217" endtime="20190817 19:24:50.218"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.217" endtime="20190817 19:24:50.219"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.221" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:50.220" endtime="20190817 19:24:50.222"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.219" endtime="20190817 19:24:50.222"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.223" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.223" endtime="20190817 19:24:50.223"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.222" endtime="20190817 19:24:50.223"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.224" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:50.224" endtime="20190817 19:24:50.224"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.224" endtime="20190817 19:24:50.224"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.225" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:50.225" endtime="20190817 19:24:50.225"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.225" endtime="20190817 19:24:50.225"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.226" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.226" endtime="20190817 19:24:50.226"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.225" endtime="20190817 19:24:50.226"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.192" endtime="20190817 19:24:50.227"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.192" endtime="20190817 19:24:50.227"></status>
</kw>
<kw name="${item} = CO" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.228" level="INFO">&amp;{parameter} = { locale=CO }</msg>
<status status="PASS" starttime="20190817 19:24:50.228" endtime="20190817 19:24:50.228"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.236" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.228" endtime="20190817 19:24:50.236"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.236" endtime="20190817 19:24:50.237"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.238" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CO","personal_profile":{"first_name":"Cristina","last_name":"Montoya","date_of_birth":"1972-08-17T00:00:00.000Z","mobile_phone":"+573107403752","national_id":""},"address":{"country":"CO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+573107403752","first_name":"Cristina","last_name":"Montoya","company":"Umbrella Corp. CO"}}} </msg>
<msg timestamp="20190817 19:24:50.238" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.238" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CO', 'personal_profile': {'first_name': 'Cristina', 'last_name': 'Montoya', 'date_of_birth': '1972-08-17T00:00:00.000Z', 'mobile_phone': '+5731074037...</msg>
<status status="PASS" starttime="20190817 19:24:50.237" endtime="20190817 19:24:50.238"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.239" endtime="20190817 19:24:50.239"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.238" endtime="20190817 19:24:50.239"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.240" endtime="20190817 19:24:50.241"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.240" endtime="20190817 19:24:50.241"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.242" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.241" endtime="20190817 19:24:50.242"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.241" endtime="20190817 19:24:50.242"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.243" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.243" endtime="20190817 19:24:50.243"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.242" endtime="20190817 19:24:50.243"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.244" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.244" endtime="20190817 19:24:50.244"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.243" endtime="20190817 19:24:50.244"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.245" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.245" endtime="20190817 19:24:50.245"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.245" endtime="20190817 19:24:50.246"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.247" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.246" endtime="20190817 19:24:50.247"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.246" endtime="20190817 19:24:50.247"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.247" endtime="20190817 19:24:50.247"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.247" endtime="20190817 19:24:50.248"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.248" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.248" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.248" endtime="20190817 19:24:50.248"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.248" endtime="20190817 19:24:50.248"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.249" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.249" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.249" endtime="20190817 19:24:50.249"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.248" endtime="20190817 19:24:50.249"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.250" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.250" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.249" endtime="20190817 19:24:50.250"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.249" endtime="20190817 19:24:50.250"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.250" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.250" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.250" endtime="20190817 19:24:50.250"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.250" endtime="20190817 19:24:50.250"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.251" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.251" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.251" endtime="20190817 19:24:50.251"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.251" endtime="20190817 19:24:50.251"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.252" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.252" endtime="20190817 19:24:50.252"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.251" endtime="20190817 19:24:50.252"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.252" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.252" endtime="20190817 19:24:50.252"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.252" endtime="20190817 19:24:50.253"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.253" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.253" endtime="20190817 19:24:50.253"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.253" endtime="20190817 19:24:50.253"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.254" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.253" endtime="20190817 19:24:50.254"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.253" endtime="20190817 19:24:50.254"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.227" endtime="20190817 19:24:50.254"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.227" endtime="20190817 19:24:50.254"></status>
</kw>
<kw name="${item} = CR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.255" level="INFO">&amp;{parameter} = { locale=CR }</msg>
<status status="PASS" starttime="20190817 19:24:50.254" endtime="20190817 19:24:50.255"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.262" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.255" endtime="20190817 19:24:50.267"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.267" endtime="20190817 19:24:50.268"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.269" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CR","personal_profile":{"first_name":"Sophia","last_name":"Arias","date_of_birth":"1975-08-17T00:00:00.000Z","mobile_phone":"+50667886860","national_id":""},"address":{"country":"CR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+50667886860","first_name":"Sophia","last_name":"Arias","company":"Umbrella Corp. CR"}}} </msg>
<msg timestamp="20190817 19:24:50.269" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.269" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CR', 'personal_profile': {'first_name': 'Sophia', 'last_name': 'Arias', 'date_of_birth': '1975-08-17T00:00:00.000Z', 'mobile_phone': '+50667886860', ...</msg>
<status status="PASS" starttime="20190817 19:24:50.268" endtime="20190817 19:24:50.269"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.270" endtime="20190817 19:24:50.272"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.270" endtime="20190817 19:24:50.272"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.273" endtime="20190817 19:24:50.273"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.272" endtime="20190817 19:24:50.273"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.274" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.274" endtime="20190817 19:24:50.274"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.274" endtime="20190817 19:24:50.275"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.275" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.275" endtime="20190817 19:24:50.275"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.275" endtime="20190817 19:24:50.275"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.276" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.276" endtime="20190817 19:24:50.276"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.275" endtime="20190817 19:24:50.276"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.277" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.277" endtime="20190817 19:24:50.277"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.276" endtime="20190817 19:24:50.277"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.278" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.278" endtime="20190817 19:24:50.278"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.277" endtime="20190817 19:24:50.278"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.278" endtime="20190817 19:24:50.279"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.278" endtime="20190817 19:24:50.279"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.280" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.280" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.279" endtime="20190817 19:24:50.280"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.279" endtime="20190817 19:24:50.280"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.280" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.280" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.280" endtime="20190817 19:24:50.281"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.280" endtime="20190817 19:24:50.281"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.281" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.281" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.281" endtime="20190817 19:24:50.281"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.281" endtime="20190817 19:24:50.281"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.282" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.282" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.282" endtime="20190817 19:24:50.282"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.282" endtime="20190817 19:24:50.283"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.283" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.283" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.283" endtime="20190817 19:24:50.283"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.283" endtime="20190817 19:24:50.283"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.284" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.284" endtime="20190817 19:24:50.284"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.283" endtime="20190817 19:24:50.284"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.285" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.284" endtime="20190817 19:24:50.285"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.284" endtime="20190817 19:24:50.285"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.285" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.285" endtime="20190817 19:24:50.285"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.285" endtime="20190817 19:24:50.285"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.286" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.286" endtime="20190817 19:24:50.286"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.286" endtime="20190817 19:24:50.286"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.254" endtime="20190817 19:24:50.286"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.254" endtime="20190817 19:24:50.286"></status>
</kw>
<kw name="${item} = DK" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.288" level="INFO">&amp;{parameter} = { locale=DK }</msg>
<status status="PASS" starttime="20190817 19:24:50.287" endtime="20190817 19:24:50.288"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.298" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.288" endtime="20190817 19:24:50.298"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.298" endtime="20190817 19:24:50.299"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.300" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DK","personal_profile":{"first_name":"Agnes","last_name":"Pedersen","date_of_birth":"1965-08-17T00:00:00.000Z","mobile_phone":"+4550359619","national_id":""},"address":{"country":"DK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+4550359619","first_name":"Agnes","last_name":"Pedersen","company":"Umbrella Corp. DK"}}} </msg>
<msg timestamp="20190817 19:24:50.300" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.300" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DK', 'personal_profile': {'first_name': 'Agnes', 'last_name': 'Pedersen', 'date_of_birth': '1965-08-17T00:00:00.000Z', 'mobile_phone': '+4550359619',...</msg>
<status status="PASS" starttime="20190817 19:24:50.300" endtime="20190817 19:24:50.300"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.301" endtime="20190817 19:24:50.301"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.300" endtime="20190817 19:24:50.301"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.302" endtime="20190817 19:24:50.302"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.301" endtime="20190817 19:24:50.302"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.303" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.303" endtime="20190817 19:24:50.303"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.302" endtime="20190817 19:24:50.303"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.303" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.303" endtime="20190817 19:24:50.303"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.303" endtime="20190817 19:24:50.304"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.304" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.304" endtime="20190817 19:24:50.304"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.304" endtime="20190817 19:24:50.304"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.305" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:50.304" endtime="20190817 19:24:50.305"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.304" endtime="20190817 19:24:50.305"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.305" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.305" endtime="20190817 19:24:50.305"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.305" endtime="20190817 19:24:50.305"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.306" endtime="20190817 19:24:50.306"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.305" endtime="20190817 19:24:50.306"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.306" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.307" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.306" endtime="20190817 19:24:50.307"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.306" endtime="20190817 19:24:50.307"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.307" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.307" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.307" endtime="20190817 19:24:50.307"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.307" endtime="20190817 19:24:50.308"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.308" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.308" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.308" endtime="20190817 19:24:50.309"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.308" endtime="20190817 19:24:50.309"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.310" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.310" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.309" endtime="20190817 19:24:50.310"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.309" endtime="20190817 19:24:50.310"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.311" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.311" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.310" endtime="20190817 19:24:50.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.310" endtime="20190817 19:24:50.311"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.312" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:50.311" endtime="20190817 19:24:50.312"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.311" endtime="20190817 19:24:50.312"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.313" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.312" endtime="20190817 19:24:50.313"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.312" endtime="20190817 19:24:50.313"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.314" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.314" endtime="20190817 19:24:50.314"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.313" endtime="20190817 19:24:50.314"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.315" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.315" endtime="20190817 19:24:50.315"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.314" endtime="20190817 19:24:50.315"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.287" endtime="20190817 19:24:50.315"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.286" endtime="20190817 19:24:50.316"></status>
</kw>
<kw name="${item} = EG" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.317" level="INFO">&amp;{parameter} = { locale=EG }</msg>
<status status="PASS" starttime="20190817 19:24:50.316" endtime="20190817 19:24:50.317"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.326" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.317" endtime="20190817 19:24:50.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.327" endtime="20190817 19:24:50.327"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.327" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"EG","personal_profile":{"first_name":"محمد","last_name":"رمضان","date_of_birth":"1996-08-17T00:00:00.000Z","mobile_phone":"+201094961093","national_id":""},"address":{"country":"EG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+201094961093","first_name":"محمد","last_name":"رمضان","company":"Umbrella Corp. EG"}}} </msg>
<msg timestamp="20190817 19:24:50.327" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.328" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'EG', 'personal_profile': {'first_name': 'محمد', 'last_name': 'رمضان', 'date_of_birth': '1996-08-17T00:00:00.000Z', 'mobile_phone': '+201094961093', '...</msg>
<status status="PASS" starttime="20190817 19:24:50.327" endtime="20190817 19:24:50.328"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.328" endtime="20190817 19:24:50.328"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.328" endtime="20190817 19:24:50.328"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.328" endtime="20190817 19:24:50.329"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.328" endtime="20190817 19:24:50.329"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.329" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.329" endtime="20190817 19:24:50.329"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.329" endtime="20190817 19:24:50.329"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.330" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.330" endtime="20190817 19:24:50.330"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.330" endtime="20190817 19:24:50.330"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.331" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.331" endtime="20190817 19:24:50.331"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.330" endtime="20190817 19:24:50.331"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.332" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.331" endtime="20190817 19:24:50.332"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.331" endtime="20190817 19:24:50.332"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.333" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.333" endtime="20190817 19:24:50.333"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.332" endtime="20190817 19:24:50.333"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.334" endtime="20190817 19:24:50.334"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.333" endtime="20190817 19:24:50.335"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.335" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.336" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.335" endtime="20190817 19:24:50.336"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.335" endtime="20190817 19:24:50.336"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.337" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.337" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.336" endtime="20190817 19:24:50.337"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.336" endtime="20190817 19:24:50.337"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.338" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.339" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.338" endtime="20190817 19:24:50.339"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.337" endtime="20190817 19:24:50.339"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.340" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.340" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.339" endtime="20190817 19:24:50.340"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.339" endtime="20190817 19:24:50.340"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.341" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.341" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.341" endtime="20190817 19:24:50.341"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.340" endtime="20190817 19:24:50.341"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.342" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.341" endtime="20190817 19:24:50.342"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.341" endtime="20190817 19:24:50.342"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.342" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.342" endtime="20190817 19:24:50.342"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.342" endtime="20190817 19:24:50.342"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.343" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.342" endtime="20190817 19:24:50.343"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.342" endtime="20190817 19:24:50.343"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.343" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.343" endtime="20190817 19:24:50.343"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.343" endtime="20190817 19:24:50.343"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.316" endtime="20190817 19:24:50.343"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.316" endtime="20190817 19:24:50.344"></status>
</kw>
<kw name="${item} = GB" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.344" level="INFO">&amp;{parameter} = { locale=GB }</msg>
<status status="PASS" starttime="20190817 19:24:50.344" endtime="20190817 19:24:50.344"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.357" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.345" endtime="20190817 19:24:50.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.358" endtime="20190817 19:24:50.359"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.359" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GB","personal_profile":{"first_name":"John","last_name":"Davis","date_of_birth":"1969-08-17T00:00:00.000Z","mobile_phone":"+447700431049","national_id":"AA012344B"},"address":{"country":"GB","address_line1":"77049 Joanny Passage","address_line2":"","city":"East Keith","post_code":"AH63 6UD","region_name":"Illinois","landline":"+447700431049","first_name":"John","last_name":"Davis","company":"Umbrella Corp. GB"}}} </msg>
<msg timestamp="20190817 19:24:50.359" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.359" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GB', 'personal_profile': {'first_name': 'John', 'last_name': 'Davis', 'date_of_birth': '1969-08-17T00:00:00.000Z', 'mobile_phone': '+447700431049', '...</msg>
<status status="PASS" starttime="20190817 19:24:50.359" endtime="20190817 19:24:50.359"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.360" endtime="20190817 19:24:50.360"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.359" endtime="20190817 19:24:50.360"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.360" endtime="20190817 19:24:50.361"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.360" endtime="20190817 19:24:50.361"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.362" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.361" endtime="20190817 19:24:50.362"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.361" endtime="20190817 19:24:50.362"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.363" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.362" endtime="20190817 19:24:50.363"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.362" endtime="20190817 19:24:50.363"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.365" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.364" endtime="20190817 19:24:50.365"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.363" endtime="20190817 19:24:50.365"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.366" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.365" endtime="20190817 19:24:50.366"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.365" endtime="20190817 19:24:50.366"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.367" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.366" endtime="20190817 19:24:50.367"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.366" endtime="20190817 19:24:50.367"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.367" endtime="20190817 19:24:50.368"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.367" endtime="20190817 19:24:50.368"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.369" level="INFO">Length is 20</msg>
<status status="PASS" starttime="20190817 19:24:50.368" endtime="20190817 19:24:50.369"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.368" endtime="20190817 19:24:50.369"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.370" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.370" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.369" endtime="20190817 19:24:50.370"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.369" endtime="20190817 19:24:50.370"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.371" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.370" endtime="20190817 19:24:50.371"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.370" endtime="20190817 19:24:50.371"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.372" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.372" endtime="20190817 19:24:50.372"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.371" endtime="20190817 19:24:50.372"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.373" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.372" endtime="20190817 19:24:50.373"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.372" endtime="20190817 19:24:50.373"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.374" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.373" endtime="20190817 19:24:50.374"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.373" endtime="20190817 19:24:50.374"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.374" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.374" endtime="20190817 19:24:50.374"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.374" endtime="20190817 19:24:50.374"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.375" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.375" endtime="20190817 19:24:50.376"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.375" endtime="20190817 19:24:50.376"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.377" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.376" endtime="20190817 19:24:50.377"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.376" endtime="20190817 19:24:50.377"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.344" endtime="20190817 19:24:50.377"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.344" endtime="20190817 19:24:50.377"></status>
</kw>
<kw name="${item} = EE" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.379" level="INFO">&amp;{parameter} = { locale=EE }</msg>
<status status="PASS" starttime="20190817 19:24:50.378" endtime="20190817 19:24:50.379"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.391" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.379" endtime="20190817 19:24:50.391"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.391" endtime="20190817 19:24:50.392"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.393" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"EE","personal_profile":{"first_name":"Daniil","last_name":"Põld","date_of_birth":"2000-08-17T00:00:00.000Z","mobile_phone":"+3725856560","national_id":""},"address":{"country":"EE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+3725856560","first_name":"Daniil","last_name":"Põld","company":"Umbrella Corp. EE"}}} </msg>
<msg timestamp="20190817 19:24:50.393" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.393" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'EE', 'personal_profile': {'first_name': 'Daniil', 'last_name': 'Põld', 'date_of_birth': '2000-08-17T00:00:00.000Z', 'mobile_phone': '+3725856560', 'n...</msg>
<status status="PASS" starttime="20190817 19:24:50.392" endtime="20190817 19:24:50.393"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.398" endtime="20190817 19:24:50.399"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.398" endtime="20190817 19:24:50.399"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.399" endtime="20190817 19:24:50.399"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.399" endtime="20190817 19:24:50.399"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.400" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.400" endtime="20190817 19:24:50.400"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.399" endtime="20190817 19:24:50.400"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.401" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.400" endtime="20190817 19:24:50.401"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.400" endtime="20190817 19:24:50.401"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.401" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.401" endtime="20190817 19:24:50.401"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.401" endtime="20190817 19:24:50.402"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.402" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:50.402" endtime="20190817 19:24:50.402"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.402" endtime="20190817 19:24:50.402"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.403" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.402" endtime="20190817 19:24:50.403"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.402" endtime="20190817 19:24:50.403"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.404" endtime="20190817 19:24:50.405"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.404" endtime="20190817 19:24:50.405"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.406" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.406" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.405" endtime="20190817 19:24:50.406"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.405" endtime="20190817 19:24:50.406"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.407" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.407" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.407" endtime="20190817 19:24:50.407"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.406" endtime="20190817 19:24:50.407"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.408" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.408" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.408" endtime="20190817 19:24:50.409"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.408" endtime="20190817 19:24:50.409"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.410" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.410" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.409" endtime="20190817 19:24:50.410"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.409" endtime="20190817 19:24:50.410"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.411" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.412" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.411" endtime="20190817 19:24:50.412"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.410" endtime="20190817 19:24:50.412"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.413" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:50.412" endtime="20190817 19:24:50.413"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.412" endtime="20190817 19:24:50.413"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.413" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.413" endtime="20190817 19:24:50.413"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.413" endtime="20190817 19:24:50.413"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.414" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.414" endtime="20190817 19:24:50.414"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.414" endtime="20190817 19:24:50.414"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.414" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.414" endtime="20190817 19:24:50.415"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.414" endtime="20190817 19:24:50.415"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.378" endtime="20190817 19:24:50.415"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.378" endtime="20190817 19:24:50.415"></status>
</kw>
<kw name="${item} = FI" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.415" level="INFO">&amp;{parameter} = { locale=FI }</msg>
<status status="PASS" starttime="20190817 19:24:50.415" endtime="20190817 19:24:50.415"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.423" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.416" endtime="20190817 19:24:50.423"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.423" endtime="20190817 19:24:50.424"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.424" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FI","personal_profile":{"first_name":"Emma","last_name":"Yrjölä","date_of_birth":"1966-08-17T00:00:00.000Z","mobile_phone":"+3584571401600","national_id":""},"address":{"country":"FI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+3584571401600","first_name":"Emma","last_name":"Yrjölä","company":"Umbrella Corp. FI"}}} </msg>
<msg timestamp="20190817 19:24:50.424" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.425" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FI', 'personal_profile': {'first_name': 'Emma', 'last_name': 'Yrjölä', 'date_of_birth': '1966-08-17T00:00:00.000Z', 'mobile_phone': '+3584571401600',...</msg>
<status status="PASS" starttime="20190817 19:24:50.424" endtime="20190817 19:24:50.425"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.425" endtime="20190817 19:24:50.426"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.425" endtime="20190817 19:24:50.426"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.426" endtime="20190817 19:24:50.427"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.426" endtime="20190817 19:24:50.427"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.428" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.428" endtime="20190817 19:24:50.428"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.427" endtime="20190817 19:24:50.428"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.429" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.428" endtime="20190817 19:24:50.429"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.428" endtime="20190817 19:24:50.429"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.430" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.429" endtime="20190817 19:24:50.430"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.429" endtime="20190817 19:24:50.430"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.431" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.430" endtime="20190817 19:24:50.431"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.430" endtime="20190817 19:24:50.431"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.432" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.431" endtime="20190817 19:24:50.432"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.431" endtime="20190817 19:24:50.432"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.432" endtime="20190817 19:24:50.432"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.432" endtime="20190817 19:24:50.433"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.433" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.433" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.433" endtime="20190817 19:24:50.433"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.433" endtime="20190817 19:24:50.433"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.434" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.434" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.434" endtime="20190817 19:24:50.434"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.434" endtime="20190817 19:24:50.434"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.435" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.435" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.435" endtime="20190817 19:24:50.435"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.435" endtime="20190817 19:24:50.435"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.436" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.436" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.436" endtime="20190817 19:24:50.436"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.435" endtime="20190817 19:24:50.436"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.437" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.437" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.437" endtime="20190817 19:24:50.437"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.436" endtime="20190817 19:24:50.437"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.439" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.438" endtime="20190817 19:24:50.439"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.438" endtime="20190817 19:24:50.439"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.440" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.440" endtime="20190817 19:24:50.440"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.439" endtime="20190817 19:24:50.440"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.441" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.441" endtime="20190817 19:24:50.441"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.440" endtime="20190817 19:24:50.441"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.442" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.441" endtime="20190817 19:24:50.442"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.441" endtime="20190817 19:24:50.442"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.415" endtime="20190817 19:24:50.442"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.415" endtime="20190817 19:24:50.442"></status>
</kw>
<kw name="${item} = FR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.443" level="INFO">&amp;{parameter} = { locale=FR }</msg>
<status status="PASS" starttime="20190817 19:24:50.443" endtime="20190817 19:24:50.443"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.451" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.443" endtime="20190817 19:24:50.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.452" endtime="20190817 19:24:50.452"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.453" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FR","personal_profile":{"first_name":"Amine","last_name":"Marty","date_of_birth":"1980-08-17T00:00:00.000Z","mobile_phone":"+33670997441","national_id":""},"address":{"country":"FR","address_line1":"84737 Blanc Mouffetard","address_line2":"","city":"Boyerfort","post_code":"49972","region_name":"Languedoc-Roussillon","landline":"+33670997441","first_name":"Amine","last_name":"Marty","company":"Umbrella Corp. FR"}}} </msg>
<msg timestamp="20190817 19:24:50.453" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.453" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FR', 'personal_profile': {'first_name': 'Amine', 'last_name': 'Marty', 'date_of_birth': '1980-08-17T00:00:00.000Z', 'mobile_phone': '+33670997441', '...</msg>
<status status="PASS" starttime="20190817 19:24:50.453" endtime="20190817 19:24:50.453"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.454" endtime="20190817 19:24:50.455"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.454" endtime="20190817 19:24:50.455"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.455" endtime="20190817 19:24:50.456"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.455" endtime="20190817 19:24:50.456"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.457" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.457" endtime="20190817 19:24:50.457"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.457" endtime="20190817 19:24:50.457"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.458" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.458" endtime="20190817 19:24:50.458"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.458" endtime="20190817 19:24:50.459"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.459" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.459" endtime="20190817 19:24:50.459"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.459" endtime="20190817 19:24:50.459"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.460" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.460" endtime="20190817 19:24:50.460"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.460" endtime="20190817 19:24:50.460"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.461" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.461" endtime="20190817 19:24:50.461"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.460" endtime="20190817 19:24:50.461"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.461" endtime="20190817 19:24:50.462"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.461" endtime="20190817 19:24:50.462"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.463" level="INFO">Length is 22</msg>
<status status="PASS" starttime="20190817 19:24:50.462" endtime="20190817 19:24:50.463"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.462" endtime="20190817 19:24:50.463"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.464" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.464" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.464" endtime="20190817 19:24:50.464"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.464" endtime="20190817 19:24:50.465"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.465" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:50.465" endtime="20190817 19:24:50.466"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.465" endtime="20190817 19:24:50.466"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.466" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.466" endtime="20190817 19:24:50.466"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.466" endtime="20190817 19:24:50.466"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.467" level="INFO">Length is 20</msg>
<status status="PASS" starttime="20190817 19:24:50.467" endtime="20190817 19:24:50.467"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.466" endtime="20190817 19:24:50.467"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.467" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.467" endtime="20190817 19:24:50.468"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.467" endtime="20190817 19:24:50.468"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.468" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.468" endtime="20190817 19:24:50.468"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.468" endtime="20190817 19:24:50.468"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.469" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.469" endtime="20190817 19:24:50.469"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.468" endtime="20190817 19:24:50.469"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.469" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.469" endtime="20190817 19:24:50.470"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.469" endtime="20190817 19:24:50.470"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.442" endtime="20190817 19:24:50.470"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.442" endtime="20190817 19:24:50.470"></status>
</kw>
<kw name="${item} = GE" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.470" level="INFO">&amp;{parameter} = { locale=GE }</msg>
<status status="PASS" starttime="20190817 19:24:50.470" endtime="20190817 19:24:50.470"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.482" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.471" endtime="20190817 19:24:50.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.482" endtime="20190817 19:24:50.483"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.484" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GE","personal_profile":{"first_name":"ლამარა","last_name":"ჭელიძე","date_of_birth":"1983-08-17T00:00:00.000Z","mobile_phone":"+995551133988","national_id":""},"address":{"country":"GE","address_line1":"25903 იოსებ ჩიხი","address_line2":"","city":"ახალი შორენასკარი","post_code":"0187","region_name":"South Carolina","landline":"+995551133988","first_name":"ლამარა","last_name":"ჭელიძე","company":"Umbrella Corp. GE"}}} </msg>
<msg timestamp="20190817 19:24:50.484" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.484" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GE', 'personal_profile': {'first_name': 'ლამარა', 'last_name': 'ჭელიძე', 'date_of_birth': '1983-08-17T00:00:00.000Z', 'mobile_phone': '+995551133988'...</msg>
<status status="PASS" starttime="20190817 19:24:50.483" endtime="20190817 19:24:50.484"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.485" endtime="20190817 19:24:50.485"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.484" endtime="20190817 19:24:50.485"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.485" endtime="20190817 19:24:50.486"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.485" endtime="20190817 19:24:50.486"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.487" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.487" endtime="20190817 19:24:50.488"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.486" endtime="20190817 19:24:50.488"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.489" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.488" endtime="20190817 19:24:50.489"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.488" endtime="20190817 19:24:50.489"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.490" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.489" endtime="20190817 19:24:50.490"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.489" endtime="20190817 19:24:50.490"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.491" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.490" endtime="20190817 19:24:50.491"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.490" endtime="20190817 19:24:50.491"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.492" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.491" endtime="20190817 19:24:50.492"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.491" endtime="20190817 19:24:50.492"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.493" endtime="20190817 19:24:50.493"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.492" endtime="20190817 19:24:50.493"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.494" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.494" endtime="20190817 19:24:50.494"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.493" endtime="20190817 19:24:50.494"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.495" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.495" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.495" endtime="20190817 19:24:50.495"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.494" endtime="20190817 19:24:50.495"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.496" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.496" endtime="20190817 19:24:50.496"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.496" endtime="20190817 19:24:50.496"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.497" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.497" endtime="20190817 19:24:50.498"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.497" endtime="20190817 19:24:50.498"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.499" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.498" endtime="20190817 19:24:50.499"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.498" endtime="20190817 19:24:50.499"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.500" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.499" endtime="20190817 19:24:50.500"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.499" endtime="20190817 19:24:50.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.500" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.500" endtime="20190817 19:24:50.500"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.500" endtime="20190817 19:24:50.501"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.501" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.501" endtime="20190817 19:24:50.501"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.501" endtime="20190817 19:24:50.501"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.502" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.502" endtime="20190817 19:24:50.502"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.502" endtime="20190817 19:24:50.502"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.470" endtime="20190817 19:24:50.502"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.470" endtime="20190817 19:24:50.502"></status>
</kw>
<kw name="${item} = DE" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.504" level="INFO">&amp;{parameter} = { locale=DE }</msg>
<status status="PASS" starttime="20190817 19:24:50.503" endtime="20190817 19:24:50.504"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.512" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.504" endtime="20190817 19:24:50.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.512" endtime="20190817 19:24:50.513"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.514" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DE","personal_profile":{"first_name":"Kilian","last_name":"Müller","date_of_birth":"1996-08-17T00:00:00.000Z","mobile_phone":"+491604540284","national_id":"T220001293"},"address":{"country":"DE","address_line1":"155 David Garden","address_line2":"","city":"Arneland","post_code":"62287","region_name":"Bayern","landline":"+491604540284","first_name":"Kilian","last_name":"Müller","company":"Umbrella Corp. DE"}}} </msg>
<msg timestamp="20190817 19:24:50.514" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.514" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DE', 'personal_profile': {'first_name': 'Kilian', 'last_name': 'Müller', 'date_of_birth': '1996-08-17T00:00:00.000Z', 'mobile_phone': '+491604540284'...</msg>
<status status="PASS" starttime="20190817 19:24:50.513" endtime="20190817 19:24:50.514"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.515" endtime="20190817 19:24:50.516"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.515" endtime="20190817 19:24:50.516"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.516" endtime="20190817 19:24:50.517"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.516" endtime="20190817 19:24:50.517"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.518" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.518" endtime="20190817 19:24:50.518"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.518" endtime="20190817 19:24:50.518"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.519" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.519" endtime="20190817 19:24:50.519"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.518" endtime="20190817 19:24:50.519"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.520" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.520" endtime="20190817 19:24:50.520"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.519" endtime="20190817 19:24:50.520"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.521" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.520" endtime="20190817 19:24:50.521"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.520" endtime="20190817 19:24:50.521"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.521" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.521" endtime="20190817 19:24:50.521"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.521" endtime="20190817 19:24:50.522"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.522" endtime="20190817 19:24:50.522"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.522" endtime="20190817 19:24:50.522"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.523" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.523" endtime="20190817 19:24:50.523"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.522" endtime="20190817 19:24:50.523"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.524" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.524" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.524" endtime="20190817 19:24:50.524"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.523" endtime="20190817 19:24:50.524"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.525" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.525" endtime="20190817 19:24:50.525"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.524" endtime="20190817 19:24:50.525"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.526" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.525" endtime="20190817 19:24:50.526"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.525" endtime="20190817 19:24:50.526"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.527" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.526" endtime="20190817 19:24:50.527"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.526" endtime="20190817 19:24:50.527"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.528" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.528" endtime="20190817 19:24:50.528"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.528" endtime="20190817 19:24:50.529"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.529" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.529" endtime="20190817 19:24:50.529"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.529" endtime="20190817 19:24:50.529"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.530" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.530" endtime="20190817 19:24:50.531"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.530" endtime="20190817 19:24:50.531"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.531" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.531" endtime="20190817 19:24:50.531"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.531" endtime="20190817 19:24:50.532"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.503" endtime="20190817 19:24:50.532"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.503" endtime="20190817 19:24:50.532"></status>
</kw>
<kw name="${item} = GR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.533" level="INFO">&amp;{parameter} = { locale=GR }</msg>
<status status="PASS" starttime="20190817 19:24:50.532" endtime="20190817 19:24:50.533"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.539" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.533" endtime="20190817 19:24:50.539"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.539" endtime="20190817 19:24:50.540"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.541" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GR","personal_profile":{"first_name":"Βουκόλος","last_name":"Γεωργιάδης","date_of_birth":"1999-08-17T00:00:00.000Z","mobile_phone":"+306905182749","national_id":""},"address":{"country":"GR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+306905182749","first_name":"Βουκόλος","last_name":"Γεωργιάδης","company":"Umbrella Corp. GR"}}} </msg>
<msg timestamp="20190817 19:24:50.541" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.541" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GR', 'personal_profile': {'first_name': 'Βουκόλος', 'last_name': 'Γεωργιάδης', 'date_of_birth': '1999-08-17T00:00:00.000Z', 'mobile_phone': '+3069051...</msg>
<status status="PASS" starttime="20190817 19:24:50.540" endtime="20190817 19:24:50.541"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.542" endtime="20190817 19:24:50.542"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.541" endtime="20190817 19:24:50.542"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.543" endtime="20190817 19:24:50.544"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.542" endtime="20190817 19:24:50.544"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.545" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.544" endtime="20190817 19:24:50.545"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.544" endtime="20190817 19:24:50.545"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.546" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.545" endtime="20190817 19:24:50.546"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.545" endtime="20190817 19:24:50.546"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.547" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.546" endtime="20190817 19:24:50.547"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.546" endtime="20190817 19:24:50.547"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.547" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.547" endtime="20190817 19:24:50.548"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.547" endtime="20190817 19:24:50.548"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.548" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.548" endtime="20190817 19:24:50.548"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.548" endtime="20190817 19:24:50.548"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.549" endtime="20190817 19:24:50.549"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.549" endtime="20190817 19:24:50.549"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.550" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.550" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.549" endtime="20190817 19:24:50.550"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.549" endtime="20190817 19:24:50.550"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.550" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.550" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.550" endtime="20190817 19:24:50.550"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.550" endtime="20190817 19:24:50.551"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.551" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.551" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.551" endtime="20190817 19:24:50.551"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.551" endtime="20190817 19:24:50.551"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.552" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.552" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.552" endtime="20190817 19:24:50.553"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.552" endtime="20190817 19:24:50.553"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.553" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.553" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.553" endtime="20190817 19:24:50.553"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.553" endtime="20190817 19:24:50.553"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.554" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.554" endtime="20190817 19:24:50.554"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.554" endtime="20190817 19:24:50.554"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.555" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.554" endtime="20190817 19:24:50.555"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.554" endtime="20190817 19:24:50.555"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.555" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:50.555" endtime="20190817 19:24:50.555"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.555" endtime="20190817 19:24:50.555"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.556" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.556" endtime="20190817 19:24:50.556"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.556" endtime="20190817 19:24:50.556"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.532" endtime="20190817 19:24:50.556"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.532" endtime="20190817 19:24:50.556"></status>
</kw>
<kw name="${item} = HU" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.557" level="INFO">&amp;{parameter} = { locale=HU }</msg>
<status status="PASS" starttime="20190817 19:24:50.557" endtime="20190817 19:24:50.557"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.562" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.557" endtime="20190817 19:24:50.563"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.563" endtime="20190817 19:24:50.564"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.564" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"HU","personal_profile":{"first_name":"Rezső","last_name":"Jani","date_of_birth":"1987-08-17T00:00:00.000Z","mobile_phone":"+36307260930","national_id":""},"address":{"country":"HU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+36307260930","first_name":"Rezső","last_name":"Jani","company":"Umbrella Corp. HU"}}} </msg>
<msg timestamp="20190817 19:24:50.564" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.565" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'HU', 'personal_profile': {'first_name': 'Rezső', 'last_name': 'Jani', 'date_of_birth': '1987-08-17T00:00:00.000Z', 'mobile_phone': '+36307260930', 'n...</msg>
<status status="PASS" starttime="20190817 19:24:50.564" endtime="20190817 19:24:50.565"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.565" endtime="20190817 19:24:50.565"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.565" endtime="20190817 19:24:50.566"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.566" endtime="20190817 19:24:50.567"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.566" endtime="20190817 19:24:50.567"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.567" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.567" endtime="20190817 19:24:50.568"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.567" endtime="20190817 19:24:50.568"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.569" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.569" endtime="20190817 19:24:50.569"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.568" endtime="20190817 19:24:50.569"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.570" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.570" endtime="20190817 19:24:50.570"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.569" endtime="20190817 19:24:50.570"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.571" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.571" endtime="20190817 19:24:50.571"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.571" endtime="20190817 19:24:50.571"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.572" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.571" endtime="20190817 19:24:50.572"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.571" endtime="20190817 19:24:50.572"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.572" endtime="20190817 19:24:50.573"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.572" endtime="20190817 19:24:50.573"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.573" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.573" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.573" endtime="20190817 19:24:50.573"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.573" endtime="20190817 19:24:50.573"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.574" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.574" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.574" endtime="20190817 19:24:50.574"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.574" endtime="20190817 19:24:50.574"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.575" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.575" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.575" endtime="20190817 19:24:50.575"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.574" endtime="20190817 19:24:50.575"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.576" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.576" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.575" endtime="20190817 19:24:50.576"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.575" endtime="20190817 19:24:50.576"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.576" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.576" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.576" endtime="20190817 19:24:50.576"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.576" endtime="20190817 19:24:50.576"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.584" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.577" endtime="20190817 19:24:50.584"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.576" endtime="20190817 19:24:50.584"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.585" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.585" endtime="20190817 19:24:50.585"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.584" endtime="20190817 19:24:50.585"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.585" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:50.585" endtime="20190817 19:24:50.585"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.585" endtime="20190817 19:24:50.586"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.586" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.586" endtime="20190817 19:24:50.586"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.586" endtime="20190817 19:24:50.586"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.557" endtime="20190817 19:24:50.586"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.556" endtime="20190817 19:24:50.586"></status>
</kw>
<kw name="${item} = IN" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.587" level="INFO">&amp;{parameter} = { locale=IN }</msg>
<status status="PASS" starttime="20190817 19:24:50.587" endtime="20190817 19:24:50.587"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.592" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.587" endtime="20190817 19:24:50.592"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.593" endtime="20190817 19:24:50.593"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.594" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IN","personal_profile":{"first_name":"Shreya","last_name":"Gavde","date_of_birth":"1988-08-17T00:00:00.000Z","mobile_phone":"+919236577895","national_id":""},"address":{"country":"IN","address_line1":"196 Adiga Isle","address_line2":"","city":"Deveshwarborough","post_code":"O7I 0D0","region_name":"Dadar and Nagar Haveli","landline":"+919236577895","first_name":"Shreya","last_name":"Gavde","company":"Umbrella Corp. IN"}}} </msg>
<msg timestamp="20190817 19:24:50.594" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.594" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IN', 'personal_profile': {'first_name': 'Shreya', 'last_name': 'Gavde', 'date_of_birth': '1988-08-17T00:00:00.000Z', 'mobile_phone': '+919236577895',...</msg>
<status status="PASS" starttime="20190817 19:24:50.593" endtime="20190817 19:24:50.594"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.594" endtime="20190817 19:24:50.595"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.594" endtime="20190817 19:24:50.595"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.596" endtime="20190817 19:24:50.597"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.596" endtime="20190817 19:24:50.597"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.598" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.597" endtime="20190817 19:24:50.598"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.597" endtime="20190817 19:24:50.598"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.599" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.598" endtime="20190817 19:24:50.599"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.598" endtime="20190817 19:24:50.599"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.600" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.599" endtime="20190817 19:24:50.600"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.599" endtime="20190817 19:24:50.600"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.601" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.601" endtime="20190817 19:24:50.601"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.600" endtime="20190817 19:24:50.601"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.602" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.601" endtime="20190817 19:24:50.602"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.601" endtime="20190817 19:24:50.602"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.602" endtime="20190817 19:24:50.603"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.602" endtime="20190817 19:24:50.603"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.603" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.603" endtime="20190817 19:24:50.604"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.603" endtime="20190817 19:24:50.604"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.604" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.605" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.604" endtime="20190817 19:24:50.605"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.604" endtime="20190817 19:24:50.605"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.605" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:50.605" endtime="20190817 19:24:50.605"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.605" endtime="20190817 19:24:50.605"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.606" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.606" endtime="20190817 19:24:50.606"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.605" endtime="20190817 19:24:50.606"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.607" level="INFO">Length is 22</msg>
<status status="PASS" starttime="20190817 19:24:50.606" endtime="20190817 19:24:50.607"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.606" endtime="20190817 19:24:50.607"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.607" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.607" endtime="20190817 19:24:50.607"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.607" endtime="20190817 19:24:50.607"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.608" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.608" endtime="20190817 19:24:50.608"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.607" endtime="20190817 19:24:50.608"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.609" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.608" endtime="20190817 19:24:50.609"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.608" endtime="20190817 19:24:50.609"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.610" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.609" endtime="20190817 19:24:50.610"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.609" endtime="20190817 19:24:50.610"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.587" endtime="20190817 19:24:50.610"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.587" endtime="20190817 19:24:50.610"></status>
</kw>
<kw name="${item} = IR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.611" level="INFO">&amp;{parameter} = { locale=IR }</msg>
<status status="PASS" starttime="20190817 19:24:50.610" endtime="20190817 19:24:50.611"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.622" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.611" endtime="20190817 19:24:50.622"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.623" endtime="20190817 19:24:50.624"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.625" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IR","personal_profile":{"first_name":"هانیه","last_name":"نامور","date_of_birth":"1970-08-17T00:00:00.000Z","mobile_phone":"+989909744040","national_id":""},"address":{"country":"IR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+989909744040","first_name":"هانیه","last_name":"نامور","company":"Umbrella Corp. IR"}}} </msg>
<msg timestamp="20190817 19:24:50.625" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.625" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IR', 'personal_profile': {'first_name': 'هانیه', 'last_name': 'نامور', 'date_of_birth': '1970-08-17T00:00:00.000Z', 'mobile_phone': '+989909744040', ...</msg>
<status status="PASS" starttime="20190817 19:24:50.624" endtime="20190817 19:24:50.625"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.631" endtime="20190817 19:24:50.632"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.631" endtime="20190817 19:24:50.632"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.632" endtime="20190817 19:24:50.634"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.632" endtime="20190817 19:24:50.634"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.634" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.634" endtime="20190817 19:24:50.634"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.634" endtime="20190817 19:24:50.634"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.635" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.635" endtime="20190817 19:24:50.635"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.634" endtime="20190817 19:24:50.635"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.636" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.635" endtime="20190817 19:24:50.636"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.635" endtime="20190817 19:24:50.636"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.636" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.636" endtime="20190817 19:24:50.636"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.636" endtime="20190817 19:24:50.636"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.637" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.637" endtime="20190817 19:24:50.637"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.637" endtime="20190817 19:24:50.637"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.638" endtime="20190817 19:24:50.638"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.637" endtime="20190817 19:24:50.638"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.639" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.639" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.638" endtime="20190817 19:24:50.639"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.638" endtime="20190817 19:24:50.639"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.639" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.639" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.639" endtime="20190817 19:24:50.640"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.639" endtime="20190817 19:24:50.640"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.640" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.640" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.640" endtime="20190817 19:24:50.640"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.640" endtime="20190817 19:24:50.640"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.641" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.641" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.641" endtime="20190817 19:24:50.641"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.641" endtime="20190817 19:24:50.641"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.642" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.642" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.642" endtime="20190817 19:24:50.642"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.642" endtime="20190817 19:24:50.642"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.644" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.643" endtime="20190817 19:24:50.644"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.643" endtime="20190817 19:24:50.644"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.644" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.644" endtime="20190817 19:24:50.644"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.644" endtime="20190817 19:24:50.644"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.645" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.645" endtime="20190817 19:24:50.645"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.644" endtime="20190817 19:24:50.645"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.646" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.645" endtime="20190817 19:24:50.646"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.645" endtime="20190817 19:24:50.646"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.610" endtime="20190817 19:24:50.646"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.610" endtime="20190817 19:24:50.646"></status>
</kw>
<kw name="${item} = IL" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.647" level="INFO">&amp;{parameter} = { locale=IL }</msg>
<status status="PASS" starttime="20190817 19:24:50.647" endtime="20190817 19:24:50.647"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.652" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.647" endtime="20190817 19:24:50.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.652" endtime="20190817 19:24:50.838"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.839" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IL","personal_profile":{"first_name":"דנה","last_name":"פסטרנק","date_of_birth":"1996-08-17T00:00:00.000Z","mobile_phone":"+97268449234","national_id":""},"address":{"country":"IL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+97268449234","first_name":"דנה","last_name":"פסטרנק","company":"Umbrella Corp. IL"}}} </msg>
<msg timestamp="20190817 19:24:50.839" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.839" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IL', 'personal_profile': {'first_name': 'דנה', 'last_name': 'פסטרנק', 'date_of_birth': '1996-08-17T00:00:00.000Z', 'mobile_phone': '+97268449234', 'n...</msg>
<status status="PASS" starttime="20190817 19:24:50.838" endtime="20190817 19:24:50.839"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.840" endtime="20190817 19:24:50.840"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.839" endtime="20190817 19:24:50.840"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.841" endtime="20190817 19:24:50.841"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.840" endtime="20190817 19:24:50.841"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.842" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:50.842" endtime="20190817 19:24:50.842"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.842" endtime="20190817 19:24:50.842"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.843" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.843" endtime="20190817 19:24:50.843"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.842" endtime="20190817 19:24:50.843"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.844" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.844" endtime="20190817 19:24:50.844"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.843" endtime="20190817 19:24:50.844"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.845" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.845" endtime="20190817 19:24:50.845"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.844" endtime="20190817 19:24:50.845"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.846" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.845" endtime="20190817 19:24:50.846"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.845" endtime="20190817 19:24:50.846"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.846" endtime="20190817 19:24:50.847"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.846" endtime="20190817 19:24:50.847"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.847" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.847" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.847" endtime="20190817 19:24:50.847"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.847" endtime="20190817 19:24:50.905"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.906" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.907" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.906" endtime="20190817 19:24:50.907"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.905" endtime="20190817 19:24:50.908"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.909" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.910" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.908" endtime="20190817 19:24:50.910"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.908" endtime="20190817 19:24:50.910"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.911" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.912" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.911" endtime="20190817 19:24:50.912"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.910" endtime="20190817 19:24:50.912"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.914" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.914" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.913" endtime="20190817 19:24:50.914"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.913" endtime="20190817 19:24:50.914"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.916" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:50.915" endtime="20190817 19:24:50.916"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.914" endtime="20190817 19:24:50.916"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.917" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:50.917" endtime="20190817 19:24:50.917"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.916" endtime="20190817 19:24:50.917"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.919" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:50.918" endtime="20190817 19:24:50.919"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.918" endtime="20190817 19:24:50.919"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.921" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.920" endtime="20190817 19:24:50.921"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.919" endtime="20190817 19:24:50.921"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.646" endtime="20190817 19:24:50.921"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.646" endtime="20190817 19:24:50.921"></status>
</kw>
<kw name="${item} = IT" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.923" level="INFO">&amp;{parameter} = { locale=IT }</msg>
<status status="PASS" starttime="20190817 19:24:50.922" endtime="20190817 19:24:50.923"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.939" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.924" endtime="20190817 19:24:50.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.940" endtime="20190817 19:24:50.940"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.941" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IT","personal_profile":{"first_name":"Paolo","last_name":"Bernardi","date_of_birth":"1979-08-17T00:00:00.000Z","mobile_phone":"+393477100320","national_id":"BRNPLA79M05F839F"},"address":{"country":"IT","address_line1":"4183 Caputo Strada","address_line2":"","city":"Borgo Loredana","post_code":"15726","region_name":"Trapani","landline":"+393477100320","first_name":"Paolo","last_name":"Bernardi","company":"Umbrella Corp. IT"}}} </msg>
<msg timestamp="20190817 19:24:50.941" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.941" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IT', 'personal_profile': {'first_name': 'Paolo', 'last_name': 'Bernardi', 'date_of_birth': '1979-08-17T00:00:00.000Z', 'mobile_phone': '+393477100320...</msg>
<status status="PASS" starttime="20190817 19:24:50.940" endtime="20190817 19:24:50.941"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.942" endtime="20190817 19:24:50.942"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.941" endtime="20190817 19:24:50.942"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.943" endtime="20190817 19:24:50.943"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.942" endtime="20190817 19:24:50.944"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.945" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.944" endtime="20190817 19:24:50.945"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.944" endtime="20190817 19:24:50.945"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.945" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.945" endtime="20190817 19:24:50.946"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.945" endtime="20190817 19:24:50.946"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.946" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:50.946" endtime="20190817 19:24:50.946"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.946" endtime="20190817 19:24:50.946"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.947" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.947" endtime="20190817 19:24:50.947"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.946" endtime="20190817 19:24:50.947"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:50.948" level="INFO">Length is 23</msg>
<status status="PASS" starttime="20190817 19:24:50.948" endtime="20190817 19:24:50.948"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.947" endtime="20190817 19:24:50.948"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.948" endtime="20190817 19:24:50.949"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.948" endtime="20190817 19:24:50.949"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.949" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20190817 19:24:50.949" endtime="20190817 19:24:50.950"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.949" endtime="20190817 19:24:50.950"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.978" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:50.979" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:50.950" endtime="20190817 19:24:50.979"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.950" endtime="20190817 19:24:50.979"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.980" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:50.980" endtime="20190817 19:24:50.980"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.979" endtime="20190817 19:24:50.980"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.981" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.981" endtime="20190817 19:24:50.981"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.981" endtime="20190817 19:24:50.981"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.982" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:50.982" endtime="20190817 19:24:50.982"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.982" endtime="20190817 19:24:50.982"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.983" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:50.983" endtime="20190817 19:24:50.983"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.982" endtime="20190817 19:24:50.983"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.984" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:50.983" endtime="20190817 19:24:50.984"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.983" endtime="20190817 19:24:50.984"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.984" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:50.984" endtime="20190817 19:24:50.984"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.984" endtime="20190817 19:24:50.984"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.985" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:50.985" endtime="20190817 19:24:50.985"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.984" endtime="20190817 19:24:50.986"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.922" endtime="20190817 19:24:50.986"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.921" endtime="20190817 19:24:50.986"></status>
</kw>
<kw name="${item} = JP" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:50.987" level="INFO">&amp;{parameter} = { locale=JP }</msg>
<status status="PASS" starttime="20190817 19:24:50.987" endtime="20190817 19:24:50.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:50.995" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:50.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.987" endtime="20190817 19:24:50.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:50.996" endtime="20190817 19:24:50.997"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:50.998" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"JP","personal_profile":{"first_name":"功","last_name":"佐々木","date_of_birth":"1997-08-17T00:00:00.000Z","mobile_phone":"+8107091554752","national_id":""},"address":{"country":"JP","address_line1":"87660 伊藤 Ferry","address_line2":"","city":"陽翔市","post_code":"931-8583","region_name":"沖縄県","landline":"+8107091554752","first_name":"功","last_name":"佐々木","company":"Umbrella Corp. JP"}}} </msg>
<msg timestamp="20190817 19:24:50.998" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:50.998" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'JP', 'personal_profile': {'first_name': '功', 'last_name': '佐々木', 'date_of_birth': '1997-08-17T00:00:00.000Z', 'mobile_phone': '+8107091554752', 'nati...</msg>
<status status="PASS" starttime="20190817 19:24:50.997" endtime="20190817 19:24:50.998"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:50.999" endtime="20190817 19:24:50.999"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:50.998" endtime="20190817 19:24:50.999"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.000" endtime="20190817 19:24:51.001"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.000" endtime="20190817 19:24:51.001"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.002" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:51.002" endtime="20190817 19:24:51.002"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.001" endtime="20190817 19:24:51.003"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.004" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.003" endtime="20190817 19:24:51.004"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.003" endtime="20190817 19:24:51.004"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.005" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.004" endtime="20190817 19:24:51.005"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.004" endtime="20190817 19:24:51.006"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.007" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.006" endtime="20190817 19:24:51.007"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.006" endtime="20190817 19:24:51.007"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.008" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.008" endtime="20190817 19:24:51.008"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.007" endtime="20190817 19:24:51.008"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.009" endtime="20190817 19:24:51.010"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.009" endtime="20190817 19:24:51.010"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.011" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.010" endtime="20190817 19:24:51.011"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.010" endtime="20190817 19:24:51.011"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.012" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.012" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.011" endtime="20190817 19:24:51.012"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.011" endtime="20190817 19:24:51.012"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.013" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.013" endtime="20190817 19:24:51.013"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.012" endtime="20190817 19:24:51.013"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.023" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:51.023" endtime="20190817 19:24:51.023"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.022" endtime="20190817 19:24:51.023"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.024" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.024" endtime="20190817 19:24:51.024"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.023" endtime="20190817 19:24:51.024"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.025" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.025" endtime="20190817 19:24:51.025"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.025" endtime="20190817 19:24:51.025"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.026" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:51.026" endtime="20190817 19:24:51.026"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.025" endtime="20190817 19:24:51.026"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.027" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.027" endtime="20190817 19:24:51.027"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.027" endtime="20190817 19:24:51.028"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.028" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.028" endtime="20190817 19:24:51.029"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.028" endtime="20190817 19:24:51.029"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.986" endtime="20190817 19:24:51.029"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:50.986" endtime="20190817 19:24:51.029"></status>
</kw>
<kw name="${item} = KR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.030" level="INFO">&amp;{parameter} = { locale=KR }</msg>
<status status="PASS" starttime="20190817 19:24:51.030" endtime="20190817 19:24:51.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.036" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.030" endtime="20190817 19:24:51.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.036" endtime="20190817 19:24:51.037"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.037" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KR","personal_profile":{"first_name":"민석","last_name":"석","date_of_birth":"1997-08-17T00:00:00.000Z","mobile_phone":"+82109025940","national_id":""},"address":{"country":"KR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+82109025940","first_name":"민석","last_name":"석","company":"Umbrella Corp. KR"}}} </msg>
<msg timestamp="20190817 19:24:51.037" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.038" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KR', 'personal_profile': {'first_name': '민석', 'last_name': '석', 'date_of_birth': '1997-08-17T00:00:00.000Z', 'mobile_phone': '+82109025940', 'nationa...</msg>
<status status="PASS" starttime="20190817 19:24:51.037" endtime="20190817 19:24:51.038"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.038" endtime="20190817 19:24:51.038"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.038" endtime="20190817 19:24:51.038"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.039" endtime="20190817 19:24:51.039"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.038" endtime="20190817 19:24:51.039"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.039" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20190817 19:24:51.039" endtime="20190817 19:24:51.039"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.039" endtime="20190817 19:24:51.040"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.040" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:51.040" endtime="20190817 19:24:51.040"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.040" endtime="20190817 19:24:51.040"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.041" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.040" endtime="20190817 19:24:51.041"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.040" endtime="20190817 19:24:51.041"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.041" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.041" endtime="20190817 19:24:51.041"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.041" endtime="20190817 19:24:51.041"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.042" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.042" endtime="20190817 19:24:51.042"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.041" endtime="20190817 19:24:51.042"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.042" endtime="20190817 19:24:51.043"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.042" endtime="20190817 19:24:51.043"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.044" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.044" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.043" endtime="20190817 19:24:51.045"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.043" endtime="20190817 19:24:51.045"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.045" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.045" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.045" endtime="20190817 19:24:51.045"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.045" endtime="20190817 19:24:51.045"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.046" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.046" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.046" endtime="20190817 19:24:51.046"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.045" endtime="20190817 19:24:51.046"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.047" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.047" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.046" endtime="20190817 19:24:51.047"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.046" endtime="20190817 19:24:51.047"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.047" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.048" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.047" endtime="20190817 19:24:51.048"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.047" endtime="20190817 19:24:51.048"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.048" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.048" endtime="20190817 19:24:51.048"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.048" endtime="20190817 19:24:51.048"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.049" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20190817 19:24:51.049" endtime="20190817 19:24:51.049"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.048" endtime="20190817 19:24:51.049"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.049" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20190817 19:24:51.049" endtime="20190817 19:24:51.049"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.049" endtime="20190817 19:24:51.049"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.050" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.050" endtime="20190817 19:24:51.050"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.050" endtime="20190817 19:24:51.050"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.029" endtime="20190817 19:24:51.051"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.029" endtime="20190817 19:24:51.051"></status>
</kw>
<kw name="${item} = MX" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.052" level="INFO">&amp;{parameter} = { locale=MX }</msg>
<status status="PASS" starttime="20190817 19:24:51.052" endtime="20190817 19:24:51.052"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.057" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.052" endtime="20190817 19:24:51.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.057" endtime="20190817 19:24:51.057"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.058" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MX","personal_profile":{"first_name":"Joel","last_name":"Téllez","date_of_birth":"1994-08-17T00:00:00.000Z","mobile_phone":"+521366324136","national_id":""},"address":{"country":"MX","address_line1":"246 Miguel Senda","address_line2":"","city":"Los Cabos Amaliahaven","post_code":"80389","region_name":"Tamaulipas","landline":"+521366324136","first_name":"Joel","last_name":"Téllez","company":"Umbrella Corp. MX"}}} </msg>
<msg timestamp="20190817 19:24:51.058" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.058" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MX', 'personal_profile': {'first_name': 'Joel', 'last_name': 'Téllez', 'date_of_birth': '1994-08-17T00:00:00.000Z', 'mobile_phone': '+521366324136', ...</msg>
<status status="PASS" starttime="20190817 19:24:51.057" endtime="20190817 19:24:51.058"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.058" endtime="20190817 19:24:51.059"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.058" endtime="20190817 19:24:51.059"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.059" endtime="20190817 19:24:51.060"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.059" endtime="20190817 19:24:51.060"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.061" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.060" endtime="20190817 19:24:51.061"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.060" endtime="20190817 19:24:51.061"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.061" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.061" endtime="20190817 19:24:51.062"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.061" endtime="20190817 19:24:51.062"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.062" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.062" endtime="20190817 19:24:51.062"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.062" endtime="20190817 19:24:51.062"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.063" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.062" endtime="20190817 19:24:51.063"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.062" endtime="20190817 19:24:51.063"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.063" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.063" endtime="20190817 19:24:51.063"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.063" endtime="20190817 19:24:51.063"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.064" endtime="20190817 19:24:51.064"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.063" endtime="20190817 19:24:51.064"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.064" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:51.064" endtime="20190817 19:24:51.065"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.064" endtime="20190817 19:24:51.065"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.065" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.065" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.065" endtime="20190817 19:24:51.065"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.065" endtime="20190817 19:24:51.065"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.066" level="INFO">Length is 21</msg>
<status status="PASS" starttime="20190817 19:24:51.066" endtime="20190817 19:24:51.066"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.065" endtime="20190817 19:24:51.066"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.067" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.066" endtime="20190817 19:24:51.067"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.066" endtime="20190817 19:24:51.067"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.067" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.067" endtime="20190817 19:24:51.067"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.067" endtime="20190817 19:24:51.067"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.068" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.068" endtime="20190817 19:24:51.068"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.067" endtime="20190817 19:24:51.068"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.068" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.068" endtime="20190817 19:24:51.068"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.068" endtime="20190817 19:24:51.069"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.069" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.069" endtime="20190817 19:24:51.069"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.069" endtime="20190817 19:24:51.069"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.070" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.069" endtime="20190817 19:24:51.070"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.069" endtime="20190817 19:24:51.070"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.051" endtime="20190817 19:24:51.070"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.051" endtime="20190817 19:24:51.070"></status>
</kw>
<kw name="${item} = MA" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.071" level="INFO">&amp;{parameter} = { locale=MA }</msg>
<status status="PASS" starttime="20190817 19:24:51.070" endtime="20190817 19:24:51.071"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.079" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.071" endtime="20190817 19:24:51.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.080" endtime="20190817 19:24:51.080"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.080" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MA","personal_profile":{"first_name":"Titrit","last_name":"Abarcan","date_of_birth":"1995-08-17T00:00:00.000Z","mobile_phone":"+21267442700","national_id":""},"address":{"country":"MA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+21267442700","first_name":"Titrit","last_name":"Abarcan","company":"Umbrella Corp. MA"}}} </msg>
<msg timestamp="20190817 19:24:51.080" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.080" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MA', 'personal_profile': {'first_name': 'Titrit', 'last_name': 'Abarcan', 'date_of_birth': '1995-08-17T00:00:00.000Z', 'mobile_phone': '+21267442700'...</msg>
<status status="PASS" starttime="20190817 19:24:51.080" endtime="20190817 19:24:51.080"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.081" endtime="20190817 19:24:51.081"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.081" endtime="20190817 19:24:51.081"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.081" endtime="20190817 19:24:51.082"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.081" endtime="20190817 19:24:51.082"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.082" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.082" endtime="20190817 19:24:51.082"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.082" endtime="20190817 19:24:51.083"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.083" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.083" endtime="20190817 19:24:51.083"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.083" endtime="20190817 19:24:51.083"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.084" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.084" endtime="20190817 19:24:51.084"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.084" endtime="20190817 19:24:51.084"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.085" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.084" endtime="20190817 19:24:51.085"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.084" endtime="20190817 19:24:51.085"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.085" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.085" endtime="20190817 19:24:51.085"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.085" endtime="20190817 19:24:51.085"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.086" endtime="20190817 19:24:51.086"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.085" endtime="20190817 19:24:51.086"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.086" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.087" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.086" endtime="20190817 19:24:51.087"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.086" endtime="20190817 19:24:51.087"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.087" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.087" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.087" endtime="20190817 19:24:51.087"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.087" endtime="20190817 19:24:51.087"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.088" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.088" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.088" endtime="20190817 19:24:51.088"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.087" endtime="20190817 19:24:51.088"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.089" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.089" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.088" endtime="20190817 19:24:51.089"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.088" endtime="20190817 19:24:51.089"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.090" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.090" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.090" endtime="20190817 19:24:51.090"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.089" endtime="20190817 19:24:51.090"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.091" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.090" endtime="20190817 19:24:51.091"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.090" endtime="20190817 19:24:51.091"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.091" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.091" endtime="20190817 19:24:51.091"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.091" endtime="20190817 19:24:51.091"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.092" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.091" endtime="20190817 19:24:51.092"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.091" endtime="20190817 19:24:51.092"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.092" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.092" endtime="20190817 19:24:51.092"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.092" endtime="20190817 19:24:51.093"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.070" endtime="20190817 19:24:51.093"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.070" endtime="20190817 19:24:51.093"></status>
</kw>
<kw name="${item} = NP" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.094" level="INFO">&amp;{parameter} = { locale=NP }</msg>
<status status="PASS" starttime="20190817 19:24:51.093" endtime="20190817 19:24:51.094"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.103" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.094" endtime="20190817 19:24:51.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.103" endtime="20190817 19:24:51.104"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.104" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NP","personal_profile":{"first_name":"Binod","last_name":"Alam","date_of_birth":"1959-08-17T00:00:00.000Z","mobile_phone":"+9779838361080","national_id":""},"address":{"country":"NP","address_line1":"9152 Laxmi Dale","address_line2":"","city":"South Nikita","post_code":"","region_name":"Sunsari","landline":"+9779838361080","first_name":"Binod","last_name":"Alam","company":"Umbrella Corp. NP"}}} </msg>
<msg timestamp="20190817 19:24:51.104" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.104" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NP', 'personal_profile': {'first_name': 'Binod', 'last_name': 'Alam', 'date_of_birth': '1959-08-17T00:00:00.000Z', 'mobile_phone': '+9779838361080', ...</msg>
<status status="PASS" starttime="20190817 19:24:51.104" endtime="20190817 19:24:51.104"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.105" endtime="20190817 19:24:51.105"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.104" endtime="20190817 19:24:51.105"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.105" endtime="20190817 19:24:51.106"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.105" endtime="20190817 19:24:51.106"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.107" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.107" endtime="20190817 19:24:51.107"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.106" endtime="20190817 19:24:51.107"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.108" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.108" endtime="20190817 19:24:51.108"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.107" endtime="20190817 19:24:51.109"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.109" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.109" endtime="20190817 19:24:51.110"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.109" endtime="20190817 19:24:51.110"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.110" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.110" endtime="20190817 19:24:51.110"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.110" endtime="20190817 19:24:51.110"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.111" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.111" endtime="20190817 19:24:51.111"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.110" endtime="20190817 19:24:51.111"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.111" endtime="20190817 19:24:51.112"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.111" endtime="20190817 19:24:51.112"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.113" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:51.112" endtime="20190817 19:24:51.113"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.112" endtime="20190817 19:24:51.113"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.113" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.114" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.113" endtime="20190817 19:24:51.114"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.113" endtime="20190817 19:24:51.114"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.114" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.114" endtime="20190817 19:24:51.114"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.114" endtime="20190817 19:24:51.114"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.115" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.115" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.115" endtime="20190817 19:24:51.115"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.115" endtime="20190817 19:24:51.115"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.116" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.116" endtime="20190817 19:24:51.116"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.115" endtime="20190817 19:24:51.116"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.117" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.116" endtime="20190817 19:24:51.117"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.116" endtime="20190817 19:24:51.117"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.117" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.117" endtime="20190817 19:24:51.118"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.117" endtime="20190817 19:24:51.118"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.119" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.118" endtime="20190817 19:24:51.119"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.118" endtime="20190817 19:24:51.119"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.120" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.119" endtime="20190817 19:24:51.120"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.119" endtime="20190817 19:24:51.120"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.093" endtime="20190817 19:24:51.120"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.093" endtime="20190817 19:24:51.120"></status>
</kw>
<kw name="${item} = NL" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.121" level="INFO">&amp;{parameter} = { locale=NL }</msg>
<status status="PASS" starttime="20190817 19:24:51.121" endtime="20190817 19:24:51.121"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.131" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.121" endtime="20190817 19:24:51.131"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.132" endtime="20190817 19:24:51.132"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.132" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NL","personal_profile":{"first_name":"Willeke","last_name":"van der Linden","date_of_birth":"1984-08-17T00:00:00.000Z","mobile_phone":"+31618071815","national_id":"ABCDEFGHI"},"address":{"country":"NL","address_line1":"72018 Linden weg","address_line2":"","city":"Smitsstroom","post_code":"8712 HE","region_name":"Flevoland","landline":"+31618071815","first_name":"Willeke","last_name":"van der Linden","company":"Umbrella Corp. NL"}}} </msg>
<msg timestamp="20190817 19:24:51.132" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.132" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NL', 'personal_profile': {'first_name': 'Willeke', 'last_name': 'van der Linden', 'date_of_birth': '1984-08-17T00:00:00.000Z', 'mobile_phone': '+3161...</msg>
<status status="PASS" starttime="20190817 19:24:51.132" endtime="20190817 19:24:51.132"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.133" endtime="20190817 19:24:51.133"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.133" endtime="20190817 19:24:51.133"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.133" endtime="20190817 19:24:51.134"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.133" endtime="20190817 19:24:51.134"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.134" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.134" endtime="20190817 19:24:51.134"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.134" endtime="20190817 19:24:51.134"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.135" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.134" endtime="20190817 19:24:51.135"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.134" endtime="20190817 19:24:51.135"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.136" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.135" endtime="20190817 19:24:51.136"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.135" endtime="20190817 19:24:51.136"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.137" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.137" endtime="20190817 19:24:51.137"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.136" endtime="20190817 19:24:51.137"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.138" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:51.138" endtime="20190817 19:24:51.138"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.138" endtime="20190817 19:24:51.139"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.139" endtime="20190817 19:24:51.140"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.139" endtime="20190817 19:24:51.140"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.141" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:51.140" endtime="20190817 19:24:51.141"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.140" endtime="20190817 19:24:51.141"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.142" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.142" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.141" endtime="20190817 19:24:51.142"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.141" endtime="20190817 19:24:51.142"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.143" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:51.142" endtime="20190817 19:24:51.143"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.142" endtime="20190817 19:24:51.143"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.143" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.143" endtime="20190817 19:24:51.144"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.143" endtime="20190817 19:24:51.144"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.144" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:51.144" endtime="20190817 19:24:51.144"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.144" endtime="20190817 19:24:51.144"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.145" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.145" endtime="20190817 19:24:51.145"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.145" endtime="20190817 19:24:51.145"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.146" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.146" endtime="20190817 19:24:51.147"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.146" endtime="20190817 19:24:51.147"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.148" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.147" endtime="20190817 19:24:51.148"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.147" endtime="20190817 19:24:51.148"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.149" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.149" endtime="20190817 19:24:51.149"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.148" endtime="20190817 19:24:51.149"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.120" endtime="20190817 19:24:51.149"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.120" endtime="20190817 19:24:51.150"></status>
</kw>
<kw name="${item} = NZ" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.151" level="INFO">&amp;{parameter} = { locale=NZ }</msg>
<status status="PASS" starttime="20190817 19:24:51.150" endtime="20190817 19:24:51.151"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.158" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.151" endtime="20190817 19:24:51.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.158" endtime="20190817 19:24:51.158"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.159" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NZ","personal_profile":{"first_name":"Jacob","last_name":"Goodall","date_of_birth":"1964-08-17T00:00:00.000Z","mobile_phone":"+64258573159","national_id":""},"address":{"country":"NZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+64258573159","first_name":"Jacob","last_name":"Goodall","company":"Umbrella Corp. NZ"}}} </msg>
<msg timestamp="20190817 19:24:51.159" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.159" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NZ', 'personal_profile': {'first_name': 'Jacob', 'last_name': 'Goodall', 'date_of_birth': '1964-08-17T00:00:00.000Z', 'mobile_phone': '+64258573159',...</msg>
<status status="PASS" starttime="20190817 19:24:51.158" endtime="20190817 19:24:51.159"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.159" endtime="20190817 19:24:51.159"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.159" endtime="20190817 19:24:51.159"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.160" endtime="20190817 19:24:51.160"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.160" endtime="20190817 19:24:51.160"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.161" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.160" endtime="20190817 19:24:51.161"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.160" endtime="20190817 19:24:51.161"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.161" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.161" endtime="20190817 19:24:51.161"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.161" endtime="20190817 19:24:51.161"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.162" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.161" endtime="20190817 19:24:51.162"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.161" endtime="20190817 19:24:51.162"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.162" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.162" endtime="20190817 19:24:51.162"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.162" endtime="20190817 19:24:51.162"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.163" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.163" endtime="20190817 19:24:51.163"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.163" endtime="20190817 19:24:51.163"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.163" endtime="20190817 19:24:51.164"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.163" endtime="20190817 19:24:51.164"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.165" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.165" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.165" endtime="20190817 19:24:51.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.164" endtime="20190817 19:24:51.165"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.166" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.167" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.166" endtime="20190817 19:24:51.167"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.166" endtime="20190817 19:24:51.167"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.167" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.167" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.167" endtime="20190817 19:24:51.167"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.167" endtime="20190817 19:24:51.167"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.168" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.168" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.168" endtime="20190817 19:24:51.168"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.167" endtime="20190817 19:24:51.168"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.169" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.169" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.168" endtime="20190817 19:24:51.169"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.168" endtime="20190817 19:24:51.169"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.169" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.169" endtime="20190817 19:24:51.169"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.169" endtime="20190817 19:24:51.169"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.170" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.170" endtime="20190817 19:24:51.170"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.169" endtime="20190817 19:24:51.170"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.170" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.170" endtime="20190817 19:24:51.170"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.170" endtime="20190817 19:24:51.170"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.171" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.171" endtime="20190817 19:24:51.171"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.171" endtime="20190817 19:24:51.171"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.150" endtime="20190817 19:24:51.171"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.150" endtime="20190817 19:24:51.171"></status>
</kw>
<kw name="${item} = NG" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.172" level="INFO">&amp;{parameter} = { locale=NG }</msg>
<status status="PASS" starttime="20190817 19:24:51.172" endtime="20190817 19:24:51.172"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.178" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.172" endtime="20190817 19:24:51.179"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.179" endtime="20190817 19:24:51.179"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.180" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NG","personal_profile":{"first_name":"Kehinde","last_name":"Akande","date_of_birth":"1961-08-17T00:00:00.000Z","mobile_phone":"+23480452764","national_id":""},"address":{"country":"NG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+23480452764","first_name":"Kehinde","last_name":"Akande","company":"Umbrella Corp. NG"}}} </msg>
<msg timestamp="20190817 19:24:51.180" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.180" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NG', 'personal_profile': {'first_name': 'Kehinde', 'last_name': 'Akande', 'date_of_birth': '1961-08-17T00:00:00.000Z', 'mobile_phone': '+23480452764'...</msg>
<status status="PASS" starttime="20190817 19:24:51.180" endtime="20190817 19:24:51.180"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.180" endtime="20190817 19:24:51.181"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.180" endtime="20190817 19:24:51.181"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.181" endtime="20190817 19:24:51.182"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.181" endtime="20190817 19:24:51.182"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.182" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.182" endtime="20190817 19:24:51.183"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.182" endtime="20190817 19:24:51.183"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.183" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.183" endtime="20190817 19:24:51.183"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.183" endtime="20190817 19:24:51.184"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.184" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.184" endtime="20190817 19:24:51.184"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.184" endtime="20190817 19:24:51.184"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.185" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.185" endtime="20190817 19:24:51.185"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.184" endtime="20190817 19:24:51.185"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.186" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.186" endtime="20190817 19:24:51.186"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.185" endtime="20190817 19:24:51.186"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.187" endtime="20190817 19:24:51.187"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.187" endtime="20190817 19:24:51.187"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.188" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.188" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.188" endtime="20190817 19:24:51.188"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.187" endtime="20190817 19:24:51.188"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.189" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.189" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.189" endtime="20190817 19:24:51.189"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.189" endtime="20190817 19:24:51.189"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.190" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.191" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.190" endtime="20190817 19:24:51.191"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.190" endtime="20190817 19:24:51.191"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.192" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.192" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.191" endtime="20190817 19:24:51.192"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.191" endtime="20190817 19:24:51.192"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.194" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.195" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.193" endtime="20190817 19:24:51.195"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.192" endtime="20190817 19:24:51.196"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.196" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.196" endtime="20190817 19:24:51.196"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.196" endtime="20190817 19:24:51.196"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.197" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.197" endtime="20190817 19:24:51.197"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.197" endtime="20190817 19:24:51.197"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.198" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.197" endtime="20190817 19:24:51.198"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.197" endtime="20190817 19:24:51.198"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.199" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.199" endtime="20190817 19:24:51.199"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.198" endtime="20190817 19:24:51.200"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.171" endtime="20190817 19:24:51.200"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.171" endtime="20190817 19:24:51.200"></status>
</kw>
<kw name="${item} = NO" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.201" level="INFO">&amp;{parameter} = { locale=NO }</msg>
<status status="PASS" starttime="20190817 19:24:51.201" endtime="20190817 19:24:51.201"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.208" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.201" endtime="20190817 19:24:51.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.209" endtime="20190817 19:24:51.209"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.210" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NO","personal_profile":{"first_name":"Heidi","last_name":"Aas","date_of_birth":"1959-08-17T00:00:00.000Z","mobile_phone":"+4741752164","national_id":""},"address":{"country":"NO","address_line1":"76643 Thomas stubben","address_line2":"","city":"West Simenhelle","post_code":"8350","region_name":"","landline":"+4741752164","first_name":"Heidi","last_name":"Aas","company":"Umbrella Corp. NO"}}} </msg>
<msg timestamp="20190817 19:24:51.210" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.210" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NO', 'personal_profile': {'first_name': 'Heidi', 'last_name': 'Aas', 'date_of_birth': '1959-08-17T00:00:00.000Z', 'mobile_phone': '+4741752164', 'nat...</msg>
<status status="PASS" starttime="20190817 19:24:51.210" endtime="20190817 19:24:51.211"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.211" endtime="20190817 19:24:51.212"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.211" endtime="20190817 19:24:51.212"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.212" endtime="20190817 19:24:51.213"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.212" endtime="20190817 19:24:51.213"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.213" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.213" endtime="20190817 19:24:51.213"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.213" endtime="20190817 19:24:51.213"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.214" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.214" endtime="20190817 19:24:51.214"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.213" endtime="20190817 19:24:51.214"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.215" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.215" endtime="20190817 19:24:51.215"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.214" endtime="20190817 19:24:51.215"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.216" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:51.216" endtime="20190817 19:24:51.216"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.216" endtime="20190817 19:24:51.217"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.218" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.217" endtime="20190817 19:24:51.218"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.217" endtime="20190817 19:24:51.218"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.219" endtime="20190817 19:24:51.219"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.219" endtime="20190817 19:24:51.220"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.220" level="INFO">Length is 20</msg>
<status status="PASS" starttime="20190817 19:24:51.220" endtime="20190817 19:24:51.220"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.220" endtime="20190817 19:24:51.221"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.221" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.222" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.221" endtime="20190817 19:24:51.222"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.221" endtime="20190817 19:24:51.222"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.223" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:51.222" endtime="20190817 19:24:51.223"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.222" endtime="20190817 19:24:51.223"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.224" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.223" endtime="20190817 19:24:51.224"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.223" endtime="20190817 19:24:51.224"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.225" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.225" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.225" endtime="20190817 19:24:51.225"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.224" endtime="20190817 19:24:51.225"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.226" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20190817 19:24:51.226" endtime="20190817 19:24:51.226"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.226" endtime="20190817 19:24:51.226"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.228" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.227" endtime="20190817 19:24:51.228"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.227" endtime="20190817 19:24:51.228"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.229" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20190817 19:24:51.228" endtime="20190817 19:24:51.229"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.228" endtime="20190817 19:24:51.229"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.230" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.230" endtime="20190817 19:24:51.230"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.229" endtime="20190817 19:24:51.230"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.200" endtime="20190817 19:24:51.230"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.200" endtime="20190817 19:24:51.230"></status>
</kw>
<kw name="${item} = PK" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.231" level="INFO">&amp;{parameter} = { locale=PK }</msg>
<status status="PASS" starttime="20190817 19:24:51.231" endtime="20190817 19:24:51.231"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.240" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.231" endtime="20190817 19:24:51.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.241" endtime="20190817 19:24:51.242"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.243" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PK","personal_profile":{"first_name":"Momina","last_name":"Durrani","date_of_birth":"1968-08-17T00:00:00.000Z","mobile_phone":"+923094764900","national_id":""},"address":{"country":"PK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+923094764900","first_name":"Momina","last_name":"Durrani","company":"Umbrella Corp. PK"}}} </msg>
<msg timestamp="20190817 19:24:51.243" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.243" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PK', 'personal_profile': {'first_name': 'Momina', 'last_name': 'Durrani', 'date_of_birth': '1968-08-17T00:00:00.000Z', 'mobile_phone': '+923094764900...</msg>
<status status="PASS" starttime="20190817 19:24:51.242" endtime="20190817 19:24:51.243"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.244" endtime="20190817 19:24:51.245"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.244" endtime="20190817 19:24:51.245"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.245" endtime="20190817 19:24:51.246"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.245" endtime="20190817 19:24:51.246"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.247" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.247" endtime="20190817 19:24:51.247"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.246" endtime="20190817 19:24:51.247"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.248" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.248" endtime="20190817 19:24:51.248"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.247" endtime="20190817 19:24:51.249"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.249" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.249" endtime="20190817 19:24:51.250"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.249" endtime="20190817 19:24:51.250"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.251" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.250" endtime="20190817 19:24:51.251"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.250" endtime="20190817 19:24:51.251"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.252" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.251" endtime="20190817 19:24:51.252"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.251" endtime="20190817 19:24:51.252"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.253" endtime="20190817 19:24:51.253"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.252" endtime="20190817 19:24:51.253"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.254" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.255" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.254" endtime="20190817 19:24:51.255"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.254" endtime="20190817 19:24:51.255"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.256" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.256" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.255" endtime="20190817 19:24:51.256"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.255" endtime="20190817 19:24:51.256"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.257" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.257" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.257" endtime="20190817 19:24:51.257"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.256" endtime="20190817 19:24:51.257"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.258" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.259" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.258" endtime="20190817 19:24:51.259"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.257" endtime="20190817 19:24:51.259"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.260" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.260" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.259" endtime="20190817 19:24:51.260"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.259" endtime="20190817 19:24:51.260"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.260" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.260" endtime="20190817 19:24:51.261"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.260" endtime="20190817 19:24:51.261"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.261" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.261" endtime="20190817 19:24:51.261"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.261" endtime="20190817 19:24:51.261"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.262" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.261" endtime="20190817 19:24:51.262"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.261" endtime="20190817 19:24:51.262"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.262" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.262" endtime="20190817 19:24:51.263"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.262" endtime="20190817 19:24:51.263"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.230" endtime="20190817 19:24:51.263"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.230" endtime="20190817 19:24:51.263"></status>
</kw>
<kw name="${item} = PL" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.264" level="INFO">&amp;{parameter} = { locale=PL }</msg>
<status status="PASS" starttime="20190817 19:24:51.264" endtime="20190817 19:24:51.264"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.274" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.264" endtime="20190817 19:24:51.274"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.275" endtime="20190817 19:24:51.276"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.276" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PL","personal_profile":{"first_name":"Hildegarda","last_name":"Kołodziej","date_of_birth":"1961-08-17T00:00:00.000Z","mobile_phone":"+48604799771","national_id":"123456-12345"},"address":{"country":"PL","address_line1":"388 Sowa Cape","address_line2":"","city":"East Tacjana","post_code":"34-133","region_name":"Dolnośląskie","landline":"+48604799771","first_name":"Hildegarda","last_name":"Kołodziej","company":"Umbrella Corp. PL"}}} </msg>
<msg timestamp="20190817 19:24:51.276" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.276" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PL', 'personal_profile': {'first_name': 'Hildegarda', 'last_name': 'Kołodziej', 'date_of_birth': '1961-08-17T00:00:00.000Z', 'mobile_phone': '+486047...</msg>
<status status="PASS" starttime="20190817 19:24:51.276" endtime="20190817 19:24:51.276"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.277" endtime="20190817 19:24:51.277"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.276" endtime="20190817 19:24:51.277"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.278" endtime="20190817 19:24:51.278"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.277" endtime="20190817 19:24:51.278"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.279" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.279" endtime="20190817 19:24:51.280"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.279" endtime="20190817 19:24:51.280"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.281" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:51.280" endtime="20190817 19:24:51.281"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.280" endtime="20190817 19:24:51.281"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.281" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.281" endtime="20190817 19:24:51.281"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.281" endtime="20190817 19:24:51.281"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.282" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.282" endtime="20190817 19:24:51.282"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.282" endtime="20190817 19:24:51.283"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.283" level="INFO">Length is 19</msg>
<status status="PASS" starttime="20190817 19:24:51.283" endtime="20190817 19:24:51.283"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.283" endtime="20190817 19:24:51.283"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.284" endtime="20190817 19:24:51.284"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.284" endtime="20190817 19:24:51.284"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.285" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.285" endtime="20190817 19:24:51.285"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.285" endtime="20190817 19:24:51.286"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.286" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.287" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.286" endtime="20190817 19:24:51.287"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.286" endtime="20190817 19:24:51.287"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.287" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.287" endtime="20190817 19:24:51.287"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.287" endtime="20190817 19:24:51.287"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.288" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.288" endtime="20190817 19:24:51.288"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.287" endtime="20190817 19:24:51.288"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.288" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.288" endtime="20190817 19:24:51.288"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.288" endtime="20190817 19:24:51.288"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.289" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.289" endtime="20190817 19:24:51.289"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.289" endtime="20190817 19:24:51.289"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.289" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.289" endtime="20190817 19:24:51.290"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.289" endtime="20190817 19:24:51.290"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.290" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:51.290" endtime="20190817 19:24:51.290"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.290" endtime="20190817 19:24:51.290"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.291" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.290" endtime="20190817 19:24:51.291"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.290" endtime="20190817 19:24:51.291"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.263" endtime="20190817 19:24:51.291"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.263" endtime="20190817 19:24:51.291"></status>
</kw>
<kw name="${item} = PT" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.292" level="INFO">&amp;{parameter} = { locale=PT }</msg>
<status status="PASS" starttime="20190817 19:24:51.291" endtime="20190817 19:24:51.292"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.296" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.292" endtime="20190817 19:24:51.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.296" endtime="20190817 19:24:51.297"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.297" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PT","personal_profile":{"first_name":"Rodrigo","last_name":"Pinto","date_of_birth":"1975-08-17T00:00:00.000Z","mobile_phone":"+351912991747","national_id":""},"address":{"country":"PT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+351912991747","first_name":"Rodrigo","last_name":"Pinto","company":"Umbrella Corp. PT"}}} </msg>
<msg timestamp="20190817 19:24:51.297" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.298" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PT', 'personal_profile': {'first_name': 'Rodrigo', 'last_name': 'Pinto', 'date_of_birth': '1975-08-17T00:00:00.000Z', 'mobile_phone': '+351912991747'...</msg>
<status status="PASS" starttime="20190817 19:24:51.297" endtime="20190817 19:24:51.298"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.298" endtime="20190817 19:24:51.298"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.298" endtime="20190817 19:24:51.299"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.299" endtime="20190817 19:24:51.299"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.299" endtime="20190817 19:24:51.299"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.300" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.300" endtime="20190817 19:24:51.300"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.299" endtime="20190817 19:24:51.300"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.301" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.300" endtime="20190817 19:24:51.301"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.300" endtime="20190817 19:24:51.301"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.302" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.302" endtime="20190817 19:24:51.302"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.301" endtime="20190817 19:24:51.302"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.302" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.302" endtime="20190817 19:24:51.303"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.302" endtime="20190817 19:24:51.303"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.303" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.303" endtime="20190817 19:24:51.303"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.303" endtime="20190817 19:24:51.303"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.303" endtime="20190817 19:24:51.304"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.303" endtime="20190817 19:24:51.304"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.304" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.304" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.304" endtime="20190817 19:24:51.305"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.304" endtime="20190817 19:24:51.305"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.305" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.305" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.305" endtime="20190817 19:24:51.305"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.305" endtime="20190817 19:24:51.305"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.306" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.306" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.306" endtime="20190817 19:24:51.306"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.305" endtime="20190817 19:24:51.306"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.306" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.308" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.306" endtime="20190817 19:24:51.308"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.306" endtime="20190817 19:24:51.308"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.309" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.309" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.308" endtime="20190817 19:24:51.309"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.308" endtime="20190817 19:24:51.309"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.309" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.309" endtime="20190817 19:24:51.310"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.309" endtime="20190817 19:24:51.310"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.310" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.310" endtime="20190817 19:24:51.310"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.310" endtime="20190817 19:24:51.310"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.311" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.310" endtime="20190817 19:24:51.311"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.310" endtime="20190817 19:24:51.311"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.311" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.311" endtime="20190817 19:24:51.311"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.311" endtime="20190817 19:24:51.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.291" endtime="20190817 19:24:51.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.291" endtime="20190817 19:24:51.311"></status>
</kw>
<kw name="${item} = RO" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.312" level="INFO">&amp;{parameter} = { locale=RO }</msg>
<status status="PASS" starttime="20190817 19:24:51.312" endtime="20190817 19:24:51.312"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.320" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.312" endtime="20190817 19:24:51.320"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.320" endtime="20190817 19:24:51.320"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.321" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"RO","personal_profile":{"first_name":"Sabin","last_name":"Gojdu","date_of_birth":"1968-08-17T00:00:00.000Z","mobile_phone":"+40711774200","national_id":""},"address":{"country":"RO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+40711774200","first_name":"Sabin","last_name":"Gojdu","company":"Umbrella Corp. RO"}}} </msg>
<msg timestamp="20190817 19:24:51.321" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.321" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'RO', 'personal_profile': {'first_name': 'Sabin', 'last_name': 'Gojdu', 'date_of_birth': '1968-08-17T00:00:00.000Z', 'mobile_phone': '+40711774200', '...</msg>
<status status="PASS" starttime="20190817 19:24:51.320" endtime="20190817 19:24:51.321"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.321" endtime="20190817 19:24:51.321"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.321" endtime="20190817 19:24:51.321"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.322" endtime="20190817 19:24:51.322"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.322" endtime="20190817 19:24:51.322"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.323" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.322" endtime="20190817 19:24:51.323"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.322" endtime="20190817 19:24:51.323"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.323" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.323" endtime="20190817 19:24:51.323"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.323" endtime="20190817 19:24:51.323"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.324" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.324" endtime="20190817 19:24:51.324"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.323" endtime="20190817 19:24:51.324"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.325" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.325" endtime="20190817 19:24:51.325"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.325" endtime="20190817 19:24:51.325"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.326" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.325" endtime="20190817 19:24:51.326"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.325" endtime="20190817 19:24:51.326"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.326" endtime="20190817 19:24:51.326"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.326" endtime="20190817 19:24:51.326"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.327" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.327" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.326" endtime="20190817 19:24:51.327"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.326" endtime="20190817 19:24:51.327"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.327" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.327" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.327" endtime="20190817 19:24:51.328"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.327" endtime="20190817 19:24:51.328"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.328" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.328" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.328" endtime="20190817 19:24:51.328"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.328" endtime="20190817 19:24:51.328"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.329" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.329" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.329" endtime="20190817 19:24:51.329"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.328" endtime="20190817 19:24:51.329"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.329" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.330" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.329" endtime="20190817 19:24:51.330"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.329" endtime="20190817 19:24:51.330"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.330" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.330" endtime="20190817 19:24:51.330"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.330" endtime="20190817 19:24:51.330"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.331" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.331" endtime="20190817 19:24:51.331"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.331" endtime="20190817 19:24:51.331"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.331" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.331" endtime="20190817 19:24:51.332"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.331" endtime="20190817 19:24:51.332"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.332" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.332" endtime="20190817 19:24:51.332"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.332" endtime="20190817 19:24:51.332"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.312" endtime="20190817 19:24:51.332"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.311" endtime="20190817 19:24:51.332"></status>
</kw>
<kw name="${item} = RU" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.333" level="INFO">&amp;{parameter} = { locale=RU }</msg>
<status status="PASS" starttime="20190817 19:24:51.333" endtime="20190817 19:24:51.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.338" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.333" endtime="20190817 19:24:51.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.338" endtime="20190817 19:24:51.338"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.339" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"RU","personal_profile":{"first_name":"Даниил","last_name":"Окулов","date_of_birth":"1984-08-17T00:00:00.000Z","mobile_phone":"+79018915376","national_id":""},"address":{"country":"RU","address_line1":"933 Антон пр.","address_line2":"","city":"South Нинаfurt","post_code":"039251","region_name":"Псковская область","landline":"+79018915376","first_name":"Даниил","last_name":"Окулов","company":"Umbrella Corp. RU"}}} </msg>
<msg timestamp="20190817 19:24:51.339" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.339" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'RU', 'personal_profile': {'first_name': 'Даниил', 'last_name': 'Окулов', 'date_of_birth': '1984-08-17T00:00:00.000Z', 'mobile_phone': '+79018915376',...</msg>
<status status="PASS" starttime="20190817 19:24:51.338" endtime="20190817 19:24:51.339"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.339" endtime="20190817 19:24:51.339"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.339" endtime="20190817 19:24:51.339"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.340" endtime="20190817 19:24:51.340"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.339" endtime="20190817 19:24:51.340"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.340" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.340" endtime="20190817 19:24:51.341"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.340" endtime="20190817 19:24:51.341"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.341" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.341" endtime="20190817 19:24:51.341"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.341" endtime="20190817 19:24:51.341"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.342" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.341" endtime="20190817 19:24:51.342"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.341" endtime="20190817 19:24:51.342"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.342" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.342" endtime="20190817 19:24:51.342"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.342" endtime="20190817 19:24:51.342"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.343" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.342" endtime="20190817 19:24:51.343"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.342" endtime="20190817 19:24:51.343"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.343" endtime="20190817 19:24:51.343"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.343" endtime="20190817 19:24:51.344"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.344" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.344" endtime="20190817 19:24:51.344"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.344" endtime="20190817 19:24:51.344"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.345" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.345" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.344" endtime="20190817 19:24:51.345"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.344" endtime="20190817 19:24:51.345"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.345" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190817 19:24:51.345" endtime="20190817 19:24:51.345"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.345" endtime="20190817 19:24:51.346"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.346" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.346" endtime="20190817 19:24:51.346"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.346" endtime="20190817 19:24:51.346"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.347" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.346" endtime="20190817 19:24:51.347"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.346" endtime="20190817 19:24:51.347"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.347" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.347" endtime="20190817 19:24:51.347"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.347" endtime="20190817 19:24:51.347"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.348" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.348" endtime="20190817 19:24:51.348"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.347" endtime="20190817 19:24:51.348"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.348" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.348" endtime="20190817 19:24:51.348"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.348" endtime="20190817 19:24:51.348"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.349" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.349" endtime="20190817 19:24:51.349"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.348" endtime="20190817 19:24:51.349"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.332" endtime="20190817 19:24:51.349"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.332" endtime="20190817 19:24:51.349"></status>
</kw>
<kw name="${item} = SA" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.350" level="INFO">&amp;{parameter} = { locale=SA }</msg>
<status status="PASS" starttime="20190817 19:24:51.350" endtime="20190817 19:24:51.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.355" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.350" endtime="20190817 19:24:51.355"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.355" endtime="20190817 19:24:51.355"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.356" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SA","personal_profile":{"first_name":"لارين","last_name":"الصالح","date_of_birth":"1976-08-17T00:00:00.000Z","mobile_phone":"+966710608947","national_id":""},"address":{"country":"SA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+966710608947","first_name":"لارين","last_name":"الصالح","company":"Umbrella Corp. SA"}}} </msg>
<msg timestamp="20190817 19:24:51.356" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.356" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SA', 'personal_profile': {'first_name': 'لارين', 'last_name': 'الصالح', 'date_of_birth': '1976-08-17T00:00:00.000Z', 'mobile_phone': '+966710608947',...</msg>
<status status="PASS" starttime="20190817 19:24:51.355" endtime="20190817 19:24:51.356"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.356" endtime="20190817 19:24:51.356"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.356" endtime="20190817 19:24:51.356"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.357" endtime="20190817 19:24:51.357"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.356" endtime="20190817 19:24:51.357"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.358" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.357" endtime="20190817 19:24:51.358"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.357" endtime="20190817 19:24:51.358"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.358" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.358" endtime="20190817 19:24:51.358"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.358" endtime="20190817 19:24:51.358"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.359" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.359" endtime="20190817 19:24:51.359"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.358" endtime="20190817 19:24:51.359"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.360" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.359" endtime="20190817 19:24:51.360"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.359" endtime="20190817 19:24:51.360"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.361" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.361" endtime="20190817 19:24:51.361"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.360" endtime="20190817 19:24:51.361"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.362" endtime="20190817 19:24:51.362"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.361" endtime="20190817 19:24:51.363"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.364" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.364" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.363" endtime="20190817 19:24:51.364"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.363" endtime="20190817 19:24:51.364"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.365" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.365" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.364" endtime="20190817 19:24:51.365"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.364" endtime="20190817 19:24:51.365"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.366" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.367" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.366" endtime="20190817 19:24:51.367"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.366" endtime="20190817 19:24:51.367"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.367" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.367" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.367" endtime="20190817 19:24:51.367"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.367" endtime="20190817 19:24:51.368"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.368" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.368" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.368" endtime="20190817 19:24:51.368"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.368" endtime="20190817 19:24:51.368"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.369" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.369" endtime="20190817 19:24:51.369"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.368" endtime="20190817 19:24:51.369"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.370" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.370" endtime="20190817 19:24:51.370"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.369" endtime="20190817 19:24:51.370"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.371" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.371" endtime="20190817 19:24:51.371"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.370" endtime="20190817 19:24:51.371"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.372" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.371" endtime="20190817 19:24:51.372"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.371" endtime="20190817 19:24:51.372"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.349" endtime="20190817 19:24:51.372"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.349" endtime="20190817 19:24:51.372"></status>
</kw>
<kw name="${item} = SK" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.373" level="INFO">&amp;{parameter} = { locale=SK }</msg>
<status status="PASS" starttime="20190817 19:24:51.373" endtime="20190817 19:24:51.373"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.380" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.373" endtime="20190817 19:24:51.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.380" endtime="20190817 19:24:51.381"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.382" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SK","personal_profile":{"first_name":"Zuzana","last_name":"Hrianka","date_of_birth":"1968-08-17T00:00:00.000Z","mobile_phone":"+421901789345","national_id":""},"address":{"country":"SK","address_line1":"87052 Pupák Island","address_line2":"","city":"Zitaville","post_code":"20636","region_name":"","landline":"+421901789345","first_name":"Zuzana","last_name":"Hrianka","company":"Umbrella Corp. SK"}}} </msg>
<msg timestamp="20190817 19:24:51.382" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.382" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SK', 'personal_profile': {'first_name': 'Zuzana', 'last_name': 'Hrianka', 'date_of_birth': '1968-08-17T00:00:00.000Z', 'mobile_phone': '+421901789345...</msg>
<status status="PASS" starttime="20190817 19:24:51.381" endtime="20190817 19:24:51.382"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.382" endtime="20190817 19:24:51.383"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.382" endtime="20190817 19:24:51.383"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.384" endtime="20190817 19:24:51.385"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.383" endtime="20190817 19:24:51.385"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.386" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.385" endtime="20190817 19:24:51.386"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.385" endtime="20190817 19:24:51.387"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.388" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.387" endtime="20190817 19:24:51.388"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.387" endtime="20190817 19:24:51.388"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.389" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.389" endtime="20190817 19:24:51.389"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.388" endtime="20190817 19:24:51.389"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.390" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.389" endtime="20190817 19:24:51.390"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.389" endtime="20190817 19:24:51.390"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.390" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.390" endtime="20190817 19:24:51.390"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.390" endtime="20190817 19:24:51.391"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.391" endtime="20190817 19:24:51.391"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.391" endtime="20190817 19:24:51.391"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.392" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20190817 19:24:51.392" endtime="20190817 19:24:51.392"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.391" endtime="20190817 19:24:51.392"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.393" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.393" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.392" endtime="20190817 19:24:51.393"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.392" endtime="20190817 19:24:51.393"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.393" level="INFO">Length is 9</msg>
<status status="PASS" starttime="20190817 19:24:51.393" endtime="20190817 19:24:51.394"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.393" endtime="20190817 19:24:51.394"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.394" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.394" endtime="20190817 19:24:51.394"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.394" endtime="20190817 19:24:51.394"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.395" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.395" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.395" endtime="20190817 19:24:51.395"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.394" endtime="20190817 19:24:51.395"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.396" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.396" endtime="20190817 19:24:51.396"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.395" endtime="20190817 19:24:51.396"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.397" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.397" endtime="20190817 19:24:51.397"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.396" endtime="20190817 19:24:51.397"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.398" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.397" endtime="20190817 19:24:51.398"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.397" endtime="20190817 19:24:51.398"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.401" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.399" endtime="20190817 19:24:51.401"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.399" endtime="20190817 19:24:51.401"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.372" endtime="20190817 19:24:51.401"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.372" endtime="20190817 19:24:51.401"></status>
</kw>
<kw name="${item} = SI" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.402" level="INFO">&amp;{parameter} = { locale=SI }</msg>
<status status="PASS" starttime="20190817 19:24:51.402" endtime="20190817 19:24:51.402"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.408" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.402" endtime="20190817 19:24:51.408"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.408" endtime="20190817 19:24:51.409"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.409" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SI","personal_profile":{"first_name":"Nika","last_name":"Oblak","date_of_birth":"1986-08-17T00:00:00.000Z","mobile_phone":"+386203189461","national_id":""},"address":{"country":"SI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+386203189461","first_name":"Nika","last_name":"Oblak","company":"Umbrella Corp. SI"}}} </msg>
<msg timestamp="20190817 19:24:51.409" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.409" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SI', 'personal_profile': {'first_name': 'Nika', 'last_name': 'Oblak', 'date_of_birth': '1986-08-17T00:00:00.000Z', 'mobile_phone': '+386203189461', '...</msg>
<status status="PASS" starttime="20190817 19:24:51.409" endtime="20190817 19:24:51.409"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.410" endtime="20190817 19:24:51.410"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.409" endtime="20190817 19:24:51.410"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.411" endtime="20190817 19:24:51.411"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.410" endtime="20190817 19:24:51.411"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.412" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.411" endtime="20190817 19:24:51.412"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.411" endtime="20190817 19:24:51.412"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.413" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.413" endtime="20190817 19:24:51.413"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.412" endtime="20190817 19:24:51.413"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.414" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.414" endtime="20190817 19:24:51.414"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.413" endtime="20190817 19:24:51.414"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.415" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.415" endtime="20190817 19:24:51.415"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.414" endtime="20190817 19:24:51.415"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.416" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.416" endtime="20190817 19:24:51.416"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.415" endtime="20190817 19:24:51.416"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.416" endtime="20190817 19:24:51.417"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.416" endtime="20190817 19:24:51.417"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.418" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.418" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.417" endtime="20190817 19:24:51.418"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.417" endtime="20190817 19:24:51.418"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.419" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.419" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.418" endtime="20190817 19:24:51.419"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.418" endtime="20190817 19:24:51.419"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.420" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.420" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.419" endtime="20190817 19:24:51.420"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.419" endtime="20190817 19:24:51.420"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.420" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.421" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.420" endtime="20190817 19:24:51.421"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.420" endtime="20190817 19:24:51.421"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.422" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.422" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.421" endtime="20190817 19:24:51.422"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.421" endtime="20190817 19:24:51.422"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.423" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.422" endtime="20190817 19:24:51.423"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.422" endtime="20190817 19:24:51.423"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.424" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.423" endtime="20190817 19:24:51.424"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.423" endtime="20190817 19:24:51.424"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.424" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.424" endtime="20190817 19:24:51.425"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.424" endtime="20190817 19:24:51.425"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.425" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.425" endtime="20190817 19:24:51.425"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.425" endtime="20190817 19:24:51.425"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.401" endtime="20190817 19:24:51.426"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.401" endtime="20190817 19:24:51.426"></status>
</kw>
<kw name="${item} = ES" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.427" level="INFO">&amp;{parameter} = { locale=ES }</msg>
<status status="PASS" starttime="20190817 19:24:51.427" endtime="20190817 19:24:51.427"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.433" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.427" endtime="20190817 19:24:51.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.434" endtime="20190817 19:24:51.434"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.434" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ES","personal_profile":{"first_name":"Mónica","last_name":"Carmona","date_of_birth":"1960-08-17T00:00:00.000Z","mobile_phone":"+34632796606","national_id":""},"address":{"country":"ES","address_line1":"52046 Eloisa Vía","address_line2":"","city":"Javierport","post_code":"44561","region_name":"Ourense","landline":"+34632796606","first_name":"Mónica","last_name":"Carmona","company":"Umbrella Corp. ES"}}} </msg>
<msg timestamp="20190817 19:24:51.435" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.435" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ES', 'personal_profile': {'first_name': 'Mónica', 'last_name': 'Carmona', 'date_of_birth': '1960-08-17T00:00:00.000Z', 'mobile_phone': '+34632796606'...</msg>
<status status="PASS" starttime="20190817 19:24:51.434" endtime="20190817 19:24:51.435"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.435" endtime="20190817 19:24:51.436"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.435" endtime="20190817 19:24:51.436"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.436" endtime="20190817 19:24:51.436"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.436" endtime="20190817 19:24:51.437"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.437" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.437" endtime="20190817 19:24:51.437"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.437" endtime="20190817 19:24:51.438"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.438" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.438" endtime="20190817 19:24:51.438"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.438" endtime="20190817 19:24:51.438"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.440" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.440" endtime="20190817 19:24:51.440"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.439" endtime="20190817 19:24:51.441"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.442" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.442" endtime="20190817 19:24:51.442"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.441" endtime="20190817 19:24:51.442"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.443" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.442" endtime="20190817 19:24:51.443"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.442" endtime="20190817 19:24:51.443"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.443" endtime="20190817 19:24:51.443"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.443" endtime="20190817 19:24:51.444"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.444" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20190817 19:24:51.444" endtime="20190817 19:24:51.444"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.444" endtime="20190817 19:24:51.445"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.445" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.445" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.445" endtime="20190817 19:24:51.446"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.445" endtime="20190817 19:24:51.446"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.446" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.446" endtime="20190817 19:24:51.446"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.446" endtime="20190817 19:24:51.446"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.447" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.447" endtime="20190817 19:24:51.447"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.447" endtime="20190817 19:24:51.447"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.448" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.448" endtime="20190817 19:24:51.448"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.447" endtime="20190817 19:24:51.448"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.449" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.448" endtime="20190817 19:24:51.449"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.448" endtime="20190817 19:24:51.449"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.449" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.449" endtime="20190817 19:24:51.450"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.449" endtime="20190817 19:24:51.450"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.450" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.450" endtime="20190817 19:24:51.450"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.450" endtime="20190817 19:24:51.451"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.451" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.451" endtime="20190817 19:24:51.451"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.451" endtime="20190817 19:24:51.451"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.426" endtime="20190817 19:24:51.451"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.426" endtime="20190817 19:24:51.451"></status>
</kw>
<kw name="${item} = SE" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.452" level="INFO">&amp;{parameter} = { locale=SE }</msg>
<status status="PASS" starttime="20190817 19:24:51.452" endtime="20190817 19:24:51.452"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.460" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.453" endtime="20190817 19:24:51.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.461" endtime="20190817 19:24:51.462"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.463" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SE","personal_profile":{"first_name":"Andreas","last_name":"Bergstrand","date_of_birth":"1976-08-17T00:00:00.000Z","mobile_phone":"+467061264","national_id":""},"address":{"country":"SE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+467061264","first_name":"Andreas","last_name":"Bergstrand","company":"Umbrella Corp. SE"}}} </msg>
<msg timestamp="20190817 19:24:51.463" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.463" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SE', 'personal_profile': {'first_name': 'Andreas', 'last_name': 'Bergstrand', 'date_of_birth': '1976-08-17T00:00:00.000Z', 'mobile_phone': '+46706126...</msg>
<status status="PASS" starttime="20190817 19:24:51.462" endtime="20190817 19:24:51.463"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.464" endtime="20190817 19:24:51.465"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.463" endtime="20190817 19:24:51.465"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.466" endtime="20190817 19:24:51.466"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.465" endtime="20190817 19:24:51.467"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.467" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.467" endtime="20190817 19:24:51.467"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.467" endtime="20190817 19:24:51.467"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.468" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.468" endtime="20190817 19:24:51.468"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.468" endtime="20190817 19:24:51.468"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.469" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.469" endtime="20190817 19:24:51.469"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.469" endtime="20190817 19:24:51.469"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.470" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.470" endtime="20190817 19:24:51.470"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.470" endtime="20190817 19:24:51.470"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.471" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.471" endtime="20190817 19:24:51.471"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.471" endtime="20190817 19:24:51.471"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.472" endtime="20190817 19:24:51.472"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.472" endtime="20190817 19:24:51.472"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.473" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.473" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.473" endtime="20190817 19:24:51.473"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.472" endtime="20190817 19:24:51.473"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.474" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.475" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.474" endtime="20190817 19:24:51.475"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.473" endtime="20190817 19:24:51.475"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.476" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.476" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.475" endtime="20190817 19:24:51.476"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.475" endtime="20190817 19:24:51.476"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.477" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.478" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.477" endtime="20190817 19:24:51.478"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.476" endtime="20190817 19:24:51.478"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.479" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.479" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.478" endtime="20190817 19:24:51.479"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.478" endtime="20190817 19:24:51.479"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.480" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.479" endtime="20190817 19:24:51.480"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.479" endtime="20190817 19:24:51.480"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.480" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.480" endtime="20190817 19:24:51.480"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.480" endtime="20190817 19:24:51.480"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.481" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.481" endtime="20190817 19:24:51.481"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.481" endtime="20190817 19:24:51.481"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.482" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.482" endtime="20190817 19:24:51.482"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.481" endtime="20190817 19:24:51.482"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.452" endtime="20190817 19:24:51.482"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.451" endtime="20190817 19:24:51.482"></status>
</kw>
<kw name="${item} = CH" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.483" level="INFO">&amp;{parameter} = { locale=CH }</msg>
<status status="PASS" starttime="20190817 19:24:51.483" endtime="20190817 19:24:51.483"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.491" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.483" endtime="20190817 19:24:51.492"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.492" endtime="20190817 19:24:51.493"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.493" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CH","personal_profile":{"first_name":"Julia","last_name":"Schmid","date_of_birth":"2000-08-17T00:00:00.000Z","mobile_phone":"+41767386447","national_id":"756.1234.5678.90"},"address":{"country":"CH","address_line1":"Wilhelm His-Strasse 41 ","address_line2":"","city":"Winterthur","post_code":8400,"region_name":"Winterthur","landline":"+41767386447","first_name":"Julia","last_name":"Schmid","company":"Umbrella Corp. CH"}}} </msg>
<msg timestamp="20190817 19:24:51.493" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.494" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CH', 'personal_profile': {'first_name': 'Julia', 'last_name': 'Schmid', 'date_of_birth': '2000-08-17T00:00:00.000Z', 'mobile_phone': '+41767386447', ...</msg>
<status status="PASS" starttime="20190817 19:24:51.493" endtime="20190817 19:24:51.494"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.494" endtime="20190817 19:24:51.497"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.494" endtime="20190817 19:24:51.497"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.498" endtime="20190817 19:24:51.499"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.498" endtime="20190817 19:24:51.499"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.500" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.499" endtime="20190817 19:24:51.500"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.499" endtime="20190817 19:24:51.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.501" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.501" endtime="20190817 19:24:51.501"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.500" endtime="20190817 19:24:51.501"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.502" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.501" endtime="20190817 19:24:51.502"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.501" endtime="20190817 19:24:51.502"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.502" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.502" endtime="20190817 19:24:51.503"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.502" endtime="20190817 19:24:51.503"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.503" level="INFO">Length is 23</msg>
<status status="PASS" starttime="20190817 19:24:51.503" endtime="20190817 19:24:51.504"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.503" endtime="20190817 19:24:51.504"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.504" endtime="20190817 19:24:51.504"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.504" endtime="20190817 19:24:51.505"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.505" level="INFO">Length is 23</msg>
<status status="PASS" starttime="20190817 19:24:51.505" endtime="20190817 19:24:51.505"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.505" endtime="20190817 19:24:51.505"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.507" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.507" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.506" endtime="20190817 19:24:51.507"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.506" endtime="20190817 19:24:51.508"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.508" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.508" endtime="20190817 19:24:51.508"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.508" endtime="20190817 19:24:51.508"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.509" level="FAIL">Could not get length of '8400'.</msg>
<status status="FAIL" starttime="20190817 19:24:51.509" endtime="20190817 19:24:51.509"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.509" endtime="20190817 19:24:51.509"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.510" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.510" endtime="20190817 19:24:51.510"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.510" endtime="20190817 19:24:51.510"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.511" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.511" endtime="20190817 19:24:51.511"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.511" endtime="20190817 19:24:51.511"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.512" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.512" endtime="20190817 19:24:51.512"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.511" endtime="20190817 19:24:51.512"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.513" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.513" endtime="20190817 19:24:51.513"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.512" endtime="20190817 19:24:51.513"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.514" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.513" endtime="20190817 19:24:51.514"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.513" endtime="20190817 19:24:51.514"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.483" endtime="20190817 19:24:51.514"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.483" endtime="20190817 19:24:51.514"></status>
</kw>
<kw name="${item} = TR" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.515" level="INFO">&amp;{parameter} = { locale=TR }</msg>
<status status="PASS" starttime="20190817 19:24:51.515" endtime="20190817 19:24:51.515"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.522" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.516" endtime="20190817 19:24:51.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.522" endtime="20190817 19:24:51.523"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.523" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TR","personal_profile":{"first_name":"Rıdvan","last_name":"Kaya","date_of_birth":"1963-08-17T00:00:00.000Z","mobile_phone":"+90502800184","national_id":""},"address":{"country":"TR","address_line1":"535 Alpaya Village","address_line2":"","city":"West Ceyhunstad","post_code":"13117","region_name":"West Virginia","landline":"+90502800184","first_name":"Rıdvan","last_name":"Kaya","company":"Umbrella Corp. TR"}}} </msg>
<msg timestamp="20190817 19:24:51.523" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.523" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TR', 'personal_profile': {'first_name': 'Rıdvan', 'last_name': 'Kaya', 'date_of_birth': '1963-08-17T00:00:00.000Z', 'mobile_phone': '+90502800184', '...</msg>
<status status="PASS" starttime="20190817 19:24:51.523" endtime="20190817 19:24:51.523"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.524" endtime="20190817 19:24:51.524"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.524" endtime="20190817 19:24:51.524"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.525" endtime="20190817 19:24:51.525"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.524" endtime="20190817 19:24:51.525"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.526" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.525" endtime="20190817 19:24:51.526"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.525" endtime="20190817 19:24:51.526"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.527" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.527" endtime="20190817 19:24:51.527"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.527" endtime="20190817 19:24:51.527"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.529" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.528" endtime="20190817 19:24:51.529"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.528" endtime="20190817 19:24:51.529"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.530" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.529" endtime="20190817 19:24:51.530"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.529" endtime="20190817 19:24:51.530"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.530" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.530" endtime="20190817 19:24:51.530"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.530" endtime="20190817 19:24:51.530"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.531" endtime="20190817 19:24:51.531"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.531" endtime="20190817 19:24:51.531"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.532" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20190817 19:24:51.532" endtime="20190817 19:24:51.532"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.531" endtime="20190817 19:24:51.532"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.533" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.533" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.532" endtime="20190817 19:24:51.533"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.532" endtime="20190817 19:24:51.533"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.534" level="INFO">Length is 15</msg>
<status status="PASS" starttime="20190817 19:24:51.533" endtime="20190817 19:24:51.534"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.533" endtime="20190817 19:24:51.534"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.534" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.534" endtime="20190817 19:24:51.535"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.534" endtime="20190817 19:24:51.535"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.535" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.535" endtime="20190817 19:24:51.535"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.535" endtime="20190817 19:24:51.535"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.536" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.536" endtime="20190817 19:24:51.536"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.535" endtime="20190817 19:24:51.536"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.537" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20190817 19:24:51.537" endtime="20190817 19:24:51.537"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.536" endtime="20190817 19:24:51.537"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.538" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.537" endtime="20190817 19:24:51.538"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.537" endtime="20190817 19:24:51.538"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.539" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.538" endtime="20190817 19:24:51.539"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.538" endtime="20190817 19:24:51.539"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.514" endtime="20190817 19:24:51.539"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.514" endtime="20190817 19:24:51.539"></status>
</kw>
<kw name="${item} = UA" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.540" level="INFO">&amp;{parameter} = { locale=UA }</msg>
<status status="PASS" starttime="20190817 19:24:51.540" endtime="20190817 19:24:51.540"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.549" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.540" endtime="20190817 19:24:51.549"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.549" endtime="20190817 19:24:51.550"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.550" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"UA","personal_profile":{"first_name":"Олена","last_name":"Довженко","date_of_birth":"1985-08-17T00:00:00.000Z","mobile_phone":"+380393768516","national_id":""},"address":{"country":"UA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+380393768516","first_name":"Олена","last_name":"Довженко","company":"Umbrella Corp. UA"}}} </msg>
<msg timestamp="20190817 19:24:51.550" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.550" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'UA', 'personal_profile': {'first_name': 'Олена', 'last_name': 'Довженко', 'date_of_birth': '1985-08-17T00:00:00.000Z', 'mobile_phone': '+380393768516...</msg>
<status status="PASS" starttime="20190817 19:24:51.550" endtime="20190817 19:24:51.550"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.551" endtime="20190817 19:24:51.551"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.551" endtime="20190817 19:24:51.552"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.552" endtime="20190817 19:24:51.553"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.552" endtime="20190817 19:24:51.553"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.554" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.553" endtime="20190817 19:24:51.554"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.553" endtime="20190817 19:24:51.554"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.555" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:51.554" endtime="20190817 19:24:51.555"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.554" endtime="20190817 19:24:51.555"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.556" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.555" endtime="20190817 19:24:51.556"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.555" endtime="20190817 19:24:51.556"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.556" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.556" endtime="20190817 19:24:51.556"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.556" endtime="20190817 19:24:51.556"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.557" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.557" endtime="20190817 19:24:51.557"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.557" endtime="20190817 19:24:51.557"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.557" endtime="20190817 19:24:51.558"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.557" endtime="20190817 19:24:51.558"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.559" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.559" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.558" endtime="20190817 19:24:51.559"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.558" endtime="20190817 19:24:51.559"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.560" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.560" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.559" endtime="20190817 19:24:51.560"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.559" endtime="20190817 19:24:51.560"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.560" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.561" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.560" endtime="20190817 19:24:51.561"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.560" endtime="20190817 19:24:51.561"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.562" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.562" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.562" endtime="20190817 19:24:51.562"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.561" endtime="20190817 19:24:51.563"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.563" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.564" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.563" endtime="20190817 19:24:51.564"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.563" endtime="20190817 19:24:51.564"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.565" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20190817 19:24:51.564" endtime="20190817 19:24:51.565"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.564" endtime="20190817 19:24:51.565"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.565" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.565" endtime="20190817 19:24:51.565"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.565" endtime="20190817 19:24:51.566"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.566" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20190817 19:24:51.566" endtime="20190817 19:24:51.566"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.566" endtime="20190817 19:24:51.566"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.567" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.566" endtime="20190817 19:24:51.567"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.566" endtime="20190817 19:24:51.567"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.539" endtime="20190817 19:24:51.567"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.539" endtime="20190817 19:24:51.567"></status>
</kw>
<kw name="${item} = US" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.568" level="INFO">&amp;{parameter} = { locale=US }</msg>
<status status="PASS" starttime="20190817 19:24:51.567" endtime="20190817 19:24:51.568"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.578" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.568" endtime="20190817 19:24:51.578"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.578" endtime="20190817 19:24:51.579"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.579" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"US","personal_profile":{"first_name":"Jacqueline","last_name":"Payne","date_of_birth":"1958-08-17T00:00:00.000Z","mobile_phone":"+13406371676","national_id":""},"address":{"country":"US","address_line1":"1001 Clement Bypass","address_line2":"","city":"Erickborough","post_code":"90311-4001","region_name":"Arizona","landline":"+13406371676","first_name":"Jacqueline","last_name":"Payne","company":"Umbrella Corp. US"}}} </msg>
<msg timestamp="20190817 19:24:51.579" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.579" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'US', 'personal_profile': {'first_name': 'Jacqueline', 'last_name': 'Payne', 'date_of_birth': '1958-08-17T00:00:00.000Z', 'mobile_phone': '+1340637167...</msg>
<status status="PASS" starttime="20190817 19:24:51.579" endtime="20190817 19:24:51.579"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.579" endtime="20190817 19:24:51.580"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.579" endtime="20190817 19:24:51.580"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.580" endtime="20190817 19:24:51.580"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.580" endtime="20190817 19:24:51.580"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.581" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.581" endtime="20190817 19:24:51.581"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.580" endtime="20190817 19:24:51.581"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.581" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.581" endtime="20190817 19:24:51.581"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.581" endtime="20190817 19:24:51.581"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.582" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.582" endtime="20190817 19:24:51.583"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.582" endtime="20190817 19:24:51.583"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.583" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.583" endtime="20190817 19:24:51.583"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.583" endtime="20190817 19:24:51.583"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.584" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.584" endtime="20190817 19:24:51.584"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.583" endtime="20190817 19:24:51.584"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.584" endtime="20190817 19:24:51.585"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.584" endtime="20190817 19:24:51.585"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.585" level="INFO">Length is 19</msg>
<status status="PASS" starttime="20190817 19:24:51.585" endtime="20190817 19:24:51.586"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.585" endtime="20190817 19:24:51.586"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.586" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.586" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.586" endtime="20190817 19:24:51.586"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.586" endtime="20190817 19:24:51.587"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.587" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.587" endtime="20190817 19:24:51.587"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.587" endtime="20190817 19:24:51.587"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.588" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.588" endtime="20190817 19:24:51.588"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.587" endtime="20190817 19:24:51.588"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.589" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.589" endtime="20190817 19:24:51.589"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.588" endtime="20190817 19:24:51.589"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.590" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.589" endtime="20190817 19:24:51.590"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.589" endtime="20190817 19:24:51.590"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.590" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190817 19:24:51.590" endtime="20190817 19:24:51.590"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.590" endtime="20190817 19:24:51.590"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.591" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190817 19:24:51.591" endtime="20190817 19:24:51.591"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.591" endtime="20190817 19:24:51.591"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.592" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.591" endtime="20190817 19:24:51.592"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.591" endtime="20190817 19:24:51.592"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.567" endtime="20190817 19:24:51.592"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.567" endtime="20190817 19:24:51.592"></status>
</kw>
<kw name="${item} = VN" type="foritem">
<kw name="Supported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${supported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.593" level="INFO">&amp;{parameter} = { locale=VN }</msg>
<status status="PASS" starttime="20190817 19:24:51.592" endtime="20190817 19:24:51.593"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.602" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.593" endtime="20190817 19:24:51.602"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.602" endtime="20190817 19:24:51.602"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.603" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VN","personal_profile":{"first_name":"Cảnh","last_name":"Lý","date_of_birth":"1981-08-17T00:00:00.000Z","mobile_phone":"+84314584455","national_id":""},"address":{"country":"VN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+84314584455","first_name":"Cảnh","last_name":"Lý","company":"Umbrella Corp. VN"}}} </msg>
<msg timestamp="20190817 19:24:51.603" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.603" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VN', 'personal_profile': {'first_name': 'Cảnh', 'last_name': 'Lý', 'date_of_birth': '1981-08-17T00:00:00.000Z', 'mobile_phone': '+84314584455', 'nati...</msg>
<status status="PASS" starttime="20190817 19:24:51.602" endtime="20190817 19:24:51.603"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.603" endtime="20190817 19:24:51.604"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.603" endtime="20190817 19:24:51.604"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.604" endtime="20190817 19:24:51.604"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.604" endtime="20190817 19:24:51.605"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.605" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.605" endtime="20190817 19:24:51.605"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.605" endtime="20190817 19:24:51.605"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.606" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20190817 19:24:51.605" endtime="20190817 19:24:51.606"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.605" endtime="20190817 19:24:51.606"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['date_of_birth']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.606" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20190817 19:24:51.606" endtime="20190817 19:24:51.606"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.606" endtime="20190817 19:24:51.607"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['mobile_phone']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.607" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.607" endtime="20190817 19:24:51.607"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.607" endtime="20190817 19:24:51.607"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['personal_profile']['national_id']} #Error</arg>
</arguments>
<msg timestamp="20190817 19:24:51.608" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190817 19:24:51.607" endtime="20190817 19:24:51.608"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.607" endtime="20190817 19:24:51.608"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['user']['address']['country']}</arg>
<arg>${supported_country_code}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:51.608" endtime="20190817 19:24:51.609"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.608" endtime="20190817 19:24:51.609"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line1']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.609" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.610" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.609" endtime="20190817 19:24:51.610"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.609" endtime="20190817 19:24:51.610"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['address_line2']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.610" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.611" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.610" endtime="20190817 19:24:51.611"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.610" endtime="20190817 19:24:51.611"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['city']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.612" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.612" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.611" endtime="20190817 19:24:51.612"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.611" endtime="20190817 19:24:51.612"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['post_code']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.613" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.613" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.612" endtime="20190817 19:24:51.613"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.612" endtime="20190817 19:24:51.613"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['region_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.614" level="INFO">Length is 0</msg>
<msg timestamp="20190817 19:24:51.614" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20190817 19:24:51.613" endtime="20190817 19:24:51.614"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.613" endtime="20190817 19:24:51.614"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['landline']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.615" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190817 19:24:51.614" endtime="20190817 19:24:51.615"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.614" endtime="20190817 19:24:51.615"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['first_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.615" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20190817 19:24:51.615" endtime="20190817 19:24:51.615"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.615" endtime="20190817 19:24:51.615"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['last_name']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.616" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20190817 19:24:51.616" endtime="20190817 19:24:51.616"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.615" endtime="20190817 19:24:51.616"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${json_data['user']['address']['company']}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.617" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190817 19:24:51.616" endtime="20190817 19:24:51.617"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:51.616" endtime="20190817 19:24:51.617"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.592" endtime="20190817 19:24:51.617"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.592" endtime="20190817 19:24:51.617"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:49.684" endtime="20190817 19:24:51.617"></status>
</kw>
<doc>This test case will run each supported country codes.
Since this is a list, I've utilize the 'Test Template' function of Robot Framework
This will checks if the status code returns 200.
This will also check if the JSON response has no NULL values.</doc>
<status status="FAIL" starttime="20190817 19:24:49.683" endtime="20190817 19:24:51.618" critical="yes">Several failures occurred:

1) '' should not be empty.

2) '' should not be empty.

3) '' should not be empty.

4) '' should not be empty.

5) '' should not be empty.

6) '' should not be empty.

7) '' should not be empty.

8) '' should not be empty.

9) '' should not be empty.

    [ Message content over the limit has been removed. ]

172) '' should not be empty.

173) '' should not be empty.

174) '' should not be empty.

175) '' should not be empty.

176) '' should not be empty.

177) '' should not be empty.

178) '' should not be empty.

179) '' should not be empty.

180) '' should not be empty.

181) '' should not be empty.</status>
</test>
<test id="s1-t2" name="Verify Unsupported Country Code Not Generating User">
<kw name="${item} IN [ @{UNSUPPORTED_COUNTRY_CODES} ]" type="for">
<kw name="${item} = AF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.622" level="INFO">&amp;{parameter} = { locale=AF }</msg>
<status status="PASS" starttime="20190817 19:24:51.622" endtime="20190817 19:24:51.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.633" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.622" endtime="20190817 19:24:51.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.634" endtime="20190817 19:24:51.634"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.635" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+93","national_id":""},"address":{"country":"AF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+93","first_name":"","last_name":"","company":"Umbrella Corp. AF"}}} </msg>
<msg timestamp="20190817 19:24:51.635" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.635" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+93', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:51.634" endtime="20190817 19:24:51.635"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.636" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.635" endtime="20190817 19:24:51.636"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.635" endtime="20190817 19:24:51.636"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.621" endtime="20190817 19:24:51.636"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.621" endtime="20190817 19:24:51.636"></status>
</kw>
<kw name="${item} = DZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.637" level="INFO">&amp;{parameter} = { locale=DZ }</msg>
<status status="PASS" starttime="20190817 19:24:51.637" endtime="20190817 19:24:51.637"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.655" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.637" endtime="20190817 19:24:51.656"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.656" endtime="20190817 19:24:51.656"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.656" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+213","national_id":""},"address":{"country":"DZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+213","first_name":"","last_name":"","company":"Umbrella Corp. DZ"}}} </msg>
<msg timestamp="20190817 19:24:51.657" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.657" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+213', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.656" endtime="20190817 19:24:51.657"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.657" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.657" endtime="20190817 19:24:51.657"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.657" endtime="20190817 19:24:51.657"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.636" endtime="20190817 19:24:51.658"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.636" endtime="20190817 19:24:51.658"></status>
</kw>
<kw name="${item} = AS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.658" level="INFO">&amp;{parameter} = { locale=AS }</msg>
<status status="PASS" starttime="20190817 19:24:51.658" endtime="20190817 19:24:51.658"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.674" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.659" endtime="20190817 19:24:51.674"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.675" endtime="20190817 19:24:51.675"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.676" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"AS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. AS"}}} </msg>
<msg timestamp="20190817 19:24:51.676" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.676" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'A...</msg>
<status status="PASS" starttime="20190817 19:24:51.675" endtime="20190817 19:24:51.676"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.677" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.677" endtime="20190817 19:24:51.677"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.676" endtime="20190817 19:24:51.677"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.658" endtime="20190817 19:24:51.677"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.658" endtime="20190817 19:24:51.677"></status>
</kw>
<kw name="${item} = AD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.678" level="INFO">&amp;{parameter} = { locale=AD }</msg>
<status status="PASS" starttime="20190817 19:24:51.678" endtime="20190817 19:24:51.678"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.687" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.678" endtime="20190817 19:24:51.687"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.687" endtime="20190817 19:24:51.688"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.688" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AD","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+376","national_id":""},"address":{"country":"AD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+376","first_name":"","last_name":"","company":"Umbrella Corp. AD"}}} </msg>
<msg timestamp="20190817 19:24:51.688" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.688" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AD', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+376', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.688" endtime="20190817 19:24:51.688"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.689" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.688" endtime="20190817 19:24:51.689"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.688" endtime="20190817 19:24:51.689"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.677" endtime="20190817 19:24:51.689"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.677" endtime="20190817 19:24:51.689"></status>
</kw>
<kw name="${item} = AO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.690" level="INFO">&amp;{parameter} = { locale=AO }</msg>
<status status="PASS" starttime="20190817 19:24:51.690" endtime="20190817 19:24:51.690"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.696" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.690" endtime="20190817 19:24:51.696"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.697" endtime="20190817 19:24:51.697"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.698" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+244","national_id":""},"address":{"country":"AO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+244","first_name":"","last_name":"","company":"Umbrella Corp. AO"}}} </msg>
<msg timestamp="20190817 19:24:51.698" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.698" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+244', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.697" endtime="20190817 19:24:51.698"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.698" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.698" endtime="20190817 19:24:51.699"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.698" endtime="20190817 19:24:51.699"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.689" endtime="20190817 19:24:51.699"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.689" endtime="20190817 19:24:51.699"></status>
</kw>
<kw name="${item} = AI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.700" level="INFO">&amp;{parameter} = { locale=AI }</msg>
<status status="PASS" starttime="20190817 19:24:51.700" endtime="20190817 19:24:51.700"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.705" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.700" endtime="20190817 19:24:51.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.705" endtime="20190817 19:24:51.706"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.706" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"AI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. AI"}}} </msg>
<msg timestamp="20190817 19:24:51.706" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.706" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'A...</msg>
<status status="PASS" starttime="20190817 19:24:51.706" endtime="20190817 19:24:51.706"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.707" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.707" endtime="20190817 19:24:51.707"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.707" endtime="20190817 19:24:51.707"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.699" endtime="20190817 19:24:51.707"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.699" endtime="20190817 19:24:51.707"></status>
</kw>
<kw name="${item} = AQ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.708" level="INFO">&amp;{parameter} = { locale=AQ }</msg>
<status status="PASS" starttime="20190817 19:24:51.708" endtime="20190817 19:24:51.708"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.719" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.708" endtime="20190817 19:24:51.720"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.720" endtime="20190817 19:24:51.720"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.720" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:51.720" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.721" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:51.720" endtime="20190817 19:24:51.721"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.722" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.721" endtime="20190817 19:24:51.722"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.721" endtime="20190817 19:24:51.722"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.707" endtime="20190817 19:24:51.722"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.707" endtime="20190817 19:24:51.722"></status>
</kw>
<kw name="${item} = AG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.723" level="INFO">&amp;{parameter} = { locale=AG }</msg>
<status status="PASS" starttime="20190817 19:24:51.722" endtime="20190817 19:24:51.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.729" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.723" endtime="20190817 19:24:51.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.729" endtime="20190817 19:24:51.730"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.731" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"AG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. AG"}}} </msg>
<msg timestamp="20190817 19:24:51.731" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.731" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'A...</msg>
<status status="PASS" starttime="20190817 19:24:51.731" endtime="20190817 19:24:51.732"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.733" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.732" endtime="20190817 19:24:51.733"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.732" endtime="20190817 19:24:51.733"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.722" endtime="20190817 19:24:51.733"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.722" endtime="20190817 19:24:51.733"></status>
</kw>
<kw name="${item} = AW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.735" level="INFO">&amp;{parameter} = { locale=AW }</msg>
<status status="PASS" starttime="20190817 19:24:51.734" endtime="20190817 19:24:51.735"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.741" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.735" endtime="20190817 19:24:51.741"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.741" endtime="20190817 19:24:51.741"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.742" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+297","national_id":""},"address":{"country":"AW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+297","first_name":"","last_name":"","company":"Umbrella Corp. AW"}}} </msg>
<msg timestamp="20190817 19:24:51.742" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.742" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+297', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.742" endtime="20190817 19:24:51.742"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.743" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.742" endtime="20190817 19:24:51.743"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.742" endtime="20190817 19:24:51.743"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.734" endtime="20190817 19:24:51.744"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.734" endtime="20190817 19:24:51.744"></status>
</kw>
<kw name="${item} = BS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.745" level="INFO">&amp;{parameter} = { locale=BS }</msg>
<status status="PASS" starttime="20190817 19:24:51.745" endtime="20190817 19:24:51.745"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.751" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.745" endtime="20190817 19:24:51.751"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.751" endtime="20190817 19:24:51.752"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.752" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"BS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. BS"}}} </msg>
<msg timestamp="20190817 19:24:51.752" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.752" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'B...</msg>
<status status="PASS" starttime="20190817 19:24:51.752" endtime="20190817 19:24:51.752"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.753" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.753" endtime="20190817 19:24:51.753"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.752" endtime="20190817 19:24:51.753"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.744" endtime="20190817 19:24:51.753"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.744" endtime="20190817 19:24:51.753"></status>
</kw>
<kw name="${item} = BH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.754" level="INFO">&amp;{parameter} = { locale=BH }</msg>
<status status="PASS" starttime="20190817 19:24:51.754" endtime="20190817 19:24:51.754"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.759" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.754" endtime="20190817 19:24:51.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.760" endtime="20190817 19:24:51.760"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.760" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+973","national_id":""},"address":{"country":"BH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+973","first_name":"","last_name":"","company":"Umbrella Corp. BH"}}} </msg>
<msg timestamp="20190817 19:24:51.760" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.760" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+973', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.760" endtime="20190817 19:24:51.760"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.761" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.761" endtime="20190817 19:24:51.761"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.761" endtime="20190817 19:24:51.761"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.753" endtime="20190817 19:24:51.761"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.753" endtime="20190817 19:24:51.761"></status>
</kw>
<kw name="${item} = BB" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.762" level="INFO">&amp;{parameter} = { locale=BB }</msg>
<status status="PASS" starttime="20190817 19:24:51.762" endtime="20190817 19:24:51.762"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.767" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.762" endtime="20190817 19:24:51.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.767" endtime="20190817 19:24:51.768"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.769" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BB","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"BB","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. BB"}}} </msg>
<msg timestamp="20190817 19:24:51.769" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.769" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BB', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'B...</msg>
<status status="PASS" starttime="20190817 19:24:51.768" endtime="20190817 19:24:51.769"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.770" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.770" endtime="20190817 19:24:51.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.769" endtime="20190817 19:24:51.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.762" endtime="20190817 19:24:51.771"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.761" endtime="20190817 19:24:51.771"></status>
</kw>
<kw name="${item} = BY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.774" level="INFO">&amp;{parameter} = { locale=BY }</msg>
<status status="PASS" starttime="20190817 19:24:51.773" endtime="20190817 19:24:51.774"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.782" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.774" endtime="20190817 19:24:51.782"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.782" endtime="20190817 19:24:51.783"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.784" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+375","national_id":""},"address":{"country":"BY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+375","first_name":"","last_name":"","company":"Umbrella Corp. BY"}}} </msg>
<msg timestamp="20190817 19:24:51.784" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.784" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+375', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.783" endtime="20190817 19:24:51.784"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.785" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.784" endtime="20190817 19:24:51.785"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.784" endtime="20190817 19:24:51.785"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.772" endtime="20190817 19:24:51.786"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.771" endtime="20190817 19:24:51.786"></status>
</kw>
<kw name="${item} = BJ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.787" level="INFO">&amp;{parameter} = { locale=BJ }</msg>
<status status="PASS" starttime="20190817 19:24:51.786" endtime="20190817 19:24:51.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.793" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.787" endtime="20190817 19:24:51.793"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.793" endtime="20190817 19:24:51.794"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.795" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BJ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+229","national_id":""},"address":{"country":"BJ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+229","first_name":"","last_name":"","company":"Umbrella Corp. BJ"}}} </msg>
<msg timestamp="20190817 19:24:51.795" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.795" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BJ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+229', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.794" endtime="20190817 19:24:51.795"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.796" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.795" endtime="20190817 19:24:51.797"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.795" endtime="20190817 19:24:51.797"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.786" endtime="20190817 19:24:51.797"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.786" endtime="20190817 19:24:51.797"></status>
</kw>
<kw name="${item} = BM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.799" level="INFO">&amp;{parameter} = { locale=BM }</msg>
<status status="PASS" starttime="20190817 19:24:51.798" endtime="20190817 19:24:51.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.807" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.799" endtime="20190817 19:24:51.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.807" endtime="20190817 19:24:51.808"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.808" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"BM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. BM"}}} </msg>
<msg timestamp="20190817 19:24:51.808" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.808" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'B...</msg>
<status status="PASS" starttime="20190817 19:24:51.808" endtime="20190817 19:24:51.808"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.810" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.809" endtime="20190817 19:24:51.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.809" endtime="20190817 19:24:51.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.797" endtime="20190817 19:24:51.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.797" endtime="20190817 19:24:51.810"></status>
</kw>
<kw name="${item} = BT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.811" level="INFO">&amp;{parameter} = { locale=BT }</msg>
<status status="PASS" starttime="20190817 19:24:51.811" endtime="20190817 19:24:51.811"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.821" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.811" endtime="20190817 19:24:51.821"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.822" endtime="20190817 19:24:51.822"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.822" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+975","national_id":""},"address":{"country":"BT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+975","first_name":"","last_name":"","company":"Umbrella Corp. BT"}}} </msg>
<msg timestamp="20190817 19:24:51.822" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.822" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+975', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.822" endtime="20190817 19:24:51.822"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.823" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.823" endtime="20190817 19:24:51.823"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.823" endtime="20190817 19:24:51.823"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.811" endtime="20190817 19:24:51.823"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.810" endtime="20190817 19:24:51.823"></status>
</kw>
<kw name="${item} = BO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.824" level="INFO">&amp;{parameter} = { locale=BO }</msg>
<status status="PASS" starttime="20190817 19:24:51.824" endtime="20190817 19:24:51.824"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.831" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.824" endtime="20190817 19:24:51.831"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.832" endtime="20190817 19:24:51.832"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.832" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+591","national_id":""},"address":{"country":"BO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+591","first_name":"","last_name":"","company":"Umbrella Corp. BO"}}} </msg>
<msg timestamp="20190817 19:24:51.832" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.833" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+591', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.832" endtime="20190817 19:24:51.833"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.833" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.833" endtime="20190817 19:24:51.833"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.833" endtime="20190817 19:24:51.833"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.824" endtime="20190817 19:24:51.834"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.823" endtime="20190817 19:24:51.834"></status>
</kw>
<kw name="${item} = BQ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.835" level="INFO">&amp;{parameter} = { locale=BQ }</msg>
<status status="PASS" starttime="20190817 19:24:51.834" endtime="20190817 19:24:51.835"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.843" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.835" endtime="20190817 19:24:51.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.843" endtime="20190817 19:24:51.844"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.845" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:51.845" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.845" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:51.844" endtime="20190817 19:24:51.845"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.846" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.846" endtime="20190817 19:24:51.846"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.845" endtime="20190817 19:24:51.846"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.834" endtime="20190817 19:24:51.847"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.834" endtime="20190817 19:24:51.847"></status>
</kw>
<kw name="${item} = BW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.848" level="INFO">&amp;{parameter} = { locale=BW }</msg>
<status status="PASS" starttime="20190817 19:24:51.847" endtime="20190817 19:24:51.848"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.856" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.848" endtime="20190817 19:24:51.857"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.857" endtime="20190817 19:24:51.858"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.858" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+267","national_id":""},"address":{"country":"BW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+267","first_name":"","last_name":"","company":"Umbrella Corp. BW"}}} </msg>
<msg timestamp="20190817 19:24:51.858" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.858" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+267', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.858" endtime="20190817 19:24:51.859"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.861" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.859" endtime="20190817 19:24:51.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.859" endtime="20190817 19:24:51.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.847" endtime="20190817 19:24:51.862"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.847" endtime="20190817 19:24:51.862"></status>
</kw>
<kw name="${item} = BV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.863" level="INFO">&amp;{parameter} = { locale=BV }</msg>
<status status="PASS" starttime="20190817 19:24:51.862" endtime="20190817 19:24:51.863"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.871" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.863" endtime="20190817 19:24:51.872"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.872" endtime="20190817 19:24:51.872"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.873" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:51.873" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.873" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:51.873" endtime="20190817 19:24:51.873"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.873" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.873" endtime="20190817 19:24:51.874"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.873" endtime="20190817 19:24:51.874"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.862" endtime="20190817 19:24:51.874"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.862" endtime="20190817 19:24:51.874"></status>
</kw>
<kw name="${item} = IO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.874" level="INFO">&amp;{parameter} = { locale=IO }</msg>
<status status="PASS" starttime="20190817 19:24:51.874" endtime="20190817 19:24:51.875"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.879" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.875" endtime="20190817 19:24:51.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.879" endtime="20190817 19:24:51.880"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.880" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+246","national_id":""},"address":{"country":"IO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+246","first_name":"","last_name":"","company":"Umbrella Corp. IO"}}} </msg>
<msg timestamp="20190817 19:24:51.880" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.880" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+246', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.880" endtime="20190817 19:24:51.880"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.881" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.881" endtime="20190817 19:24:51.881"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.880" endtime="20190817 19:24:51.881"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.874" endtime="20190817 19:24:51.881"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.874" endtime="20190817 19:24:51.881"></status>
</kw>
<kw name="${item} = BN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.882" level="INFO">&amp;{parameter} = { locale=BN }</msg>
<status status="PASS" starttime="20190817 19:24:51.882" endtime="20190817 19:24:51.882"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.892" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.882" endtime="20190817 19:24:51.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.893" endtime="20190817 19:24:51.893"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.894" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+673","national_id":""},"address":{"country":"BN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+673","first_name":"","last_name":"","company":"Umbrella Corp. BN"}}} </msg>
<msg timestamp="20190817 19:24:51.894" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.894" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+673', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.893" endtime="20190817 19:24:51.894"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.896" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.895" endtime="20190817 19:24:51.896"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.894" endtime="20190817 19:24:51.896"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.881" endtime="20190817 19:24:51.896"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.881" endtime="20190817 19:24:51.896"></status>
</kw>
<kw name="${item} = BF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.897" level="INFO">&amp;{parameter} = { locale=BF }</msg>
<status status="PASS" starttime="20190817 19:24:51.897" endtime="20190817 19:24:51.898"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.908" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.898" endtime="20190817 19:24:51.915"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.915" endtime="20190817 19:24:51.915"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.916" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+226","national_id":""},"address":{"country":"BF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+226","first_name":"","last_name":"","company":"Umbrella Corp. BF"}}} </msg>
<msg timestamp="20190817 19:24:51.916" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.916" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+226', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.916" endtime="20190817 19:24:51.916"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.917" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.917" endtime="20190817 19:24:51.917"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.916" endtime="20190817 19:24:51.917"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.896" endtime="20190817 19:24:51.917"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.896" endtime="20190817 19:24:51.918"></status>
</kw>
<kw name="${item} = BI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.919" level="INFO">&amp;{parameter} = { locale=BI }</msg>
<status status="PASS" starttime="20190817 19:24:51.918" endtime="20190817 19:24:51.919"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.929" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.920" endtime="20190817 19:24:51.930"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.930" endtime="20190817 19:24:51.930"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.930" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+257","national_id":""},"address":{"country":"BI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+257","first_name":"","last_name":"","company":"Umbrella Corp. BI"}}} </msg>
<msg timestamp="20190817 19:24:51.931" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.931" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+257', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.930" endtime="20190817 19:24:51.931"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.931" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.931" endtime="20190817 19:24:51.931"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.931" endtime="20190817 19:24:51.931"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.918" endtime="20190817 19:24:51.931"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.918" endtime="20190817 19:24:51.932"></status>
</kw>
<kw name="${item} = KH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.932" level="INFO">&amp;{parameter} = { locale=KH }</msg>
<status status="PASS" starttime="20190817 19:24:51.932" endtime="20190817 19:24:51.932"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.939" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.933" endtime="20190817 19:24:51.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.939" endtime="20190817 19:24:51.940"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.940" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+855","national_id":""},"address":{"country":"KH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+855","first_name":"","last_name":"","company":"Umbrella Corp. KH"}}} </msg>
<msg timestamp="20190817 19:24:51.940" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.941" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+855', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.940" endtime="20190817 19:24:51.941"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.942" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.941" endtime="20190817 19:24:51.942"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.941" endtime="20190817 19:24:51.942"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.932" endtime="20190817 19:24:51.942"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.932" endtime="20190817 19:24:51.942"></status>
</kw>
<kw name="${item} = CM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.943" level="INFO">&amp;{parameter} = { locale=CM }</msg>
<status status="PASS" starttime="20190817 19:24:51.943" endtime="20190817 19:24:51.943"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.947" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.943" endtime="20190817 19:24:51.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.948" endtime="20190817 19:24:51.948"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.949" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+237","national_id":""},"address":{"country":"CM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+237","first_name":"","last_name":"","company":"Umbrella Corp. CM"}}} </msg>
<msg timestamp="20190817 19:24:51.949" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.949" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+237', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.949" endtime="20190817 19:24:51.949"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.950" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.950" endtime="20190817 19:24:51.951"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.949" endtime="20190817 19:24:51.951"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.942" endtime="20190817 19:24:51.951"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.942" endtime="20190817 19:24:51.951"></status>
</kw>
<kw name="${item} = CV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.952" level="INFO">&amp;{parameter} = { locale=CV }</msg>
<status status="PASS" starttime="20190817 19:24:51.952" endtime="20190817 19:24:51.952"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.958" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.953" endtime="20190817 19:24:51.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.959" endtime="20190817 19:24:51.959"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.960" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CV","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+238","national_id":""},"address":{"country":"CV","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+238","first_name":"","last_name":"","company":"Umbrella Corp. CV"}}} </msg>
<msg timestamp="20190817 19:24:51.960" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.960" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CV', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+238', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.959" endtime="20190817 19:24:51.960"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.961" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.961" endtime="20190817 19:24:51.961"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.960" endtime="20190817 19:24:51.962"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.951" endtime="20190817 19:24:51.962"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.951" endtime="20190817 19:24:51.962"></status>
</kw>
<kw name="${item} = KY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.963" level="INFO">&amp;{parameter} = { locale=KY }</msg>
<status status="PASS" starttime="20190817 19:24:51.963" endtime="20190817 19:24:51.963"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.969" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.963" endtime="20190817 19:24:51.970"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.970" endtime="20190817 19:24:51.970"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.971" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"KY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. KY"}}} </msg>
<msg timestamp="20190817 19:24:51.971" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.971" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'K...</msg>
<status status="PASS" starttime="20190817 19:24:51.970" endtime="20190817 19:24:51.971"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.972" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.971" endtime="20190817 19:24:51.972"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.971" endtime="20190817 19:24:51.972"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.962" endtime="20190817 19:24:51.972"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.962" endtime="20190817 19:24:51.972"></status>
</kw>
<kw name="${item} = CF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.973" level="INFO">&amp;{parameter} = { locale=CF }</msg>
<status status="PASS" starttime="20190817 19:24:51.972" endtime="20190817 19:24:51.973"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.977" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.973" endtime="20190817 19:24:51.977"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.977" endtime="20190817 19:24:51.978"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.978" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+236","national_id":""},"address":{"country":"CF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+236","first_name":"","last_name":"","company":"Umbrella Corp. CF"}}} </msg>
<msg timestamp="20190817 19:24:51.978" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.978" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+236', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:51.978" endtime="20190817 19:24:51.978"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.979" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.979" endtime="20190817 19:24:51.979"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.978" endtime="20190817 19:24:51.979"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.972" endtime="20190817 19:24:51.979"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.972" endtime="20190817 19:24:51.979"></status>
</kw>
<kw name="${item} = TD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.980" level="INFO">&amp;{parameter} = { locale=TD }</msg>
<status status="PASS" starttime="20190817 19:24:51.980" endtime="20190817 19:24:51.980"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.986" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.980" endtime="20190817 19:24:51.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.986" endtime="20190817 19:24:51.987"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.987" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:51.987" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.987" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:51.987" endtime="20190817 19:24:51.987"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.988" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.988" endtime="20190817 19:24:51.988"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.987" endtime="20190817 19:24:51.988"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.979" endtime="20190817 19:24:51.989"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.979" endtime="20190817 19:24:51.989"></status>
</kw>
<kw name="${item} = CX" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:51.990" level="INFO">&amp;{parameter} = { locale=CX }</msg>
<status status="PASS" starttime="20190817 19:24:51.990" endtime="20190817 19:24:51.990"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:51.997" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:51.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.990" endtime="20190817 19:24:51.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:51.997" endtime="20190817 19:24:51.998"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:51.998" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:51.998" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:51.998" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:51.998" endtime="20190817 19:24:51.998"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:51.999" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:51.999" endtime="20190817 19:24:51.999"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.999" endtime="20190817 19:24:52.000"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.989" endtime="20190817 19:24:52.000"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.989" endtime="20190817 19:24:52.000"></status>
</kw>
<kw name="${item} = CC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.001" level="INFO">&amp;{parameter} = { locale=CC }</msg>
<status status="PASS" starttime="20190817 19:24:52.001" endtime="20190817 19:24:52.001"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.008" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.002" endtime="20190817 19:24:52.008"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.008" endtime="20190817 19:24:52.009"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.009" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.009" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.009" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.009" endtime="20190817 19:24:52.009"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.010" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.010" endtime="20190817 19:24:52.010"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.009" endtime="20190817 19:24:52.010"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.000" endtime="20190817 19:24:52.011"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.000" endtime="20190817 19:24:52.011"></status>
</kw>
<kw name="${item} = KM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.012" level="INFO">&amp;{parameter} = { locale=KM }</msg>
<status status="PASS" starttime="20190817 19:24:52.011" endtime="20190817 19:24:52.012"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.019" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.012" endtime="20190817 19:24:52.019"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.019" endtime="20190817 19:24:52.020"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.021" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+269","national_id":""},"address":{"country":"KM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+269","first_name":"","last_name":"","company":"Umbrella Corp. KM"}}} </msg>
<msg timestamp="20190817 19:24:52.021" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.021" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+269', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.020" endtime="20190817 19:24:52.021"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.022" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.021" endtime="20190817 19:24:52.022"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.021" endtime="20190817 19:24:52.022"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.011" endtime="20190817 19:24:52.022"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.011" endtime="20190817 19:24:52.022"></status>
</kw>
<kw name="${item} = CG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.022" level="INFO">&amp;{parameter} = { locale=CG }</msg>
<status status="PASS" starttime="20190817 19:24:52.022" endtime="20190817 19:24:52.022"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.027" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.023" endtime="20190817 19:24:52.027"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.027" endtime="20190817 19:24:52.028"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.028" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+242","national_id":""},"address":{"country":"CG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+242","first_name":"","last_name":"","company":"Umbrella Corp. CG"}}} </msg>
<msg timestamp="20190817 19:24:52.028" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.028" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+242', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.028" endtime="20190817 19:24:52.028"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.029" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.029" endtime="20190817 19:24:52.029"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.028" endtime="20190817 19:24:52.029"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.022" endtime="20190817 19:24:52.029"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.022" endtime="20190817 19:24:52.029"></status>
</kw>
<kw name="${item} = CD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.030" level="INFO">&amp;{parameter} = { locale=CD }</msg>
<status status="PASS" starttime="20190817 19:24:52.030" endtime="20190817 19:24:52.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.036" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.030" endtime="20190817 19:24:52.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.036" endtime="20190817 19:24:52.036"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.037" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CD","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+243","national_id":""},"address":{"country":"CD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+243","first_name":"","last_name":"","company":"Umbrella Corp. CD"}}} </msg>
<msg timestamp="20190817 19:24:52.037" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.037" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CD', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+243', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.036" endtime="20190817 19:24:52.037"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.037" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.037" endtime="20190817 19:24:52.037"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.037" endtime="20190817 19:24:52.037"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.030" endtime="20190817 19:24:52.038"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.029" endtime="20190817 19:24:52.038"></status>
</kw>
<kw name="${item} = CK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.038" level="INFO">&amp;{parameter} = { locale=CK }</msg>
<status status="PASS" starttime="20190817 19:24:52.038" endtime="20190817 19:24:52.038"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.046" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.038" endtime="20190817 19:24:52.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.046" endtime="20190817 19:24:52.046"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.047" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+682","national_id":""},"address":{"country":"CK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+682","first_name":"","last_name":"","company":"Umbrella Corp. CK"}}} </msg>
<msg timestamp="20190817 19:24:52.047" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.047" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+682', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.047" endtime="20190817 19:24:52.047"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.048" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.048" endtime="20190817 19:24:52.048"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.047" endtime="20190817 19:24:52.048"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.038" endtime="20190817 19:24:52.048"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.038" endtime="20190817 19:24:52.048"></status>
</kw>
<kw name="${item} = HR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.049" level="INFO">&amp;{parameter} = { locale=HR }</msg>
<status status="PASS" starttime="20190817 19:24:52.049" endtime="20190817 19:24:52.049"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.054" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.049" endtime="20190817 19:24:52.054"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.054" endtime="20190817 19:24:52.055"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.055" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"HR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+385","national_id":""},"address":{"country":"HR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+385","first_name":"","last_name":"","company":"Umbrella Corp. HR"}}} </msg>
<msg timestamp="20190817 19:24:52.055" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.055" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'HR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+385', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.055" endtime="20190817 19:24:52.055"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.056" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.056" endtime="20190817 19:24:52.056"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.055" endtime="20190817 19:24:52.056"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.048" endtime="20190817 19:24:52.056"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.048" endtime="20190817 19:24:52.056"></status>
</kw>
<kw name="${item} = CU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.057" level="INFO">&amp;{parameter} = { locale=CU }</msg>
<status status="PASS" starttime="20190817 19:24:52.057" endtime="20190817 19:24:52.057"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.063" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.058" endtime="20190817 19:24:52.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.063" endtime="20190817 19:24:52.063"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.064" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+53","national_id":""},"address":{"country":"CU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+53","first_name":"","last_name":"","company":"Umbrella Corp. CU"}}} </msg>
<msg timestamp="20190817 19:24:52.064" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.064" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+53', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.063" endtime="20190817 19:24:52.064"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.065" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.064" endtime="20190817 19:24:52.065"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.064" endtime="20190817 19:24:52.065"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.057" endtime="20190817 19:24:52.065"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.057" endtime="20190817 19:24:52.065"></status>
</kw>
<kw name="${item} = CW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.066" level="INFO">&amp;{parameter} = { locale=CW }</msg>
<status status="PASS" starttime="20190817 19:24:52.065" endtime="20190817 19:24:52.066"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.072" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.066" endtime="20190817 19:24:52.072"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.072" endtime="20190817 19:24:52.073"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.073" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.073" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.073" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.073" endtime="20190817 19:24:52.074"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.074" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.074" endtime="20190817 19:24:52.074"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.074" endtime="20190817 19:24:52.074"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.065" endtime="20190817 19:24:52.075"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.065" endtime="20190817 19:24:52.075"></status>
</kw>
<kw name="${item} = CY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.076" level="INFO">&amp;{parameter} = { locale=CY }</msg>
<status status="PASS" starttime="20190817 19:24:52.075" endtime="20190817 19:24:52.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.082" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.076" endtime="20190817 19:24:52.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.082" endtime="20190817 19:24:52.083"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.083" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+35794754481","national_id":""},"address":{"country":"CY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+35794754481","first_name":"","last_name":"","company":"Umbrella Corp. CY"}}} </msg>
<msg timestamp="20190817 19:24:52.083" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.083" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+35794754481', 'national_id': ''}, 'address': {'co...</msg>
<status status="PASS" starttime="20190817 19:24:52.083" endtime="20190817 19:24:52.083"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.084" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.083" endtime="20190817 19:24:52.084"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.083" endtime="20190817 19:24:52.084"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.075" endtime="20190817 19:24:52.084"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.075" endtime="20190817 19:24:52.084"></status>
</kw>
<kw name="${item} = CZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.085" level="INFO">&amp;{parameter} = { locale=CZ }</msg>
<status status="PASS" starttime="20190817 19:24:52.085" endtime="20190817 19:24:52.085"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.092" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.086" endtime="20190817 19:24:52.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.092" endtime="20190817 19:24:52.092"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.093" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+420601165925","national_id":""},"address":{"country":"CZ","address_line1":"281 Hloušková Light","address_line2":"","city":"Lake Všeborfort","post_code":"44067","region_name":"","landline":"+420601165925","first_name":"","last_name":"","company":"Umbrella Corp. CZ"}}} </msg>
<msg timestamp="20190817 19:24:52.093" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.093" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+420601165925', 'national_id': ''}, 'address': {'c...</msg>
<status status="PASS" starttime="20190817 19:24:52.092" endtime="20190817 19:24:52.093"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.093" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.093" endtime="20190817 19:24:52.093"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.093" endtime="20190817 19:24:52.093"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.084" endtime="20190817 19:24:52.094"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.084" endtime="20190817 19:24:52.094"></status>
</kw>
<kw name="${item} = CI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.094" level="INFO">&amp;{parameter} = { locale=CI }</msg>
<status status="PASS" starttime="20190817 19:24:52.094" endtime="20190817 19:24:52.094"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.099" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.094" endtime="20190817 19:24:52.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.100" endtime="20190817 19:24:52.100"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.100" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"CI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+225","national_id":""},"address":{"country":"CI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+225","first_name":"","last_name":"","company":"Umbrella Corp. CI"}}} </msg>
<msg timestamp="20190817 19:24:52.100" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.100" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'CI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+225', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.100" endtime="20190817 19:24:52.100"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.101" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.101" endtime="20190817 19:24:52.101"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.100" endtime="20190817 19:24:52.101"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.094" endtime="20190817 19:24:52.101"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.094" endtime="20190817 19:24:52.101"></status>
</kw>
<kw name="${item} = DJ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.102" level="INFO">&amp;{parameter} = { locale=DJ }</msg>
<status status="PASS" starttime="20190817 19:24:52.102" endtime="20190817 19:24:52.102"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.106" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.102" endtime="20190817 19:24:52.107"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.107" endtime="20190817 19:24:52.107"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.108" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DJ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+253","national_id":""},"address":{"country":"DJ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+253","first_name":"","last_name":"","company":"Umbrella Corp. DJ"}}} </msg>
<msg timestamp="20190817 19:24:52.108" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.108" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DJ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+253', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.107" endtime="20190817 19:24:52.108"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.109" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.108" endtime="20190817 19:24:52.109"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.108" endtime="20190817 19:24:52.109"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.101" endtime="20190817 19:24:52.109"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.101" endtime="20190817 19:24:52.109"></status>
</kw>
<kw name="${item} = DM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.110" level="INFO">&amp;{parameter} = { locale=DM }</msg>
<status status="PASS" starttime="20190817 19:24:52.109" endtime="20190817 19:24:52.110"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.117" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.110" endtime="20190817 19:24:52.117"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.117" endtime="20190817 19:24:52.117"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.118" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"DM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. DM"}}} </msg>
<msg timestamp="20190817 19:24:52.118" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.118" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'D...</msg>
<status status="PASS" starttime="20190817 19:24:52.117" endtime="20190817 19:24:52.118"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.118" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.118" endtime="20190817 19:24:52.118"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.118" endtime="20190817 19:24:52.118"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.109" endtime="20190817 19:24:52.119"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.109" endtime="20190817 19:24:52.119"></status>
</kw>
<kw name="${item} = DO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.119" level="INFO">&amp;{parameter} = { locale=DO }</msg>
<status status="PASS" starttime="20190817 19:24:52.119" endtime="20190817 19:24:52.119"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.125" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.119" endtime="20190817 19:24:52.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.125" endtime="20190817 19:24:52.125"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.126" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"DO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"DO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. DO"}}} </msg>
<msg timestamp="20190817 19:24:52.126" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.126" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'DO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'D...</msg>
<status status="PASS" starttime="20190817 19:24:52.125" endtime="20190817 19:24:52.126"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.127" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.126" endtime="20190817 19:24:52.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.126" endtime="20190817 19:24:52.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.119" endtime="20190817 19:24:52.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.119" endtime="20190817 19:24:52.127"></status>
</kw>
<kw name="${item} = EC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.127" level="INFO">&amp;{parameter} = { locale=EC }</msg>
<status status="PASS" starttime="20190817 19:24:52.127" endtime="20190817 19:24:52.128"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.133" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.128" endtime="20190817 19:24:52.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.133" endtime="20190817 19:24:52.134"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.134" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"EC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+593","national_id":""},"address":{"country":"EC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+593","first_name":"","last_name":"","company":"Umbrella Corp. EC"}}} </msg>
<msg timestamp="20190817 19:24:52.134" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.134" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'EC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+593', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.134" endtime="20190817 19:24:52.134"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.135" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.135" endtime="20190817 19:24:52.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.135" endtime="20190817 19:24:52.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.127" endtime="20190817 19:24:52.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.127" endtime="20190817 19:24:52.136"></status>
</kw>
<kw name="${item} = SV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.137" level="INFO">&amp;{parameter} = { locale=SV }</msg>
<status status="PASS" starttime="20190817 19:24:52.136" endtime="20190817 19:24:52.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.146" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.137" endtime="20190817 19:24:52.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.146" endtime="20190817 19:24:52.147"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.147" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SV","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+503","national_id":""},"address":{"country":"SV","address_line1":"123 Nilsson vägen","address_line2":"","city":"Jennifersta","post_code":"59765","region_name":"Västmanland","landline":"+503","first_name":"","last_name":"","company":"Umbrella Corp. SV"}}} </msg>
<msg timestamp="20190817 19:24:52.147" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.147" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SV', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+503', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.147" endtime="20190817 19:24:52.147"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.148" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.148" endtime="20190817 19:24:52.148"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.147" endtime="20190817 19:24:52.148"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.136" endtime="20190817 19:24:52.148"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.136" endtime="20190817 19:24:52.148"></status>
</kw>
<kw name="${item} = GQ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.149" level="INFO">&amp;{parameter} = { locale=GQ }</msg>
<status status="PASS" starttime="20190817 19:24:52.149" endtime="20190817 19:24:52.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.154" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.149" endtime="20190817 19:24:52.155"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.155" endtime="20190817 19:24:52.155"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.155" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GQ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+240","national_id":""},"address":{"country":"GQ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+240","first_name":"","last_name":"","company":"Umbrella Corp. GQ"}}} </msg>
<msg timestamp="20190817 19:24:52.155" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.156" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GQ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+240', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.155" endtime="20190817 19:24:52.156"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.156" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.156" endtime="20190817 19:24:52.156"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.156" endtime="20190817 19:24:52.156"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.148" endtime="20190817 19:24:52.156"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.148" endtime="20190817 19:24:52.156"></status>
</kw>
<kw name="${item} = ER" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.157" level="INFO">&amp;{parameter} = { locale=ER }</msg>
<status status="PASS" starttime="20190817 19:24:52.157" endtime="20190817 19:24:52.157"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.163" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.157" endtime="20190817 19:24:52.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.164" endtime="20190817 19:24:52.164"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.164" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ER","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+291","national_id":""},"address":{"country":"ER","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+291","first_name":"","last_name":"","company":"Umbrella Corp. ER"}}} </msg>
<msg timestamp="20190817 19:24:52.164" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.164" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ER', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+291', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.164" endtime="20190817 19:24:52.164"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.165" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.165" endtime="20190817 19:24:52.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.164" endtime="20190817 19:24:52.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.157" endtime="20190817 19:24:52.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.157" endtime="20190817 19:24:52.165"></status>
</kw>
<kw name="${item} = ET" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.166" level="INFO">&amp;{parameter} = { locale=ET }</msg>
<status status="PASS" starttime="20190817 19:24:52.166" endtime="20190817 19:24:52.166"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.170" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.166" endtime="20190817 19:24:52.171"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.171" endtime="20190817 19:24:52.171"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.172" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ET","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+251","national_id":""},"address":{"country":"ET","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+251","first_name":"","last_name":"","company":"Umbrella Corp. ET"}}} </msg>
<msg timestamp="20190817 19:24:52.172" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.172" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ET', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+251', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.171" endtime="20190817 19:24:52.172"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.173" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.172" endtime="20190817 19:24:52.173"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.172" endtime="20190817 19:24:52.173"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.166" endtime="20190817 19:24:52.173"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.165" endtime="20190817 19:24:52.173"></status>
</kw>
<kw name="${item} = FK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.176" level="INFO">&amp;{parameter} = { locale=FK }</msg>
<status status="PASS" starttime="20190817 19:24:52.175" endtime="20190817 19:24:52.176"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.184" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.176" endtime="20190817 19:24:52.184"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.184" endtime="20190817 19:24:52.185"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.185" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+500","national_id":""},"address":{"country":"FK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+500","first_name":"","last_name":"","company":"Umbrella Corp. FK"}}} </msg>
<msg timestamp="20190817 19:24:52.185" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.185" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+500', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.185" endtime="20190817 19:24:52.185"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.186" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.186" endtime="20190817 19:24:52.186"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.185" endtime="20190817 19:24:52.186"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.174" endtime="20190817 19:24:52.186"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.173" endtime="20190817 19:24:52.186"></status>
</kw>
<kw name="${item} = FO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.187" level="INFO">&amp;{parameter} = { locale=FO }</msg>
<status status="PASS" starttime="20190817 19:24:52.187" endtime="20190817 19:24:52.187"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.191" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.187" endtime="20190817 19:24:52.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.192" endtime="20190817 19:24:52.192"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.192" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+298","national_id":""},"address":{"country":"FO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+298","first_name":"","last_name":"","company":"Umbrella Corp. FO"}}} </msg>
<msg timestamp="20190817 19:24:52.192" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.192" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+298', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.192" endtime="20190817 19:24:52.192"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.193" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.193" endtime="20190817 19:24:52.193"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.193" endtime="20190817 19:24:52.194"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.187" endtime="20190817 19:24:52.194"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.186" endtime="20190817 19:24:52.194"></status>
</kw>
<kw name="${item} = FJ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.195" level="INFO">&amp;{parameter} = { locale=FJ }</msg>
<status status="PASS" starttime="20190817 19:24:52.194" endtime="20190817 19:24:52.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.200" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.195" endtime="20190817 19:24:52.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.200" endtime="20190817 19:24:52.201"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.201" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FJ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+679","national_id":""},"address":{"country":"FJ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+679","first_name":"","last_name":"","company":"Umbrella Corp. FJ"}}} </msg>
<msg timestamp="20190817 19:24:52.201" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.201" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FJ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+679', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.201" endtime="20190817 19:24:52.201"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.202" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.202" endtime="20190817 19:24:52.202"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.201" endtime="20190817 19:24:52.202"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.194" endtime="20190817 19:24:52.202"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.194" endtime="20190817 19:24:52.202"></status>
</kw>
<kw name="${item} = GF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.203" level="INFO">&amp;{parameter} = { locale=GF }</msg>
<status status="PASS" starttime="20190817 19:24:52.203" endtime="20190817 19:24:52.203"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.209" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.203" endtime="20190817 19:24:52.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.209" endtime="20190817 19:24:52.209"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.210" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+594","national_id":""},"address":{"country":"GF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+594","first_name":"","last_name":"","company":"Umbrella Corp. GF"}}} </msg>
<msg timestamp="20190817 19:24:52.210" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.210" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+594', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.210" endtime="20190817 19:24:52.210"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.211" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.210" endtime="20190817 19:24:52.211"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.210" endtime="20190817 19:24:52.211"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.202" endtime="20190817 19:24:52.211"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.202" endtime="20190817 19:24:52.211"></status>
</kw>
<kw name="${item} = PF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.212" level="INFO">&amp;{parameter} = { locale=PF }</msg>
<status status="PASS" starttime="20190817 19:24:52.212" endtime="20190817 19:24:52.212"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.216" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.212" endtime="20190817 19:24:52.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.217" endtime="20190817 19:24:52.217"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.217" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+689","national_id":""},"address":{"country":"PF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+689","first_name":"","last_name":"","company":"Umbrella Corp. PF"}}} </msg>
<msg timestamp="20190817 19:24:52.217" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.218" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+689', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.217" endtime="20190817 19:24:52.218"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.218" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.218" endtime="20190817 19:24:52.219"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.218" endtime="20190817 19:24:52.219"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.211" endtime="20190817 19:24:52.219"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.211" endtime="20190817 19:24:52.219"></status>
</kw>
<kw name="${item} = TF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.220" level="INFO">&amp;{parameter} = { locale=TF }</msg>
<status status="PASS" starttime="20190817 19:24:52.219" endtime="20190817 19:24:52.220"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.224" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.220" endtime="20190817 19:24:52.225"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.225" endtime="20190817 19:24:52.225"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.226" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.226" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.226" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.226" endtime="20190817 19:24:52.226"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.228" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.227" endtime="20190817 19:24:52.228"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.226" endtime="20190817 19:24:52.228"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.219" endtime="20190817 19:24:52.228"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.219" endtime="20190817 19:24:52.228"></status>
</kw>
<kw name="${item} = GA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.229" level="INFO">&amp;{parameter} = { locale=GA }</msg>
<status status="PASS" starttime="20190817 19:24:52.229" endtime="20190817 19:24:52.229"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.235" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.229" endtime="20190817 19:24:52.235"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.236" endtime="20190817 19:24:52.236"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.236" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+241","national_id":""},"address":{"country":"GA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+241","first_name":"","last_name":"","company":"Umbrella Corp. GA"}}} </msg>
<msg timestamp="20190817 19:24:52.236" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.236" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+241', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.236" endtime="20190817 19:24:52.236"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.237" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.237" endtime="20190817 19:24:52.237"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.237" endtime="20190817 19:24:52.237"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.228" endtime="20190817 19:24:52.237"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.228" endtime="20190817 19:24:52.237"></status>
</kw>
<kw name="${item} = GM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.238" level="INFO">&amp;{parameter} = { locale=GM }</msg>
<status status="PASS" starttime="20190817 19:24:52.238" endtime="20190817 19:24:52.238"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.243" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.238" endtime="20190817 19:24:52.243"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.245" endtime="20190817 19:24:52.245"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.246" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+220","national_id":""},"address":{"country":"GM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+220","first_name":"","last_name":"","company":"Umbrella Corp. GM"}}} </msg>
<msg timestamp="20190817 19:24:52.246" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.246" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+220', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.245" endtime="20190817 19:24:52.246"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.246" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.246" endtime="20190817 19:24:52.247"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.246" endtime="20190817 19:24:52.247"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.238" endtime="20190817 19:24:52.247"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.237" endtime="20190817 19:24:52.247"></status>
</kw>
<kw name="${item} = GH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.248" level="INFO">&amp;{parameter} = { locale=GH }</msg>
<status status="PASS" starttime="20190817 19:24:52.247" endtime="20190817 19:24:52.248"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.253" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.248" endtime="20190817 19:24:52.254"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.254" endtime="20190817 19:24:52.254"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.254" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+233","national_id":""},"address":{"country":"GH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+233","first_name":"","last_name":"","company":"Umbrella Corp. GH"}}} </msg>
<msg timestamp="20190817 19:24:52.254" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.255" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+233', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.254" endtime="20190817 19:24:52.255"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.256" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.256" endtime="20190817 19:24:52.256"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.255" endtime="20190817 19:24:52.256"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.247" endtime="20190817 19:24:52.256"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.247" endtime="20190817 19:24:52.256"></status>
</kw>
<kw name="${item} = GI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.257" level="INFO">&amp;{parameter} = { locale=GI }</msg>
<status status="PASS" starttime="20190817 19:24:52.257" endtime="20190817 19:24:52.257"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.264" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.257" endtime="20190817 19:24:52.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.264" endtime="20190817 19:24:52.265"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.265" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+350","national_id":""},"address":{"country":"GI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+350","first_name":"","last_name":"","company":"Umbrella Corp. GI"}}} </msg>
<msg timestamp="20190817 19:24:52.265" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.266" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+350', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.265" endtime="20190817 19:24:52.266"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.266" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.266" endtime="20190817 19:24:52.266"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.266" endtime="20190817 19:24:52.266"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.257" endtime="20190817 19:24:52.267"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.256" endtime="20190817 19:24:52.267"></status>
</kw>
<kw name="${item} = GL" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.268" level="INFO">&amp;{parameter} = { locale=GL }</msg>
<status status="PASS" starttime="20190817 19:24:52.267" endtime="20190817 19:24:52.268"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.273" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.268" endtime="20190817 19:24:52.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.273" endtime="20190817 19:24:52.274"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.274" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GL","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+299","national_id":""},"address":{"country":"GL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+299","first_name":"","last_name":"","company":"Umbrella Corp. GL"}}} </msg>
<msg timestamp="20190817 19:24:52.274" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.274" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GL', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+299', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.274" endtime="20190817 19:24:52.274"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.275" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.274" endtime="20190817 19:24:52.275"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.274" endtime="20190817 19:24:52.275"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.267" endtime="20190817 19:24:52.275"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.267" endtime="20190817 19:24:52.275"></status>
</kw>
<kw name="${item} = GD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.276" level="INFO">&amp;{parameter} = { locale=GD }</msg>
<status status="PASS" starttime="20190817 19:24:52.276" endtime="20190817 19:24:52.276"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.282" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.277" endtime="20190817 19:24:52.282"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.282" endtime="20190817 19:24:52.282"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.282" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GD","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"GD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. GD"}}} </msg>
<msg timestamp="20190817 19:24:52.283" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.283" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GD', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'G...</msg>
<status status="PASS" starttime="20190817 19:24:52.282" endtime="20190817 19:24:52.283"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.283" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.283" endtime="20190817 19:24:52.283"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.283" endtime="20190817 19:24:52.283"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.276" endtime="20190817 19:24:52.283"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.276" endtime="20190817 19:24:52.284"></status>
</kw>
<kw name="${item} = GP" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.284" level="INFO">&amp;{parameter} = { locale=GP }</msg>
<status status="PASS" starttime="20190817 19:24:52.284" endtime="20190817 19:24:52.284"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.289" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.284" endtime="20190817 19:24:52.289"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.289" endtime="20190817 19:24:52.290"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.290" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GP","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+590","national_id":""},"address":{"country":"GP","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+590","first_name":"","last_name":"","company":"Umbrella Corp. GP"}}} </msg>
<msg timestamp="20190817 19:24:52.290" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.290" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GP', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+590', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.290" endtime="20190817 19:24:52.290"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.291" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.290" endtime="20190817 19:24:52.291"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.290" endtime="20190817 19:24:52.291"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.284" endtime="20190817 19:24:52.291"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.284" endtime="20190817 19:24:52.291"></status>
</kw>
<kw name="${item} = GU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.292" level="INFO">&amp;{parameter} = { locale=GU }</msg>
<status status="PASS" starttime="20190817 19:24:52.292" endtime="20190817 19:24:52.292"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.298" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.293" endtime="20190817 19:24:52.298"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.298" endtime="20190817 19:24:52.299"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.300" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"GU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. GU"}}} </msg>
<msg timestamp="20190817 19:24:52.300" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.300" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'G...</msg>
<status status="PASS" starttime="20190817 19:24:52.299" endtime="20190817 19:24:52.300"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.301" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.300" endtime="20190817 19:24:52.301"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.300" endtime="20190817 19:24:52.302"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.291" endtime="20190817 19:24:52.302"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.291" endtime="20190817 19:24:52.302"></status>
</kw>
<kw name="${item} = GT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.303" level="INFO">&amp;{parameter} = { locale=GT }</msg>
<status status="PASS" starttime="20190817 19:24:52.303" endtime="20190817 19:24:52.303"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.312" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.303" endtime="20190817 19:24:52.312"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.312" endtime="20190817 19:24:52.313"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.313" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+502","national_id":""},"address":{"country":"GT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+502","first_name":"","last_name":"","company":"Umbrella Corp. GT"}}} </msg>
<msg timestamp="20190817 19:24:52.313" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.313" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+502', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.313" endtime="20190817 19:24:52.313"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.314" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.313" endtime="20190817 19:24:52.314"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.313" endtime="20190817 19:24:52.314"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.302" endtime="20190817 19:24:52.314"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.302" endtime="20190817 19:24:52.314"></status>
</kw>
<kw name="${item} = GG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.315" level="INFO">&amp;{parameter} = { locale=GG }</msg>
<status status="PASS" starttime="20190817 19:24:52.315" endtime="20190817 19:24:52.315"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.322" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.315" endtime="20190817 19:24:52.322"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.322" endtime="20190817 19:24:52.323"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.324" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.324" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.324" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.323" endtime="20190817 19:24:52.324"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.325" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.324" endtime="20190817 19:24:52.325"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.324" endtime="20190817 19:24:52.325"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.314" endtime="20190817 19:24:52.326"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.314" endtime="20190817 19:24:52.326"></status>
</kw>
<kw name="${item} = GN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.327" level="INFO">&amp;{parameter} = { locale=GN }</msg>
<status status="PASS" starttime="20190817 19:24:52.327" endtime="20190817 19:24:52.327"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.334" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.328" endtime="20190817 19:24:52.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.335" endtime="20190817 19:24:52.335"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.335" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+224","national_id":""},"address":{"country":"GN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+224","first_name":"","last_name":"","company":"Umbrella Corp. GN"}}} </msg>
<msg timestamp="20190817 19:24:52.335" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.336" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+224', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.335" endtime="20190817 19:24:52.336"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.336" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.336" endtime="20190817 19:24:52.336"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.336" endtime="20190817 19:24:52.336"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.326" endtime="20190817 19:24:52.336"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.326" endtime="20190817 19:24:52.336"></status>
</kw>
<kw name="${item} = GW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.337" level="INFO">&amp;{parameter} = { locale=GW }</msg>
<status status="PASS" starttime="20190817 19:24:52.337" endtime="20190817 19:24:52.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.342" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.337" endtime="20190817 19:24:52.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.342" endtime="20190817 19:24:52.342"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.342" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+245","national_id":""},"address":{"country":"GW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+245","first_name":"","last_name":"","company":"Umbrella Corp. GW"}}} </msg>
<msg timestamp="20190817 19:24:52.343" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.343" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+245', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.342" endtime="20190817 19:24:52.343"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.344" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.344" endtime="20190817 19:24:52.344"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.344" endtime="20190817 19:24:52.344"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.337" endtime="20190817 19:24:52.344"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.336" endtime="20190817 19:24:52.344"></status>
</kw>
<kw name="${item} = GY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.345" level="INFO">&amp;{parameter} = { locale=GY }</msg>
<status status="PASS" starttime="20190817 19:24:52.345" endtime="20190817 19:24:52.345"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.351" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.345" endtime="20190817 19:24:52.351"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.351" endtime="20190817 19:24:52.351"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.352" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"GY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+592","national_id":""},"address":{"country":"GY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+592","first_name":"","last_name":"","company":"Umbrella Corp. GY"}}} </msg>
<msg timestamp="20190817 19:24:52.352" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.352" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'GY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+592', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.351" endtime="20190817 19:24:52.352"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.352" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.352" endtime="20190817 19:24:52.352"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.352" endtime="20190817 19:24:52.352"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.344" endtime="20190817 19:24:52.353"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.344" endtime="20190817 19:24:52.353"></status>
</kw>
<kw name="${item} = HT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.353" level="INFO">&amp;{parameter} = { locale=HT }</msg>
<status status="PASS" starttime="20190817 19:24:52.353" endtime="20190817 19:24:52.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.358" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.353" endtime="20190817 19:24:52.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.359" endtime="20190817 19:24:52.359"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.359" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"HT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+509","national_id":""},"address":{"country":"HT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+509","first_name":"","last_name":"","company":"Umbrella Corp. HT"}}} </msg>
<msg timestamp="20190817 19:24:52.359" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.360" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'HT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+509', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.359" endtime="20190817 19:24:52.360"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.360" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.360" endtime="20190817 19:24:52.360"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.360" endtime="20190817 19:24:52.360"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.353" endtime="20190817 19:24:52.361"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.353" endtime="20190817 19:24:52.361"></status>
</kw>
<kw name="${item} = HM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.361" level="INFO">&amp;{parameter} = { locale=HM }</msg>
<status status="PASS" starttime="20190817 19:24:52.361" endtime="20190817 19:24:52.361"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.370" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.361" endtime="20190817 19:24:52.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.370" endtime="20190817 19:24:52.371"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.372" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.372" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.372" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.371" endtime="20190817 19:24:52.372"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.373" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.372" endtime="20190817 19:24:52.373"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.372" endtime="20190817 19:24:52.373"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.361" endtime="20190817 19:24:52.374"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.361" endtime="20190817 19:24:52.374"></status>
</kw>
<kw name="${item} = VA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.375" level="INFO">&amp;{parameter} = { locale=VA }</msg>
<status status="PASS" starttime="20190817 19:24:52.374" endtime="20190817 19:24:52.375"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.381" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.375" endtime="20190817 19:24:52.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.381" endtime="20190817 19:24:52.381"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.382" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+39","national_id":""},"address":{"country":"VA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+39","first_name":"","last_name":"","company":"Umbrella Corp. VA"}}} </msg>
<msg timestamp="20190817 19:24:52.382" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.382" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+39', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.381" endtime="20190817 19:24:52.382"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.382" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.382" endtime="20190817 19:24:52.382"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.382" endtime="20190817 19:24:52.383"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.374" endtime="20190817 19:24:52.383"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.374" endtime="20190817 19:24:52.383"></status>
</kw>
<kw name="${item} = HN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.384" level="INFO">&amp;{parameter} = { locale=HN }</msg>
<status status="PASS" starttime="20190817 19:24:52.383" endtime="20190817 19:24:52.384"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.390" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.384" endtime="20190817 19:24:52.390"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.390" endtime="20190817 19:24:52.391"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.391" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"HN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+504","national_id":""},"address":{"country":"HN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+504","first_name":"","last_name":"","company":"Umbrella Corp. HN"}}} </msg>
<msg timestamp="20190817 19:24:52.391" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.391" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'HN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+504', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.391" endtime="20190817 19:24:52.391"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.392" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.392" endtime="20190817 19:24:52.392"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.391" endtime="20190817 19:24:52.392"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.383" endtime="20190817 19:24:52.392"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.383" endtime="20190817 19:24:52.392"></status>
</kw>
<kw name="${item} = HK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.393" level="INFO">&amp;{parameter} = { locale=HK }</msg>
<status status="PASS" starttime="20190817 19:24:52.393" endtime="20190817 19:24:52.393"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.398" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.393" endtime="20190817 19:24:52.398"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.399" endtime="20190817 19:24:52.399"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.399" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"HK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+852","national_id":""},"address":{"country":"HK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+852","first_name":"","last_name":"","company":"Umbrella Corp. HK"}}} </msg>
<msg timestamp="20190817 19:24:52.399" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.399" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'HK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+852', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.399" endtime="20190817 19:24:52.399"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.400" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.400" endtime="20190817 19:24:52.400"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.399" endtime="20190817 19:24:52.400"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.392" endtime="20190817 19:24:52.400"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.392" endtime="20190817 19:24:52.400"></status>
</kw>
<kw name="${item} = IS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.401" level="INFO">&amp;{parameter} = { locale=IS }</msg>
<status status="PASS" starttime="20190817 19:24:52.401" endtime="20190817 19:24:52.401"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.405" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.401" endtime="20190817 19:24:52.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.406" endtime="20190817 19:24:52.406"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.407" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+354","national_id":""},"address":{"country":"IS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+354","first_name":"","last_name":"","company":"Umbrella Corp. IS"}}} </msg>
<msg timestamp="20190817 19:24:52.407" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.407" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+354', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.406" endtime="20190817 19:24:52.407"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.408" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.407" endtime="20190817 19:24:52.408"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.407" endtime="20190817 19:24:52.408"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.400" endtime="20190817 19:24:52.408"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.400" endtime="20190817 19:24:52.408"></status>
</kw>
<kw name="${item} = ID" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.409" level="INFO">&amp;{parameter} = { locale=ID }</msg>
<status status="PASS" starttime="20190817 19:24:52.408" endtime="20190817 19:24:52.409"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.414" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.409" endtime="20190817 19:24:52.414"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.414" endtime="20190817 19:24:52.415"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.415" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ID","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+235","national_id":""},"address":{"country":"ID","address_line1":"177 Gina Summit","address_line2":"","city":"New Yonoburgh","post_code":"41418","region_name":"Maluku Utara","landline":"+235","first_name":"","last_name":"","company":"Umbrella Corp. ID"}}} </msg>
<msg timestamp="20190817 19:24:52.415" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.415" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ID', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+235', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.415" endtime="20190817 19:24:52.415"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.416" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.416" endtime="20190817 19:24:52.416"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.415" endtime="20190817 19:24:52.416"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.408" endtime="20190817 19:24:52.416"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.408" endtime="20190817 19:24:52.416"></status>
</kw>
<kw name="${item} = IQ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.417" level="INFO">&amp;{parameter} = { locale=IQ }</msg>
<status status="PASS" starttime="20190817 19:24:52.417" endtime="20190817 19:24:52.417"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.423" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.417" endtime="20190817 19:24:52.424"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.424" endtime="20190817 19:24:52.424"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.424" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IQ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+964","national_id":""},"address":{"country":"IQ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+964","first_name":"","last_name":"","company":"Umbrella Corp. IQ"}}} </msg>
<msg timestamp="20190817 19:24:52.424" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.425" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IQ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+964', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.424" endtime="20190817 19:24:52.425"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.425" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.425" endtime="20190817 19:24:52.426"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.425" endtime="20190817 19:24:52.426"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.416" endtime="20190817 19:24:52.426"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.416" endtime="20190817 19:24:52.426"></status>
</kw>
<kw name="${item} = IE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.427" level="INFO">&amp;{parameter} = { locale=IE }</msg>
<status status="PASS" starttime="20190817 19:24:52.426" endtime="20190817 19:24:52.427"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.433" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.427" endtime="20190817 19:24:52.434"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.434" endtime="20190817 19:24:52.435"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.435" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"IE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+353851459717","national_id":""},"address":{"country":"IE","address_line1":"63298 Blick Orchard","address_line2":"","city":"Larkintown","post_code":"65019-3850","region_name":"New York","landline":"+353851459717","first_name":"","last_name":"","company":"Umbrella Corp. IE"}}} </msg>
<msg timestamp="20190817 19:24:52.435" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.436" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'IE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+353851459717', 'national_id': ''}, 'address': {'c...</msg>
<status status="PASS" starttime="20190817 19:24:52.435" endtime="20190817 19:24:52.436"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.437" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.436" endtime="20190817 19:24:52.437"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.436" endtime="20190817 19:24:52.437"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.426" endtime="20190817 19:24:52.437"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.426" endtime="20190817 19:24:52.437"></status>
</kw>
<kw name="${item} = IM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.439" level="INFO">&amp;{parameter} = { locale=IM }</msg>
<status status="PASS" starttime="20190817 19:24:52.438" endtime="20190817 19:24:52.439"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.447" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.439" endtime="20190817 19:24:52.447"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.447" endtime="20190817 19:24:52.448"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.449" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.449" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.449" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.448" endtime="20190817 19:24:52.449"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.450" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.449" endtime="20190817 19:24:52.450"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.449" endtime="20190817 19:24:52.450"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.438" endtime="20190817 19:24:52.450"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.437" endtime="20190817 19:24:52.451"></status>
</kw>
<kw name="${item} = JM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.452" level="INFO">&amp;{parameter} = { locale=JM }</msg>
<status status="PASS" starttime="20190817 19:24:52.451" endtime="20190817 19:24:52.452"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.458" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.452" endtime="20190817 19:24:52.458"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.458" endtime="20190817 19:24:52.459"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.460" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"JM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"JM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. JM"}}} </msg>
<msg timestamp="20190817 19:24:52.460" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.460" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'JM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'J...</msg>
<status status="PASS" starttime="20190817 19:24:52.459" endtime="20190817 19:24:52.460"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.462" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.461" endtime="20190817 19:24:52.462"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.460" endtime="20190817 19:24:52.463"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.451" endtime="20190817 19:24:52.463"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.451" endtime="20190817 19:24:52.463"></status>
</kw>
<kw name="${item} = JE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.463" level="INFO">&amp;{parameter} = { locale=JE }</msg>
<status status="PASS" starttime="20190817 19:24:52.463" endtime="20190817 19:24:52.464"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.469" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.464" endtime="20190817 19:24:52.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.470" endtime="20190817 19:24:52.470"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.471" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.471" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.471" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.470" endtime="20190817 19:24:52.471"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.472" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.472" endtime="20190817 19:24:52.472"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.471" endtime="20190817 19:24:52.472"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.463" endtime="20190817 19:24:52.473"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.463" endtime="20190817 19:24:52.473"></status>
</kw>
<kw name="${item} = JO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.474" level="INFO">&amp;{parameter} = { locale=JO }</msg>
<status status="PASS" starttime="20190817 19:24:52.474" endtime="20190817 19:24:52.474"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.481" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.474" endtime="20190817 19:24:52.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.481" endtime="20190817 19:24:52.482"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.482" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"JO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+962","national_id":""},"address":{"country":"JO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+962","first_name":"","last_name":"","company":"Umbrella Corp. JO"}}} </msg>
<msg timestamp="20190817 19:24:52.482" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.482" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'JO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+962', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.482" endtime="20190817 19:24:52.482"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.483" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.483" endtime="20190817 19:24:52.483"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.482" endtime="20190817 19:24:52.483"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.473" endtime="20190817 19:24:52.483"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.473" endtime="20190817 19:24:52.483"></status>
</kw>
<kw name="${item} = KZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.484" level="INFO">&amp;{parameter} = { locale=KZ }</msg>
<status status="PASS" starttime="20190817 19:24:52.484" endtime="20190817 19:24:52.484"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.488" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.484" endtime="20190817 19:24:52.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.488" endtime="20190817 19:24:52.489"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.489" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+7","national_id":""},"address":{"country":"KZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+7","first_name":"","last_name":"","company":"Umbrella Corp. KZ"}}} </msg>
<msg timestamp="20190817 19:24:52.489" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.489" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+7', 'national_id': ''}, 'address': {'country': 'K...</msg>
<status status="PASS" starttime="20190817 19:24:52.489" endtime="20190817 19:24:52.489"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.490" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.490" endtime="20190817 19:24:52.490"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.490" endtime="20190817 19:24:52.490"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.483" endtime="20190817 19:24:52.490"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.483" endtime="20190817 19:24:52.490"></status>
</kw>
<kw name="${item} = KE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.491" level="INFO">&amp;{parameter} = { locale=KE }</msg>
<status status="PASS" starttime="20190817 19:24:52.491" endtime="20190817 19:24:52.491"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.496" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.491" endtime="20190817 19:24:52.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.496" endtime="20190817 19:24:52.497"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.497" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+254","national_id":""},"address":{"country":"KE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+254","first_name":"","last_name":"","company":"Umbrella Corp. KE"}}} </msg>
<msg timestamp="20190817 19:24:52.497" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.497" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+254', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.497" endtime="20190817 19:24:52.497"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.498" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.498" endtime="20190817 19:24:52.498"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.497" endtime="20190817 19:24:52.498"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.491" endtime="20190817 19:24:52.498"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.490" endtime="20190817 19:24:52.498"></status>
</kw>
<kw name="${item} = KI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.499" level="INFO">&amp;{parameter} = { locale=KI }</msg>
<status status="PASS" starttime="20190817 19:24:52.499" endtime="20190817 19:24:52.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.504" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.500" endtime="20190817 19:24:52.504"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.504" endtime="20190817 19:24:52.505"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.505" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+686","national_id":""},"address":{"country":"KI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+686","first_name":"","last_name":"","company":"Umbrella Corp. KI"}}} </msg>
<msg timestamp="20190817 19:24:52.505" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.505" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+686', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.505" endtime="20190817 19:24:52.505"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.506" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.506" endtime="20190817 19:24:52.506"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.505" endtime="20190817 19:24:52.506"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.499" endtime="20190817 19:24:52.506"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.499" endtime="20190817 19:24:52.506"></status>
</kw>
<kw name="${item} = KP" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.507" level="INFO">&amp;{parameter} = { locale=KP }</msg>
<status status="PASS" starttime="20190817 19:24:52.507" endtime="20190817 19:24:52.507"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.512" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.507" endtime="20190817 19:24:52.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.512" endtime="20190817 19:24:52.513"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.513" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KP","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+850","national_id":""},"address":{"country":"KP","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+850","first_name":"","last_name":"","company":"Umbrella Corp. KP"}}} </msg>
<msg timestamp="20190817 19:24:52.513" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.513" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KP', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+850', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.513" endtime="20190817 19:24:52.513"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.515" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.514" endtime="20190817 19:24:52.515"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.514" endtime="20190817 19:24:52.515"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.507" endtime="20190817 19:24:52.516"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.507" endtime="20190817 19:24:52.516"></status>
</kw>
<kw name="${item} = KW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.517" level="INFO">&amp;{parameter} = { locale=KW }</msg>
<status status="PASS" starttime="20190817 19:24:52.517" endtime="20190817 19:24:52.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.523" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.517" endtime="20190817 19:24:52.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.523" endtime="20190817 19:24:52.524"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.525" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+965","national_id":""},"address":{"country":"KW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+965","first_name":"","last_name":"","company":"Umbrella Corp. KW"}}} </msg>
<msg timestamp="20190817 19:24:52.525" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.525" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+965', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.524" endtime="20190817 19:24:52.525"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.526" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.525" endtime="20190817 19:24:52.526"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.525" endtime="20190817 19:24:52.526"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.516" endtime="20190817 19:24:52.526"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.516" endtime="20190817 19:24:52.526"></status>
</kw>
<kw name="${item} = KG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.528" level="INFO">&amp;{parameter} = { locale=KG }</msg>
<status status="PASS" starttime="20190817 19:24:52.527" endtime="20190817 19:24:52.528"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.533" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.528" endtime="20190817 19:24:52.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.533" endtime="20190817 19:24:52.534"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.534" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+996","national_id":""},"address":{"country":"KG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+996","first_name":"","last_name":"","company":"Umbrella Corp. KG"}}} </msg>
<msg timestamp="20190817 19:24:52.534" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.535" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+996', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.534" endtime="20190817 19:24:52.535"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.536" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.535" endtime="20190817 19:24:52.536"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.535" endtime="20190817 19:24:52.536"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.527" endtime="20190817 19:24:52.536"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.526" endtime="20190817 19:24:52.536"></status>
</kw>
<kw name="${item} = LA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.537" level="INFO">&amp;{parameter} = { locale=LA }</msg>
<status status="PASS" starttime="20190817 19:24:52.536" endtime="20190817 19:24:52.537"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.541" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.537" endtime="20190817 19:24:52.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.542" endtime="20190817 19:24:52.542"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.542" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+856","national_id":""},"address":{"country":"LA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+856","first_name":"","last_name":"","company":"Umbrella Corp. LA"}}} </msg>
<msg timestamp="20190817 19:24:52.542" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.542" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+856', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.542" endtime="20190817 19:24:52.542"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.543" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.543" endtime="20190817 19:24:52.543"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.543" endtime="20190817 19:24:52.543"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.536" endtime="20190817 19:24:52.544"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.536" endtime="20190817 19:24:52.544"></status>
</kw>
<kw name="${item} = LV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.545" level="INFO">&amp;{parameter} = { locale=LV }</msg>
<status status="PASS" starttime="20190817 19:24:52.544" endtime="20190817 19:24:52.545"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.551" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.545" endtime="20190817 19:24:52.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.551" endtime="20190817 19:24:52.551"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.552" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LV","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+37126154224","national_id":""},"address":{"country":"LV","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+37126154224","first_name":"","last_name":"","company":"Umbrella Corp. LV"}}} </msg>
<msg timestamp="20190817 19:24:52.552" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.552" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LV', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+37126154224', 'national_id': ''}, 'address': {'co...</msg>
<status status="PASS" starttime="20190817 19:24:52.552" endtime="20190817 19:24:52.552"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.553" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.552" endtime="20190817 19:24:52.553"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.552" endtime="20190817 19:24:52.553"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.544" endtime="20190817 19:24:52.553"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.544" endtime="20190817 19:24:52.553"></status>
</kw>
<kw name="${item} = LB" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.554" level="INFO">&amp;{parameter} = { locale=LB }</msg>
<status status="PASS" starttime="20190817 19:24:52.553" endtime="20190817 19:24:52.554"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.558" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.554" endtime="20190817 19:24:52.558"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.558" endtime="20190817 19:24:52.558"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.559" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LB","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+961","national_id":""},"address":{"country":"LB","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+961","first_name":"","last_name":"","company":"Umbrella Corp. LB"}}} </msg>
<msg timestamp="20190817 19:24:52.559" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.559" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LB', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+961', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.558" endtime="20190817 19:24:52.559"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.560" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.559" endtime="20190817 19:24:52.560"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.559" endtime="20190817 19:24:52.560"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.553" endtime="20190817 19:24:52.560"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.553" endtime="20190817 19:24:52.560"></status>
</kw>
<kw name="${item} = LS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.560" level="INFO">&amp;{parameter} = { locale=LS }</msg>
<status status="PASS" starttime="20190817 19:24:52.560" endtime="20190817 19:24:52.561"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.564" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.561" endtime="20190817 19:24:52.564"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.565" endtime="20190817 19:24:52.565"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.565" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+266","national_id":""},"address":{"country":"LS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+266","first_name":"","last_name":"","company":"Umbrella Corp. LS"}}} </msg>
<msg timestamp="20190817 19:24:52.565" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.565" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+266', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.565" endtime="20190817 19:24:52.565"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.566" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.566" endtime="20190817 19:24:52.566"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.566" endtime="20190817 19:24:52.566"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.560" endtime="20190817 19:24:52.566"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.560" endtime="20190817 19:24:52.566"></status>
</kw>
<kw name="${item} = LR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.567" level="INFO">&amp;{parameter} = { locale=LR }</msg>
<status status="PASS" starttime="20190817 19:24:52.567" endtime="20190817 19:24:52.567"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.577" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.567" endtime="20190817 19:24:52.577"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.577" endtime="20190817 19:24:52.577"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.578" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+231","national_id":""},"address":{"country":"LR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+231","first_name":"","last_name":"","company":"Umbrella Corp. LR"}}} </msg>
<msg timestamp="20190817 19:24:52.578" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.578" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+231', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.578" endtime="20190817 19:24:52.578"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.579" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.578" endtime="20190817 19:24:52.579"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.578" endtime="20190817 19:24:52.579"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.567" endtime="20190817 19:24:52.580"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.566" endtime="20190817 19:24:52.580"></status>
</kw>
<kw name="${item} = LY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.581" level="INFO">&amp;{parameter} = { locale=LY }</msg>
<status status="PASS" starttime="20190817 19:24:52.581" endtime="20190817 19:24:52.581"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.586" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.581" endtime="20190817 19:24:52.586"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.586" endtime="20190817 19:24:52.587"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.587" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+218","national_id":""},"address":{"country":"LY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+218","first_name":"","last_name":"","company":"Umbrella Corp. LY"}}} </msg>
<msg timestamp="20190817 19:24:52.587" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.588" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+218', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.587" endtime="20190817 19:24:52.588"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.589" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.588" endtime="20190817 19:24:52.589"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.588" endtime="20190817 19:24:52.589"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.580" endtime="20190817 19:24:52.589"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.580" endtime="20190817 19:24:52.589"></status>
</kw>
<kw name="${item} = LI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.590" level="INFO">&amp;{parameter} = { locale=LI }</msg>
<status status="PASS" starttime="20190817 19:24:52.590" endtime="20190817 19:24:52.590"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.595" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.590" endtime="20190817 19:24:52.595"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.595" endtime="20190817 19:24:52.596"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.596" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+423","national_id":""},"address":{"country":"LI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+423","first_name":"","last_name":"","company":"Umbrella Corp. LI"}}} </msg>
<msg timestamp="20190817 19:24:52.596" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.596" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+423', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.596" endtime="20190817 19:24:52.596"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.597" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.597" endtime="20190817 19:24:52.597"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.596" endtime="20190817 19:24:52.597"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.589" endtime="20190817 19:24:52.597"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.589" endtime="20190817 19:24:52.597"></status>
</kw>
<kw name="${item} = LT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.599" level="INFO">&amp;{parameter} = { locale=LT }</msg>
<status status="PASS" starttime="20190817 19:24:52.598" endtime="20190817 19:24:52.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.603" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.599" endtime="20190817 19:24:52.604"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.604" endtime="20190817 19:24:52.604"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.604" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+37066639835","national_id":""},"address":{"country":"LT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+37066639835","first_name":"","last_name":"","company":"Umbrella Corp. LT"}}} </msg>
<msg timestamp="20190817 19:24:52.604" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.605" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+37066639835', 'national_id': ''}, 'address': {'co...</msg>
<status status="PASS" starttime="20190817 19:24:52.604" endtime="20190817 19:24:52.605"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.605" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.605" endtime="20190817 19:24:52.606"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.605" endtime="20190817 19:24:52.606"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.597" endtime="20190817 19:24:52.606"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.597" endtime="20190817 19:24:52.606"></status>
</kw>
<kw name="${item} = LU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.607" level="INFO">&amp;{parameter} = { locale=LU }</msg>
<status status="PASS" starttime="20190817 19:24:52.606" endtime="20190817 19:24:52.607"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.612" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.607" endtime="20190817 19:24:52.612"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.613" endtime="20190817 19:24:52.613"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.613" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+352621636475","national_id":""},"address":{"country":"LU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+352621636475","first_name":"","last_name":"","company":"Umbrella Corp. LU"}}} </msg>
<msg timestamp="20190817 19:24:52.613" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.613" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+352621636475', 'national_id': ''}, 'address': {'c...</msg>
<status status="PASS" starttime="20190817 19:24:52.613" endtime="20190817 19:24:52.613"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.614" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.614" endtime="20190817 19:24:52.614"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.613" endtime="20190817 19:24:52.614"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.606" endtime="20190817 19:24:52.614"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.606" endtime="20190817 19:24:52.614"></status>
</kw>
<kw name="${item} = MO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.615" level="INFO">&amp;{parameter} = { locale=MO }</msg>
<status status="PASS" starttime="20190817 19:24:52.615" endtime="20190817 19:24:52.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.620" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.615" endtime="20190817 19:24:52.620"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.621" endtime="20190817 19:24:52.621"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.622" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+853","national_id":""},"address":{"country":"MO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+853","first_name":"","last_name":"","company":"Umbrella Corp. MO"}}} </msg>
<msg timestamp="20190817 19:24:52.622" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.622" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+853', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.621" endtime="20190817 19:24:52.622"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.622" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.622" endtime="20190817 19:24:52.623"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.622" endtime="20190817 19:24:52.623"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.614" endtime="20190817 19:24:52.623"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.614" endtime="20190817 19:24:52.623"></status>
</kw>
<kw name="${item} = MK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.624" level="INFO">&amp;{parameter} = { locale=MK }</msg>
<status status="PASS" starttime="20190817 19:24:52.623" endtime="20190817 19:24:52.624"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.629" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.624" endtime="20190817 19:24:52.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.630" endtime="20190817 19:24:52.630"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.630" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+389","national_id":""},"address":{"country":"MK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+389","first_name":"","last_name":"","company":"Umbrella Corp. MK"}}} </msg>
<msg timestamp="20190817 19:24:52.630" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.631" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+389', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.630" endtime="20190817 19:24:52.631"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.631" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.631" endtime="20190817 19:24:52.631"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.631" endtime="20190817 19:24:52.631"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.623" endtime="20190817 19:24:52.632"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.623" endtime="20190817 19:24:52.632"></status>
</kw>
<kw name="${item} = MG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.632" level="INFO">&amp;{parameter} = { locale=MG }</msg>
<status status="PASS" starttime="20190817 19:24:52.632" endtime="20190817 19:24:52.632"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.636" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.632" endtime="20190817 19:24:52.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.637" endtime="20190817 19:24:52.637"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.638" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+261","national_id":""},"address":{"country":"MG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+261","first_name":"","last_name":"","company":"Umbrella Corp. MG"}}} </msg>
<msg timestamp="20190817 19:24:52.638" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.638" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+261', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.637" endtime="20190817 19:24:52.638"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.639" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.638" endtime="20190817 19:24:52.639"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.638" endtime="20190817 19:24:52.639"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.632" endtime="20190817 19:24:52.639"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.632" endtime="20190817 19:24:52.639"></status>
</kw>
<kw name="${item} = MW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.640" level="INFO">&amp;{parameter} = { locale=MW }</msg>
<status status="PASS" starttime="20190817 19:24:52.639" endtime="20190817 19:24:52.640"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.645" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.640" endtime="20190817 19:24:52.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.645" endtime="20190817 19:24:52.646"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.646" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+265","national_id":""},"address":{"country":"MW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+265","first_name":"","last_name":"","company":"Umbrella Corp. MW"}}} </msg>
<msg timestamp="20190817 19:24:52.646" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.646" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+265', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.646" endtime="20190817 19:24:52.646"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.647" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.647" endtime="20190817 19:24:52.647"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.646" endtime="20190817 19:24:52.647"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.639" endtime="20190817 19:24:52.647"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.639" endtime="20190817 19:24:52.648"></status>
</kw>
<kw name="${item} = MY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.649" level="INFO">&amp;{parameter} = { locale=MY }</msg>
<status status="PASS" starttime="20190817 19:24:52.648" endtime="20190817 19:24:52.650"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.658" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.650" endtime="20190817 19:24:52.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.659" endtime="20190817 19:24:52.659"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.659" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+60","national_id":""},"address":{"country":"MY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+60","first_name":"","last_name":"","company":"Umbrella Corp. MY"}}} </msg>
<msg timestamp="20190817 19:24:52.659" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.660" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+60', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.659" endtime="20190817 19:24:52.660"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.660" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.660" endtime="20190817 19:24:52.660"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.660" endtime="20190817 19:24:52.660"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.648" endtime="20190817 19:24:52.660"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.648" endtime="20190817 19:24:52.660"></status>
</kw>
<kw name="${item} = MV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.662" level="INFO">&amp;{parameter} = { locale=MV }</msg>
<status status="PASS" starttime="20190817 19:24:52.661" endtime="20190817 19:24:52.662"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.673" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.662" endtime="20190817 19:24:52.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.674" endtime="20190817 19:24:52.674"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.674" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MV","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+960","national_id":""},"address":{"country":"MV","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+960","first_name":"","last_name":"","company":"Umbrella Corp. MV"}}} </msg>
<msg timestamp="20190817 19:24:52.675" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.675" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MV', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+960', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.674" endtime="20190817 19:24:52.675"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.676" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.675" endtime="20190817 19:24:52.676"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.675" endtime="20190817 19:24:52.676"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.661" endtime="20190817 19:24:52.676"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.661" endtime="20190817 19:24:52.676"></status>
</kw>
<kw name="${item} = ML" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.677" level="INFO">&amp;{parameter} = { locale=ML }</msg>
<status status="PASS" starttime="20190817 19:24:52.677" endtime="20190817 19:24:52.677"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.685" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.677" endtime="20190817 19:24:52.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.685" endtime="20190817 19:24:52.685"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.686" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ML","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+223","national_id":""},"address":{"country":"ML","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+223","first_name":"","last_name":"","company":"Umbrella Corp. ML"}}} </msg>
<msg timestamp="20190817 19:24:52.686" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.686" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ML', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+223', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.686" endtime="20190817 19:24:52.686"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.687" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.686" endtime="20190817 19:24:52.687"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.686" endtime="20190817 19:24:52.687"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.676" endtime="20190817 19:24:52.687"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.676" endtime="20190817 19:24:52.687"></status>
</kw>
<kw name="${item} = MT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.688" level="INFO">&amp;{parameter} = { locale=MT }</msg>
<status status="PASS" starttime="20190817 19:24:52.687" endtime="20190817 19:24:52.688"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.693" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.688" endtime="20190817 19:24:52.693"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.693" endtime="20190817 19:24:52.693"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.694" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+35677673034","national_id":""},"address":{"country":"MT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+35677673034","first_name":"","last_name":"","company":"Umbrella Corp. MT"}}} </msg>
<msg timestamp="20190817 19:24:52.694" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.694" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+35677673034', 'national_id': ''}, 'address': {'co...</msg>
<status status="PASS" starttime="20190817 19:24:52.693" endtime="20190817 19:24:52.694"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.695" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.694" endtime="20190817 19:24:52.695"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.694" endtime="20190817 19:24:52.695"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.687" endtime="20190817 19:24:52.695"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.687" endtime="20190817 19:24:52.695"></status>
</kw>
<kw name="${item} = MH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.696" level="INFO">&amp;{parameter} = { locale=MH }</msg>
<status status="PASS" starttime="20190817 19:24:52.695" endtime="20190817 19:24:52.696"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.699" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.696" endtime="20190817 19:24:52.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.700" endtime="20190817 19:24:52.700"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.700" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+692","national_id":""},"address":{"country":"MH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+692","first_name":"","last_name":"","company":"Umbrella Corp. MH"}}} </msg>
<msg timestamp="20190817 19:24:52.700" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.700" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+692', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.700" endtime="20190817 19:24:52.700"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.701" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.701" endtime="20190817 19:24:52.701"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.701" endtime="20190817 19:24:52.701"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.695" endtime="20190817 19:24:52.701"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.695" endtime="20190817 19:24:52.701"></status>
</kw>
<kw name="${item} = MQ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.702" level="INFO">&amp;{parameter} = { locale=MQ }</msg>
<status status="PASS" starttime="20190817 19:24:52.702" endtime="20190817 19:24:52.702"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.706" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.702" endtime="20190817 19:24:52.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.706" endtime="20190817 19:24:52.707"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.707" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MQ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+596","national_id":""},"address":{"country":"MQ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+596","first_name":"","last_name":"","company":"Umbrella Corp. MQ"}}} </msg>
<msg timestamp="20190817 19:24:52.707" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.707" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MQ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+596', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.707" endtime="20190817 19:24:52.707"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.708" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.708" endtime="20190817 19:24:52.708"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.707" endtime="20190817 19:24:52.708"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.701" endtime="20190817 19:24:52.708"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.701" endtime="20190817 19:24:52.708"></status>
</kw>
<kw name="${item} = MR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.709" level="INFO">&amp;{parameter} = { locale=MR }</msg>
<status status="PASS" starttime="20190817 19:24:52.709" endtime="20190817 19:24:52.709"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.714" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.709" endtime="20190817 19:24:52.714"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.714" endtime="20190817 19:24:52.715"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.715" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+222","national_id":""},"address":{"country":"MR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+222","first_name":"","last_name":"","company":"Umbrella Corp. MR"}}} </msg>
<msg timestamp="20190817 19:24:52.715" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.715" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+222', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.715" endtime="20190817 19:24:52.715"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.716" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.715" endtime="20190817 19:24:52.716"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.715" endtime="20190817 19:24:52.716"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.708" endtime="20190817 19:24:52.716"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.708" endtime="20190817 19:24:52.716"></status>
</kw>
<kw name="${item} = MU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.717" level="INFO">&amp;{parameter} = { locale=MU }</msg>
<status status="PASS" starttime="20190817 19:24:52.716" endtime="20190817 19:24:52.717"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.721" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.717" endtime="20190817 19:24:52.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.721" endtime="20190817 19:24:52.722"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.722" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+230","national_id":""},"address":{"country":"MU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+230","first_name":"","last_name":"","company":"Umbrella Corp. MU"}}} </msg>
<msg timestamp="20190817 19:24:52.722" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.722" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+230', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.722" endtime="20190817 19:24:52.722"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.723" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.723" endtime="20190817 19:24:52.723"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.722" endtime="20190817 19:24:52.723"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.716" endtime="20190817 19:24:52.724"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.716" endtime="20190817 19:24:52.724"></status>
</kw>
<kw name="${item} = YT" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.725" level="INFO">&amp;{parameter} = { locale=YT }</msg>
<status status="PASS" starttime="20190817 19:24:52.725" endtime="20190817 19:24:52.725"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.731" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.725" endtime="20190817 19:24:52.731"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.731" endtime="20190817 19:24:52.732"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.732" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"YT","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+262","national_id":""},"address":{"country":"YT","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+262","first_name":"","last_name":"","company":"Umbrella Corp. YT"}}} </msg>
<msg timestamp="20190817 19:24:52.733" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.733" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'YT', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+262', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.732" endtime="20190817 19:24:52.733"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.734" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.733" endtime="20190817 19:24:52.734"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.733" endtime="20190817 19:24:52.734"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.724" endtime="20190817 19:24:52.734"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.724" endtime="20190817 19:24:52.734"></status>
</kw>
<kw name="${item} = FM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.735" level="INFO">&amp;{parameter} = { locale=FM }</msg>
<status status="PASS" starttime="20190817 19:24:52.734" endtime="20190817 19:24:52.735"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.740" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.735" endtime="20190817 19:24:52.740"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.741" endtime="20190817 19:24:52.741"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.741" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"FM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+691","national_id":""},"address":{"country":"FM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+691","first_name":"","last_name":"","company":"Umbrella Corp. FM"}}} </msg>
<msg timestamp="20190817 19:24:52.741" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.741" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'FM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+691', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.741" endtime="20190817 19:24:52.742"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.742" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.742" endtime="20190817 19:24:52.742"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.742" endtime="20190817 19:24:52.742"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.734" endtime="20190817 19:24:52.743"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.734" endtime="20190817 19:24:52.743"></status>
</kw>
<kw name="${item} = MD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.743" level="INFO">&amp;{parameter} = { locale=MD }</msg>
<status status="PASS" starttime="20190817 19:24:52.743" endtime="20190817 19:24:52.743"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.749" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.744" endtime="20190817 19:24:52.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.750" endtime="20190817 19:24:52.750"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.751" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MD","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+373","national_id":""},"address":{"country":"MD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+373","first_name":"","last_name":"","company":"Umbrella Corp. MD"}}} </msg>
<msg timestamp="20190817 19:24:52.751" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.751" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MD', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+373', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.750" endtime="20190817 19:24:52.751"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.752" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.751" endtime="20190817 19:24:52.752"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.751" endtime="20190817 19:24:52.752"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.743" endtime="20190817 19:24:52.752"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.743" endtime="20190817 19:24:52.752"></status>
</kw>
<kw name="${item} = MC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.753" level="INFO">&amp;{parameter} = { locale=MC }</msg>
<status status="PASS" starttime="20190817 19:24:52.753" endtime="20190817 19:24:52.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.760" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.753" endtime="20190817 19:24:52.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.761" endtime="20190817 19:24:52.761"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.761" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+377","national_id":""},"address":{"country":"MC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+377","first_name":"","last_name":"","company":"Umbrella Corp. MC"}}} </msg>
<msg timestamp="20190817 19:24:52.761" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.762" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+377', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.761" endtime="20190817 19:24:52.762"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.762" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.762" endtime="20190817 19:24:52.762"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.762" endtime="20190817 19:24:52.762"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.752" endtime="20190817 19:24:52.763"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.752" endtime="20190817 19:24:52.763"></status>
</kw>
<kw name="${item} = MN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.763" level="INFO">&amp;{parameter} = { locale=MN }</msg>
<status status="PASS" starttime="20190817 19:24:52.763" endtime="20190817 19:24:52.763"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.768" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.764" endtime="20190817 19:24:52.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.768" endtime="20190817 19:24:52.768"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.769" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+976","national_id":""},"address":{"country":"MN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+976","first_name":"","last_name":"","company":"Umbrella Corp. MN"}}} </msg>
<msg timestamp="20190817 19:24:52.769" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.769" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+976', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.768" endtime="20190817 19:24:52.769"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.770" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.770" endtime="20190817 19:24:52.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.769" endtime="20190817 19:24:52.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.763" endtime="20190817 19:24:52.770"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.763" endtime="20190817 19:24:52.770"></status>
</kw>
<kw name="${item} = ME" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.771" level="INFO">&amp;{parameter} = { locale=ME }</msg>
<status status="PASS" starttime="20190817 19:24:52.771" endtime="20190817 19:24:52.771"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.775" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.771" endtime="20190817 19:24:52.775"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.776" endtime="20190817 19:24:52.776"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.776" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ME","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+382","national_id":""},"address":{"country":"ME","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+382","first_name":"","last_name":"","company":"Umbrella Corp. ME"}}} </msg>
<msg timestamp="20190817 19:24:52.776" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.776" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ME', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+382', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.776" endtime="20190817 19:24:52.776"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.777" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.777" endtime="20190817 19:24:52.777"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.776" endtime="20190817 19:24:52.777"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.771" endtime="20190817 19:24:52.777"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.770" endtime="20190817 19:24:52.777"></status>
</kw>
<kw name="${item} = MS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.778" level="INFO">&amp;{parameter} = { locale=MS }</msg>
<status status="PASS" starttime="20190817 19:24:52.778" endtime="20190817 19:24:52.778"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.787" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.778" endtime="20190817 19:24:52.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.787" endtime="20190817 19:24:52.788"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.788" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"MS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. MS"}}} </msg>
<msg timestamp="20190817 19:24:52.788" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.788" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'M...</msg>
<status status="PASS" starttime="20190817 19:24:52.788" endtime="20190817 19:24:52.789"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.790" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.789" endtime="20190817 19:24:52.790"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.789" endtime="20190817 19:24:52.790"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.777" endtime="20190817 19:24:52.790"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.777" endtime="20190817 19:24:52.790"></status>
</kw>
<kw name="${item} = MZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.791" level="INFO">&amp;{parameter} = { locale=MZ }</msg>
<status status="PASS" starttime="20190817 19:24:52.791" endtime="20190817 19:24:52.791"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.798" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.791" endtime="20190817 19:24:52.798"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.798" endtime="20190817 19:24:52.799"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.799" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+258","national_id":""},"address":{"country":"MZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+258","first_name":"","last_name":"","company":"Umbrella Corp. MZ"}}} </msg>
<msg timestamp="20190817 19:24:52.799" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.799" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+258', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.799" endtime="20190817 19:24:52.799"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.800" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.800" endtime="20190817 19:24:52.800"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.799" endtime="20190817 19:24:52.800"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.790" endtime="20190817 19:24:52.800"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.790" endtime="20190817 19:24:52.800"></status>
</kw>
<kw name="${item} = MM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.801" level="INFO">&amp;{parameter} = { locale=MM }</msg>
<status status="PASS" starttime="20190817 19:24:52.801" endtime="20190817 19:24:52.801"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.808" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.801" endtime="20190817 19:24:52.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.809" endtime="20190817 19:24:52.809"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.809" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+95","national_id":""},"address":{"country":"MM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+95","first_name":"","last_name":"","company":"Umbrella Corp. MM"}}} </msg>
<msg timestamp="20190817 19:24:52.809" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.809" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+95', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.809" endtime="20190817 19:24:52.810"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.810" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.810" endtime="20190817 19:24:52.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.810" endtime="20190817 19:24:52.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.800" endtime="20190817 19:24:52.810"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.800" endtime="20190817 19:24:52.810"></status>
</kw>
<kw name="${item} = NA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.811" level="INFO">&amp;{parameter} = { locale=NA }</msg>
<status status="PASS" starttime="20190817 19:24:52.811" endtime="20190817 19:24:52.811"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.817" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.811" endtime="20190817 19:24:52.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.818" endtime="20190817 19:24:52.818"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.818" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+264","national_id":""},"address":{"country":"NA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+264","first_name":"","last_name":"","company":"Umbrella Corp. NA"}}} </msg>
<msg timestamp="20190817 19:24:52.819" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.819" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+264', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.818" endtime="20190817 19:24:52.819"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.819" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.819" endtime="20190817 19:24:52.819"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.819" endtime="20190817 19:24:52.819"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.811" endtime="20190817 19:24:52.819"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.811" endtime="20190817 19:24:52.820"></status>
</kw>
<kw name="${item} = NR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.820" level="INFO">&amp;{parameter} = { locale=NR }</msg>
<status status="PASS" starttime="20190817 19:24:52.820" endtime="20190817 19:24:52.820"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.825" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.820" endtime="20190817 19:24:52.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.826" endtime="20190817 19:24:52.826"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.826" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+674","national_id":""},"address":{"country":"NR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+674","first_name":"","last_name":"","company":"Umbrella Corp. NR"}}} </msg>
<msg timestamp="20190817 19:24:52.826" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.827" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+674', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.826" endtime="20190817 19:24:52.827"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.827" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.827" endtime="20190817 19:24:52.827"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.827" endtime="20190817 19:24:52.827"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.820" endtime="20190817 19:24:52.827"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.820" endtime="20190817 19:24:52.827"></status>
</kw>
<kw name="${item} = NC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.828" level="INFO">&amp;{parameter} = { locale=NC }</msg>
<status status="PASS" starttime="20190817 19:24:52.828" endtime="20190817 19:24:52.828"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.834" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.828" endtime="20190817 19:24:52.834"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.834" endtime="20190817 19:24:52.835"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.835" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+687","national_id":""},"address":{"country":"NC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+687","first_name":"","last_name":"","company":"Umbrella Corp. NC"}}} </msg>
<msg timestamp="20190817 19:24:52.835" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.835" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+687', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.835" endtime="20190817 19:24:52.835"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.836" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.836" endtime="20190817 19:24:52.836"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.835" endtime="20190817 19:24:52.836"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.828" endtime="20190817 19:24:52.836"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.827" endtime="20190817 19:24:52.836"></status>
</kw>
<kw name="${item} = NI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.837" level="INFO">&amp;{parameter} = { locale=NI }</msg>
<status status="PASS" starttime="20190817 19:24:52.837" endtime="20190817 19:24:52.837"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.843" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.837" endtime="20190817 19:24:52.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.843" endtime="20190817 19:24:52.843"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.844" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+505","national_id":""},"address":{"country":"NI","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+505","first_name":"","last_name":"","company":"Umbrella Corp. NI"}}} </msg>
<msg timestamp="20190817 19:24:52.844" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.844" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+505', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.843" endtime="20190817 19:24:52.844"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.845" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.844" endtime="20190817 19:24:52.845"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.844" endtime="20190817 19:24:52.845"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.836" endtime="20190817 19:24:52.845"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.836" endtime="20190817 19:24:52.845"></status>
</kw>
<kw name="${item} = NE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.845" level="INFO">&amp;{parameter} = { locale=NE }</msg>
<status status="PASS" starttime="20190817 19:24:52.845" endtime="20190817 19:24:52.845"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.851" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.846" endtime="20190817 19:24:52.851"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.851" endtime="20190817 19:24:52.851"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.852" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+227","national_id":""},"address":{"country":"NE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+227","first_name":"","last_name":"","company":"Umbrella Corp. NE"}}} </msg>
<msg timestamp="20190817 19:24:52.852" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.852" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+227', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.851" endtime="20190817 19:24:52.852"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.854" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.852" endtime="20190817 19:24:52.854"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.852" endtime="20190817 19:24:52.854"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.845" endtime="20190817 19:24:52.854"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.845" endtime="20190817 19:24:52.854"></status>
</kw>
<kw name="${item} = NU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.855" level="INFO">&amp;{parameter} = { locale=NU }</msg>
<status status="PASS" starttime="20190817 19:24:52.855" endtime="20190817 19:24:52.855"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.860" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.856" endtime="20190817 19:24:52.860"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.860" endtime="20190817 19:24:52.860"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.861" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+683","national_id":""},"address":{"country":"NU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+683","first_name":"","last_name":"","company":"Umbrella Corp. NU"}}} </msg>
<msg timestamp="20190817 19:24:52.861" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.861" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+683', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.860" endtime="20190817 19:24:52.861"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.861" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.861" endtime="20190817 19:24:52.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.861" endtime="20190817 19:24:52.861"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.855" endtime="20190817 19:24:52.862"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.854" endtime="20190817 19:24:52.862"></status>
</kw>
<kw name="${item} = NF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.862" level="INFO">&amp;{parameter} = { locale=NF }</msg>
<status status="PASS" starttime="20190817 19:24:52.862" endtime="20190817 19:24:52.862"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.866" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.863" endtime="20190817 19:24:52.866"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.867" endtime="20190817 19:24:52.867"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.867" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"NF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+672","national_id":""},"address":{"country":"NF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+672","first_name":"","last_name":"","company":"Umbrella Corp. NF"}}} </msg>
<msg timestamp="20190817 19:24:52.867" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.867" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'NF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+672', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.867" endtime="20190817 19:24:52.868"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.868" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.868" endtime="20190817 19:24:52.868"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.868" endtime="20190817 19:24:52.868"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.862" endtime="20190817 19:24:52.869"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.862" endtime="20190817 19:24:52.869"></status>
</kw>
<kw name="${item} = MP" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.870" level="INFO">&amp;{parameter} = { locale=MP }</msg>
<status status="PASS" starttime="20190817 19:24:52.869" endtime="20190817 19:24:52.870"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.875" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.870" endtime="20190817 19:24:52.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.875" endtime="20190817 19:24:52.875"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.876" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MP","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"MP","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. MP"}}} </msg>
<msg timestamp="20190817 19:24:52.876" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.876" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MP', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'M...</msg>
<status status="PASS" starttime="20190817 19:24:52.875" endtime="20190817 19:24:52.876"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.877" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.876" endtime="20190817 19:24:52.877"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.876" endtime="20190817 19:24:52.877"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.869" endtime="20190817 19:24:52.877"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.869" endtime="20190817 19:24:52.877"></status>
</kw>
<kw name="${item} = OM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.877" level="INFO">&amp;{parameter} = { locale=OM }</msg>
<status status="PASS" starttime="20190817 19:24:52.877" endtime="20190817 19:24:52.877"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.882" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.878" endtime="20190817 19:24:52.882"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.882" endtime="20190817 19:24:52.883"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.883" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"OM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+968","national_id":""},"address":{"country":"OM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+968","first_name":"","last_name":"","company":"Umbrella Corp. OM"}}} </msg>
<msg timestamp="20190817 19:24:52.883" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.883" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'OM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+968', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.883" endtime="20190817 19:24:52.883"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.884" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.883" endtime="20190817 19:24:52.884"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.883" endtime="20190817 19:24:52.884"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.877" endtime="20190817 19:24:52.884"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.877" endtime="20190817 19:24:52.884"></status>
</kw>
<kw name="${item} = PW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.886" level="INFO">&amp;{parameter} = { locale=PW }</msg>
<status status="PASS" starttime="20190817 19:24:52.885" endtime="20190817 19:24:52.886"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.891" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.886" endtime="20190817 19:24:52.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.892" endtime="20190817 19:24:52.892"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.892" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+680","national_id":""},"address":{"country":"PW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+680","first_name":"","last_name":"","company":"Umbrella Corp. PW"}}} </msg>
<msg timestamp="20190817 19:24:52.892" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.892" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+680', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.892" endtime="20190817 19:24:52.892"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.893" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.893" endtime="20190817 19:24:52.893"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.893" endtime="20190817 19:24:52.893"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.884" endtime="20190817 19:24:52.893"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.884" endtime="20190817 19:24:52.893"></status>
</kw>
<kw name="${item} = PS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.894" level="INFO">&amp;{parameter} = { locale=PS }</msg>
<status status="PASS" starttime="20190817 19:24:52.894" endtime="20190817 19:24:52.894"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.898" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.894" endtime="20190817 19:24:52.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.899" endtime="20190817 19:24:52.899"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.899" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+970","national_id":""},"address":{"country":"PS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+970","first_name":"","last_name":"","company":"Umbrella Corp. PS"}}} </msg>
<msg timestamp="20190817 19:24:52.899" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.900" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+970', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.899" endtime="20190817 19:24:52.900"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.900" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.900" endtime="20190817 19:24:52.900"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.900" endtime="20190817 19:24:52.900"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.893" endtime="20190817 19:24:52.900"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.893" endtime="20190817 19:24:52.901"></status>
</kw>
<kw name="${item} = PA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.901" level="INFO">&amp;{parameter} = { locale=PA }</msg>
<status status="PASS" starttime="20190817 19:24:52.901" endtime="20190817 19:24:52.901"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.910" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.901" endtime="20190817 19:24:52.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.910" endtime="20190817 19:24:52.911"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.911" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+507","national_id":""},"address":{"country":"PA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+507","first_name":"","last_name":"","company":"Umbrella Corp. PA"}}} </msg>
<msg timestamp="20190817 19:24:52.911" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.911" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+507', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.911" endtime="20190817 19:24:52.911"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.913" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.912" endtime="20190817 19:24:52.913"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.912" endtime="20190817 19:24:52.913"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.901" endtime="20190817 19:24:52.913"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.901" endtime="20190817 19:24:52.913"></status>
</kw>
<kw name="${item} = PG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.914" level="INFO">&amp;{parameter} = { locale=PG }</msg>
<status status="PASS" starttime="20190817 19:24:52.914" endtime="20190817 19:24:52.914"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.921" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.914" endtime="20190817 19:24:52.922"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.922" endtime="20190817 19:24:52.922"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.923" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+675","national_id":""},"address":{"country":"PG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+675","first_name":"","last_name":"","company":"Umbrella Corp. PG"}}} </msg>
<msg timestamp="20190817 19:24:52.923" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.923" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+675', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.922" endtime="20190817 19:24:52.923"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.924" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.923" endtime="20190817 19:24:52.924"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.923" endtime="20190817 19:24:52.924"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.913" endtime="20190817 19:24:52.924"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.913" endtime="20190817 19:24:52.924"></status>
</kw>
<kw name="${item} = PY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.925" level="INFO">&amp;{parameter} = { locale=PY }</msg>
<status status="PASS" starttime="20190817 19:24:52.925" endtime="20190817 19:24:52.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.932" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.925" endtime="20190817 19:24:52.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.932" endtime="20190817 19:24:52.932"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.933" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+595","national_id":""},"address":{"country":"PY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+595","first_name":"","last_name":"","company":"Umbrella Corp. PY"}}} </msg>
<msg timestamp="20190817 19:24:52.933" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.933" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+595', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.933" endtime="20190817 19:24:52.933"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.934" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.933" endtime="20190817 19:24:52.934"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.933" endtime="20190817 19:24:52.934"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.924" endtime="20190817 19:24:52.934"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.924" endtime="20190817 19:24:52.934"></status>
</kw>
<kw name="${item} = PE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.935" level="INFO">&amp;{parameter} = { locale=PE }</msg>
<status status="PASS" starttime="20190817 19:24:52.934" endtime="20190817 19:24:52.935"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.940" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.935" endtime="20190817 19:24:52.940"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.940" endtime="20190817 19:24:52.940"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.941" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+51","national_id":""},"address":{"country":"PE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+51","first_name":"","last_name":"","company":"Umbrella Corp. PE"}}} </msg>
<msg timestamp="20190817 19:24:52.941" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.941" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+51', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.940" endtime="20190817 19:24:52.941"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.941" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.941" endtime="20190817 19:24:52.941"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.941" endtime="20190817 19:24:52.941"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.934" endtime="20190817 19:24:52.942"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.934" endtime="20190817 19:24:52.942"></status>
</kw>
<kw name="${item} = PH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.942" level="INFO">&amp;{parameter} = { locale=PH }</msg>
<status status="PASS" starttime="20190817 19:24:52.942" endtime="20190817 19:24:52.942"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.946" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.942" endtime="20190817 19:24:52.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.946" endtime="20190817 19:24:52.947"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.947" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+63","national_id":""},"address":{"country":"PH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+63","first_name":"","last_name":"","company":"Umbrella Corp. PH"}}} </msg>
<msg timestamp="20190817 19:24:52.947" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.947" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+63', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:52.947" endtime="20190817 19:24:52.947"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.948" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.948" endtime="20190817 19:24:52.948"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.947" endtime="20190817 19:24:52.948"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.942" endtime="20190817 19:24:52.949"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.942" endtime="20190817 19:24:52.949"></status>
</kw>
<kw name="${item} = PN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.950" level="INFO">&amp;{parameter} = { locale=PN }</msg>
<status status="PASS" starttime="20190817 19:24:52.949" endtime="20190817 19:24:52.950"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.955" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.950" endtime="20190817 19:24:52.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.956" endtime="20190817 19:24:52.956"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.957" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:52.957" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.957" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:52.956" endtime="20190817 19:24:52.957"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.958" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.957" endtime="20190817 19:24:52.958"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.957" endtime="20190817 19:24:52.958"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.949" endtime="20190817 19:24:52.958"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.949" endtime="20190817 19:24:52.958"></status>
</kw>
<kw name="${item} = PR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.959" level="INFO">&amp;{parameter} = { locale=PR }</msg>
<status status="PASS" starttime="20190817 19:24:52.958" endtime="20190817 19:24:52.959"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.965" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.959" endtime="20190817 19:24:52.965"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.965" endtime="20190817 19:24:52.965"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.966" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"PR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. PR"}}} </msg>
<msg timestamp="20190817 19:24:52.966" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.966" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'P...</msg>
<status status="PASS" starttime="20190817 19:24:52.965" endtime="20190817 19:24:52.966"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.966" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.966" endtime="20190817 19:24:52.966"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.966" endtime="20190817 19:24:52.966"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.958" endtime="20190817 19:24:52.967"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.958" endtime="20190817 19:24:52.967"></status>
</kw>
<kw name="${item} = QA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.967" level="INFO">&amp;{parameter} = { locale=QA }</msg>
<status status="PASS" starttime="20190817 19:24:52.967" endtime="20190817 19:24:52.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.972" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.967" endtime="20190817 19:24:52.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.973" endtime="20190817 19:24:52.973"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.973" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"QA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+974","national_id":""},"address":{"country":"QA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+974","first_name":"","last_name":"","company":"Umbrella Corp. QA"}}} </msg>
<msg timestamp="20190817 19:24:52.974" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.974" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'QA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+974', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.973" endtime="20190817 19:24:52.974"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.975" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.974" endtime="20190817 19:24:52.975"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.974" endtime="20190817 19:24:52.975"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.967" endtime="20190817 19:24:52.975"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.967" endtime="20190817 19:24:52.975"></status>
</kw>
<kw name="${item} = RW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.976" level="INFO">&amp;{parameter} = { locale=RW }</msg>
<status status="PASS" starttime="20190817 19:24:52.976" endtime="20190817 19:24:52.976"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.980" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.976" endtime="20190817 19:24:52.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.981" endtime="20190817 19:24:52.981"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.981" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"RW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+250","national_id":""},"address":{"country":"RW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+250","first_name":"","last_name":"","company":"Umbrella Corp. RW"}}} </msg>
<msg timestamp="20190817 19:24:52.981" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.982" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'RW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+250', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.981" endtime="20190817 19:24:52.982"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.982" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.982" endtime="20190817 19:24:52.982"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.982" endtime="20190817 19:24:52.983"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.975" endtime="20190817 19:24:52.983"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.975" endtime="20190817 19:24:52.983"></status>
</kw>
<kw name="${item} = RE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.984" level="INFO">&amp;{parameter} = { locale=RE }</msg>
<status status="PASS" starttime="20190817 19:24:52.983" endtime="20190817 19:24:52.984"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.988" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.984" endtime="20190817 19:24:52.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.988" endtime="20190817 19:24:52.989"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.989" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"RE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+262","national_id":""},"address":{"country":"RE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+262","first_name":"","last_name":"","company":"Umbrella Corp. RE"}}} </msg>
<msg timestamp="20190817 19:24:52.989" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.989" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'RE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+262', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.989" endtime="20190817 19:24:52.989"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.990" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.990" endtime="20190817 19:24:52.990"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.989" endtime="20190817 19:24:52.990"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.983" endtime="20190817 19:24:52.990"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.983" endtime="20190817 19:24:52.990"></status>
</kw>
<kw name="${item} = BL" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.991" level="INFO">&amp;{parameter} = { locale=BL }</msg>
<status status="PASS" starttime="20190817 19:24:52.991" endtime="20190817 19:24:52.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:52.996" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:52.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.992" endtime="20190817 19:24:52.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.996" endtime="20190817 19:24:52.997"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:52.997" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"BL","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+590","national_id":""},"address":{"country":"BL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+590","first_name":"","last_name":"","company":"Umbrella Corp. BL"}}} </msg>
<msg timestamp="20190817 19:24:52.997" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:52.997" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'BL', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+590', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:52.997" endtime="20190817 19:24:52.997"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:52.998" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:52.998" endtime="20190817 19:24:52.998"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.997" endtime="20190817 19:24:52.998"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.990" endtime="20190817 19:24:52.998"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.990" endtime="20190817 19:24:52.998"></status>
</kw>
<kw name="${item} = SH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:52.999" level="INFO">&amp;{parameter} = { locale=SH }</msg>
<status status="PASS" starttime="20190817 19:24:52.999" endtime="20190817 19:24:52.999"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.004" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:52.999" endtime="20190817 19:24:53.004"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.004" endtime="20190817 19:24:53.004"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.004" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+290","national_id":""},"address":{"country":"SH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+290","first_name":"","last_name":"","company":"Umbrella Corp. SH"}}} </msg>
<msg timestamp="20190817 19:24:53.004" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.005" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+290', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.004" endtime="20190817 19:24:53.005"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.005" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.005" endtime="20190817 19:24:53.005"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.005" endtime="20190817 19:24:53.005"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.998" endtime="20190817 19:24:53.005"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:52.998" endtime="20190817 19:24:53.006"></status>
</kw>
<kw name="${item} = KN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.006" level="INFO">&amp;{parameter} = { locale=KN }</msg>
<status status="PASS" starttime="20190817 19:24:53.006" endtime="20190817 19:24:53.006"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.016" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.007" endtime="20190817 19:24:53.016"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.016" endtime="20190817 19:24:53.017"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.017" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"KN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"KN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. KN"}}} </msg>
<msg timestamp="20190817 19:24:53.017" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.017" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'KN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'K...</msg>
<status status="PASS" starttime="20190817 19:24:53.017" endtime="20190817 19:24:53.017"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.018" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.018" endtime="20190817 19:24:53.018"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.017" endtime="20190817 19:24:53.018"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.006" endtime="20190817 19:24:53.018"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.006" endtime="20190817 19:24:53.018"></status>
</kw>
<kw name="${item} = LC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.019" level="INFO">&amp;{parameter} = { locale=LC }</msg>
<status status="PASS" starttime="20190817 19:24:53.019" endtime="20190817 19:24:53.019"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.024" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.019" endtime="20190817 19:24:53.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.024" endtime="20190817 19:24:53.025"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.025" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"LC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. LC"}}} </msg>
<msg timestamp="20190817 19:24:53.025" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.025" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'L...</msg>
<status status="PASS" starttime="20190817 19:24:53.025" endtime="20190817 19:24:53.025"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.026" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.025" endtime="20190817 19:24:53.026"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.025" endtime="20190817 19:24:53.026"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.018" endtime="20190817 19:24:53.026"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.018" endtime="20190817 19:24:53.026"></status>
</kw>
<kw name="${item} = MF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.027" level="INFO">&amp;{parameter} = { locale=MF }</msg>
<status status="PASS" starttime="20190817 19:24:53.027" endtime="20190817 19:24:53.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.031" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.027" endtime="20190817 19:24:53.031"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.031" endtime="20190817 19:24:53.032"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.032" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"MF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+590","national_id":""},"address":{"country":"MF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+590","first_name":"","last_name":"","company":"Umbrella Corp. MF"}}} </msg>
<msg timestamp="20190817 19:24:53.032" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.032" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'MF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+590', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.032" endtime="20190817 19:24:53.032"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.033" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.033" endtime="20190817 19:24:53.033"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.033" endtime="20190817 19:24:53.033"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.026" endtime="20190817 19:24:53.033"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.026" endtime="20190817 19:24:53.033"></status>
</kw>
<kw name="${item} = PM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.034" level="INFO">&amp;{parameter} = { locale=PM }</msg>
<status status="PASS" starttime="20190817 19:24:53.034" endtime="20190817 19:24:53.034"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.038" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.034" endtime="20190817 19:24:53.038"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.038" endtime="20190817 19:24:53.039"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.039" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"PM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+508","national_id":""},"address":{"country":"PM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+508","first_name":"","last_name":"","company":"Umbrella Corp. PM"}}} </msg>
<msg timestamp="20190817 19:24:53.039" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.039" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'PM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+508', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.039" endtime="20190817 19:24:53.039"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.040" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.039" endtime="20190817 19:24:53.040"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.039" endtime="20190817 19:24:53.040"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.034" endtime="20190817 19:24:53.040"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.033" endtime="20190817 19:24:53.040"></status>
</kw>
<kw name="${item} = VC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.041" level="INFO">&amp;{parameter} = { locale=VC }</msg>
<status status="PASS" starttime="20190817 19:24:53.040" endtime="20190817 19:24:53.041"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.045" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.041" endtime="20190817 19:24:53.045"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.045" endtime="20190817 19:24:53.045"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.046" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"VC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. VC"}}} </msg>
<msg timestamp="20190817 19:24:53.046" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.046" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'V...</msg>
<status status="PASS" starttime="20190817 19:24:53.045" endtime="20190817 19:24:53.046"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.047" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.046" endtime="20190817 19:24:53.047"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.046" endtime="20190817 19:24:53.047"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.040" endtime="20190817 19:24:53.047"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.040" endtime="20190817 19:24:53.047"></status>
</kw>
<kw name="${item} = WS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.048" level="INFO">&amp;{parameter} = { locale=WS }</msg>
<status status="PASS" starttime="20190817 19:24:53.048" endtime="20190817 19:24:53.048"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.053" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.048" endtime="20190817 19:24:53.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.053" endtime="20190817 19:24:53.053"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.054" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"WS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+685","national_id":""},"address":{"country":"WS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+685","first_name":"","last_name":"","company":"Umbrella Corp. WS"}}} </msg>
<msg timestamp="20190817 19:24:53.054" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.054" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'WS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+685', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.053" endtime="20190817 19:24:53.054"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.055" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.054" endtime="20190817 19:24:53.055"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.054" endtime="20190817 19:24:53.055"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.047" endtime="20190817 19:24:53.055"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.047" endtime="20190817 19:24:53.055"></status>
</kw>
<kw name="${item} = SM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.056" level="INFO">&amp;{parameter} = { locale=SM }</msg>
<status status="PASS" starttime="20190817 19:24:53.056" endtime="20190817 19:24:53.056"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.060" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.056" endtime="20190817 19:24:53.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.061" endtime="20190817 19:24:53.062"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.062" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+378","national_id":""},"address":{"country":"SM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+378","first_name":"","last_name":"","company":"Umbrella Corp. SM"}}} </msg>
<msg timestamp="20190817 19:24:53.062" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.062" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+378', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.062" endtime="20190817 19:24:53.062"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.063" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.062" endtime="20190817 19:24:53.063"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.062" endtime="20190817 19:24:53.063"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.055" endtime="20190817 19:24:53.063"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.055" endtime="20190817 19:24:53.063"></status>
</kw>
<kw name="${item} = ST" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.064" level="INFO">&amp;{parameter} = { locale=ST }</msg>
<status status="PASS" starttime="20190817 19:24:53.064" endtime="20190817 19:24:53.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.068" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.064" endtime="20190817 19:24:53.068"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.068" endtime="20190817 19:24:53.069"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.069" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ST","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+239","national_id":""},"address":{"country":"ST","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+239","first_name":"","last_name":"","company":"Umbrella Corp. ST"}}} </msg>
<msg timestamp="20190817 19:24:53.069" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.069" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ST', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+239', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.069" endtime="20190817 19:24:53.069"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.070" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.070" endtime="20190817 19:24:53.070"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.069" endtime="20190817 19:24:53.070"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.063" endtime="20190817 19:24:53.070"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.063" endtime="20190817 19:24:53.070"></status>
</kw>
<kw name="${item} = SN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.071" level="INFO">&amp;{parameter} = { locale=SN }</msg>
<status status="PASS" starttime="20190817 19:24:53.071" endtime="20190817 19:24:53.071"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.076" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.071" endtime="20190817 19:24:53.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.076" endtime="20190817 19:24:53.077"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.077" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+221","national_id":""},"address":{"country":"SN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+221","first_name":"","last_name":"","company":"Umbrella Corp. SN"}}} </msg>
<msg timestamp="20190817 19:24:53.077" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.077" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+221', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.077" endtime="20190817 19:24:53.077"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.078" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.078" endtime="20190817 19:24:53.078"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.078" endtime="20190817 19:24:53.078"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.070" endtime="20190817 19:24:53.078"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.070" endtime="20190817 19:24:53.078"></status>
</kw>
<kw name="${item} = RS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.079" level="INFO">&amp;{parameter} = { locale=RS }</msg>
<status status="PASS" starttime="20190817 19:24:53.079" endtime="20190817 19:24:53.079"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.085" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.079" endtime="20190817 19:24:53.085"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.085" endtime="20190817 19:24:53.085"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.086" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"RS","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+381","national_id":""},"address":{"country":"RS","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+381","first_name":"","last_name":"","company":"Umbrella Corp. RS"}}} </msg>
<msg timestamp="20190817 19:24:53.086" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.086" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'RS', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+381', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.085" endtime="20190817 19:24:53.086"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.086" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.086" endtime="20190817 19:24:53.086"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.086" endtime="20190817 19:24:53.086"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.078" endtime="20190817 19:24:53.086"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.078" endtime="20190817 19:24:53.087"></status>
</kw>
<kw name="${item} = SC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.087" level="INFO">&amp;{parameter} = { locale=SC }</msg>
<status status="PASS" starttime="20190817 19:24:53.087" endtime="20190817 19:24:53.087"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.091" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.087" endtime="20190817 19:24:53.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.091" endtime="20190817 19:24:53.092"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.092" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+248","national_id":""},"address":{"country":"SC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+248","first_name":"","last_name":"","company":"Umbrella Corp. SC"}}} </msg>
<msg timestamp="20190817 19:24:53.092" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.092" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+248', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.092" endtime="20190817 19:24:53.092"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.094" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.093" endtime="20190817 19:24:53.094"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.092" endtime="20190817 19:24:53.094"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.087" endtime="20190817 19:24:53.094"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.087" endtime="20190817 19:24:53.094"></status>
</kw>
<kw name="${item} = SL" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.095" level="INFO">&amp;{parameter} = { locale=SL }</msg>
<status status="PASS" starttime="20190817 19:24:53.094" endtime="20190817 19:24:53.095"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.099" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.095" endtime="20190817 19:24:53.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.100" endtime="20190817 19:24:53.100"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.100" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SL","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+232231292264","national_id":""},"address":{"country":"SL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+232231292264","first_name":"","last_name":"","company":"Umbrella Corp. SL"}}} </msg>
<msg timestamp="20190817 19:24:53.100" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.101" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SL', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+232231292264', 'national_id': ''}, 'address': {'c...</msg>
<status status="PASS" starttime="20190817 19:24:53.100" endtime="20190817 19:24:53.101"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.102" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.101" endtime="20190817 19:24:53.102"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.101" endtime="20190817 19:24:53.102"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.094" endtime="20190817 19:24:53.102"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.094" endtime="20190817 19:24:53.102"></status>
</kw>
<kw name="${item} = SG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.103" level="INFO">&amp;{parameter} = { locale=SG }</msg>
<status status="PASS" starttime="20190817 19:24:53.102" endtime="20190817 19:24:53.103"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.109" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.103" endtime="20190817 19:24:53.109"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.109" endtime="20190817 19:24:53.109"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.109" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+65","national_id":""},"address":{"country":"SG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+65","first_name":"","last_name":"","company":"Umbrella Corp. SG"}}} </msg>
<msg timestamp="20190817 19:24:53.109" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.110" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+65', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:53.109" endtime="20190817 19:24:53.110"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.110" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.110" endtime="20190817 19:24:53.110"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.110" endtime="20190817 19:24:53.110"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.102" endtime="20190817 19:24:53.110"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.102" endtime="20190817 19:24:53.110"></status>
</kw>
<kw name="${item} = SX" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.111" level="INFO">&amp;{parameter} = { locale=SX }</msg>
<status status="PASS" starttime="20190817 19:24:53.111" endtime="20190817 19:24:53.111"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.116" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.111" endtime="20190817 19:24:53.116"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.117" endtime="20190817 19:24:53.117"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.117" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.118" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.118" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.117" endtime="20190817 19:24:53.118"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.118" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.118" endtime="20190817 19:24:53.118"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.118" endtime="20190817 19:24:53.118"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.111" endtime="20190817 19:24:53.119"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.110" endtime="20190817 19:24:53.119"></status>
</kw>
<kw name="${item} = SB" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.120" level="INFO">&amp;{parameter} = { locale=SB }</msg>
<status status="PASS" starttime="20190817 19:24:53.119" endtime="20190817 19:24:53.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.125" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.120" endtime="20190817 19:24:53.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.125" endtime="20190817 19:24:53.126"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.126" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SB","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+677","national_id":""},"address":{"country":"SB","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+677","first_name":"","last_name":"","company":"Umbrella Corp. SB"}}} </msg>
<msg timestamp="20190817 19:24:53.126" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.126" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SB', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+677', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.126" endtime="20190817 19:24:53.126"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.127" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.126" endtime="20190817 19:24:53.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.126" endtime="20190817 19:24:53.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.119" endtime="20190817 19:24:53.127"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.119" endtime="20190817 19:24:53.127"></status>
</kw>
<kw name="${item} = SO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.128" level="INFO">&amp;{parameter} = { locale=SO }</msg>
<status status="PASS" starttime="20190817 19:24:53.128" endtime="20190817 19:24:53.128"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.133" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.128" endtime="20190817 19:24:53.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.133" endtime="20190817 19:24:53.134"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.134" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+252","national_id":""},"address":{"country":"SO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+252","first_name":"","last_name":"","company":"Umbrella Corp. SO"}}} </msg>
<msg timestamp="20190817 19:24:53.134" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.134" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+252', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.134" endtime="20190817 19:24:53.134"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.135" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.134" endtime="20190817 19:24:53.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.134" endtime="20190817 19:24:53.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.127" endtime="20190817 19:24:53.135"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.127" endtime="20190817 19:24:53.135"></status>
</kw>
<kw name="${item} = ZA" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.136" level="INFO">&amp;{parameter} = { locale=ZA }</msg>
<status status="PASS" starttime="20190817 19:24:53.136" endtime="20190817 19:24:53.136"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.143" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.136" endtime="20190817 19:24:53.143"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.143" endtime="20190817 19:24:53.144"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.144" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ZA","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+27","national_id":""},"address":{"country":"ZA","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+27","first_name":"","last_name":"","company":"Umbrella Corp. ZA"}}} </msg>
<msg timestamp="20190817 19:24:53.144" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.144" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ZA', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+27', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:53.144" endtime="20190817 19:24:53.144"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.145" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.145" endtime="20190817 19:24:53.145"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.144" endtime="20190817 19:24:53.145"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.135" endtime="20190817 19:24:53.145"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.135" endtime="20190817 19:24:53.145"></status>
</kw>
<kw name="${item} = GS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.146" level="INFO">&amp;{parameter} = { locale=GS }</msg>
<status status="PASS" starttime="20190817 19:24:53.146" endtime="20190817 19:24:53.146"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.152" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.146" endtime="20190817 19:24:53.152"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.152" endtime="20190817 19:24:53.153"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.154" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.154" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.154" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.153" endtime="20190817 19:24:53.154"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.155" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.154" endtime="20190817 19:24:53.155"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.154" endtime="20190817 19:24:53.155"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.145" endtime="20190817 19:24:53.155"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.145" endtime="20190817 19:24:53.155"></status>
</kw>
<kw name="${item} = SS" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.156" level="INFO">&amp;{parameter} = { locale=SS }</msg>
<status status="PASS" starttime="20190817 19:24:53.156" endtime="20190817 19:24:53.156"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.162" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.156" endtime="20190817 19:24:53.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.162" endtime="20190817 19:24:53.163"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.163" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.163" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.163" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.163" endtime="20190817 19:24:53.163"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.165" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.164" endtime="20190817 19:24:53.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.164" endtime="20190817 19:24:53.165"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.156" endtime="20190817 19:24:53.166"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.155" endtime="20190817 19:24:53.166"></status>
</kw>
<kw name="${item} = LK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.167" level="INFO">&amp;{parameter} = { locale=LK }</msg>
<status status="PASS" starttime="20190817 19:24:53.167" endtime="20190817 19:24:53.167"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.175" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.168" endtime="20190817 19:24:53.175"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.175" endtime="20190817 19:24:53.175"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.176" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"LK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+94","national_id":""},"address":{"country":"LK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+94","first_name":"","last_name":"","company":"Umbrella Corp. LK"}}} </msg>
<msg timestamp="20190817 19:24:53.176" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.176" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'LK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+94', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:53.175" endtime="20190817 19:24:53.176"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.176" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.176" endtime="20190817 19:24:53.176"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.176" endtime="20190817 19:24:53.176"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.166" endtime="20190817 19:24:53.177"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.166" endtime="20190817 19:24:53.177"></status>
</kw>
<kw name="${item} = SD" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.177" level="INFO">&amp;{parameter} = { locale=SD }</msg>
<status status="PASS" starttime="20190817 19:24:53.177" endtime="20190817 19:24:53.177"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.183" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.177" endtime="20190817 19:24:53.183"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.183" endtime="20190817 19:24:53.184"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.184" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SD","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+249","national_id":""},"address":{"country":"SD","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+249","first_name":"","last_name":"","company":"Umbrella Corp. SD"}}} </msg>
<msg timestamp="20190817 19:24:53.184" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.184" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SD', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+249', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.184" endtime="20190817 19:24:53.185"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.185" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.185" endtime="20190817 19:24:53.185"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.185" endtime="20190817 19:24:53.186"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.177" endtime="20190817 19:24:53.186"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.177" endtime="20190817 19:24:53.186"></status>
</kw>
<kw name="${item} = SR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.187" level="INFO">&amp;{parameter} = { locale=SR }</msg>
<status status="PASS" starttime="20190817 19:24:53.186" endtime="20190817 19:24:53.187"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.191" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.187" endtime="20190817 19:24:53.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.192" endtime="20190817 19:24:53.193"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.193" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SR","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+597","national_id":""},"address":{"country":"SR","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+597","first_name":"","last_name":"","company":"Umbrella Corp. SR"}}} </msg>
<msg timestamp="20190817 19:24:53.193" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.193" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SR', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+597', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.193" endtime="20190817 19:24:53.193"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.194" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.194" endtime="20190817 19:24:53.194"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.193" endtime="20190817 19:24:53.194"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.186" endtime="20190817 19:24:53.194"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.186" endtime="20190817 19:24:53.194"></status>
</kw>
<kw name="${item} = SJ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.195" level="INFO">&amp;{parameter} = { locale=SJ }</msg>
<status status="PASS" starttime="20190817 19:24:53.195" endtime="20190817 19:24:53.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.200" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.195" endtime="20190817 19:24:53.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.200" endtime="20190817 19:24:53.204"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.204" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.205" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.205" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.204" endtime="20190817 19:24:53.205"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.205" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.205" endtime="20190817 19:24:53.205"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.205" endtime="20190817 19:24:53.205"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.195" endtime="20190817 19:24:53.206"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.195" endtime="20190817 19:24:53.206"></status>
</kw>
<kw name="${item} = SZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.206" level="INFO">&amp;{parameter} = { locale=SZ }</msg>
<status status="PASS" starttime="20190817 19:24:53.206" endtime="20190817 19:24:53.206"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.214" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.207" endtime="20190817 19:24:53.215"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.215" endtime="20190817 19:24:53.215"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.216" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+268","national_id":""},"address":{"country":"SZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+268","first_name":"","last_name":"","company":"Umbrella Corp. SZ"}}} </msg>
<msg timestamp="20190817 19:24:53.216" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.216" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+268', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.215" endtime="20190817 19:24:53.216"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.216" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.216" endtime="20190817 19:24:53.217"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.216" endtime="20190817 19:24:53.217"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.206" endtime="20190817 19:24:53.217"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.206" endtime="20190817 19:24:53.217"></status>
</kw>
<kw name="${item} = SY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.218" level="INFO">&amp;{parameter} = { locale=SY }</msg>
<status status="PASS" starttime="20190817 19:24:53.217" endtime="20190817 19:24:53.218"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.224" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.218" endtime="20190817 19:24:53.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.225" endtime="20190817 19:24:53.225"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.225" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"SY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+963","national_id":""},"address":{"country":"SY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+963","first_name":"","last_name":"","company":"Umbrella Corp. SY"}}} </msg>
<msg timestamp="20190817 19:24:53.225" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.225" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'SY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+963', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.225" endtime="20190817 19:24:53.225"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.226" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.226" endtime="20190817 19:24:53.226"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.226" endtime="20190817 19:24:53.226"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.217" endtime="20190817 19:24:53.226"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.217" endtime="20190817 19:24:53.226"></status>
</kw>
<kw name="${item} = TW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.227" level="INFO">&amp;{parameter} = { locale=TW }</msg>
<status status="PASS" starttime="20190817 19:24:53.227" endtime="20190817 19:24:53.227"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.233" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.227" endtime="20190817 19:24:53.233"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.233" endtime="20190817 19:24:53.234"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.234" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+886","national_id":""},"address":{"country":"TW","address_line1":"5534 凱瑞 路","address_line2":"","city":"金門 曾縣","post_code":"288302","region_name":"福建省","landline":"+886","first_name":"","last_name":"","company":"Umbrella Corp. TW"}}} </msg>
<msg timestamp="20190817 19:24:53.234" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.234" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+886', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.234" endtime="20190817 19:24:53.234"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.235" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.235" endtime="20190817 19:24:53.235"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.234" endtime="20190817 19:24:53.235"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.226" endtime="20190817 19:24:53.235"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.226" endtime="20190817 19:24:53.235"></status>
</kw>
<kw name="${item} = TJ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.236" level="INFO">&amp;{parameter} = { locale=TJ }</msg>
<status status="PASS" starttime="20190817 19:24:53.236" endtime="20190817 19:24:53.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.240" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.236" endtime="20190817 19:24:53.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.240" endtime="20190817 19:24:53.240"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.241" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TJ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+992","national_id":""},"address":{"country":"TJ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+992","first_name":"","last_name":"","company":"Umbrella Corp. TJ"}}} </msg>
<msg timestamp="20190817 19:24:53.241" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.241" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TJ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+992', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.241" endtime="20190817 19:24:53.241"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.242" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.241" endtime="20190817 19:24:53.242"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.241" endtime="20190817 19:24:53.242"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.235" endtime="20190817 19:24:53.242"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.235" endtime="20190817 19:24:53.242"></status>
</kw>
<kw name="${item} = TZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.243" level="INFO">&amp;{parameter} = { locale=TZ }</msg>
<status status="PASS" starttime="20190817 19:24:53.243" endtime="20190817 19:24:53.243"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.247" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.243" endtime="20190817 19:24:53.248"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.248" endtime="20190817 19:24:53.248"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.248" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+255","national_id":""},"address":{"country":"TZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+255","first_name":"","last_name":"","company":"Umbrella Corp. TZ"}}} </msg>
<msg timestamp="20190817 19:24:53.248" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.249" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+255', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.248" endtime="20190817 19:24:53.249"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.249" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.249" endtime="20190817 19:24:53.249"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.249" endtime="20190817 19:24:53.249"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.242" endtime="20190817 19:24:53.249"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.242" endtime="20190817 19:24:53.250"></status>
</kw>
<kw name="${item} = TH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.251" level="INFO">&amp;{parameter} = { locale=TH }</msg>
<status status="PASS" starttime="20190817 19:24:53.250" endtime="20190817 19:24:53.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.256" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.251" endtime="20190817 19:24:53.256"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.256" endtime="20190817 19:24:53.257"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.257" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TH","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+66","national_id":""},"address":{"country":"TH","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+66","first_name":"","last_name":"","company":"Umbrella Corp. TH"}}} </msg>
<msg timestamp="20190817 19:24:53.257" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.258" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TH', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+66', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:53.257" endtime="20190817 19:24:53.258"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.258" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.258" endtime="20190817 19:24:53.259"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.258" endtime="20190817 19:24:53.259"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.250" endtime="20190817 19:24:53.259"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.250" endtime="20190817 19:24:53.259"></status>
</kw>
<kw name="${item} = TL" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.260" level="INFO">&amp;{parameter} = { locale=TL }</msg>
<status status="PASS" starttime="20190817 19:24:53.260" endtime="20190817 19:24:53.260"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.265" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.260" endtime="20190817 19:24:53.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.266" endtime="20190817 19:24:53.266"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.266" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TL","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+670","national_id":""},"address":{"country":"TL","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+670","first_name":"","last_name":"","company":"Umbrella Corp. TL"}}} </msg>
<msg timestamp="20190817 19:24:53.266" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.266" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TL', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+670', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.266" endtime="20190817 19:24:53.266"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.267" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.267" endtime="20190817 19:24:53.267"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.266" endtime="20190817 19:24:53.267"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.259" endtime="20190817 19:24:53.267"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.259" endtime="20190817 19:24:53.267"></status>
</kw>
<kw name="${item} = TG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.268" level="INFO">&amp;{parameter} = { locale=TG }</msg>
<status status="PASS" starttime="20190817 19:24:53.268" endtime="20190817 19:24:53.268"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.276" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.268" endtime="20190817 19:24:53.276"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.276" endtime="20190817 19:24:53.277"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.277" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+228","national_id":""},"address":{"country":"TG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+228","first_name":"","last_name":"","company":"Umbrella Corp. TG"}}} </msg>
<msg timestamp="20190817 19:24:53.277" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.277" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+228', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.277" endtime="20190817 19:24:53.277"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.278" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.277" endtime="20190817 19:24:53.278"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.277" endtime="20190817 19:24:53.278"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.267" endtime="20190817 19:24:53.278"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.267" endtime="20190817 19:24:53.278"></status>
</kw>
<kw name="${item} = TK" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.279" level="INFO">&amp;{parameter} = { locale=TK }</msg>
<status status="PASS" starttime="20190817 19:24:53.279" endtime="20190817 19:24:53.279"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.283" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.279" endtime="20190817 19:24:53.284"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.284" endtime="20190817 19:24:53.284"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.284" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TK","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+690","national_id":""},"address":{"country":"TK","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+690","first_name":"","last_name":"","company":"Umbrella Corp. TK"}}} </msg>
<msg timestamp="20190817 19:24:53.284" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.284" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TK', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+690', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.284" endtime="20190817 19:24:53.285"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.285" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.285" endtime="20190817 19:24:53.285"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.285" endtime="20190817 19:24:53.285"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.278" endtime="20190817 19:24:53.285"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.278" endtime="20190817 19:24:53.285"></status>
</kw>
<kw name="${item} = TO" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.286" level="INFO">&amp;{parameter} = { locale=TO }</msg>
<status status="PASS" starttime="20190817 19:24:53.286" endtime="20190817 19:24:53.286"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.292" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.286" endtime="20190817 19:24:53.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.292" endtime="20190817 19:24:53.293"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.293" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TO","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+676","national_id":""},"address":{"country":"TO","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+676","first_name":"","last_name":"","company":"Umbrella Corp. TO"}}} </msg>
<msg timestamp="20190817 19:24:53.293" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.293" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TO', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+676', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.293" endtime="20190817 19:24:53.293"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.294" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.294" endtime="20190817 19:24:53.294"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.293" endtime="20190817 19:24:53.294"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.286" endtime="20190817 19:24:53.294"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.285" endtime="20190817 19:24:53.294"></status>
</kw>
<kw name="${item} = TN" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.295" level="INFO">&amp;{parameter} = { locale=TN }</msg>
<status status="PASS" starttime="20190817 19:24:53.295" endtime="20190817 19:24:53.295"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.300" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.295" endtime="20190817 19:24:53.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.300" endtime="20190817 19:24:53.300"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.301" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TN","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+216","national_id":""},"address":{"country":"TN","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+216","first_name":"","last_name":"","company":"Umbrella Corp. TN"}}} </msg>
<msg timestamp="20190817 19:24:53.301" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.301" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TN', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+216', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.301" endtime="20190817 19:24:53.301"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.302" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.301" endtime="20190817 19:24:53.302"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.301" endtime="20190817 19:24:53.302"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.294" endtime="20190817 19:24:53.302"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.294" endtime="20190817 19:24:53.302"></status>
</kw>
<kw name="${item} = TR" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.303" level="INFO">&amp;{parameter} = { locale=TR }</msg>
<status status="PASS" starttime="20190817 19:24:53.303" endtime="20190817 19:24:53.303"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.308" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.303" endtime="20190817 19:24:53.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.309" endtime="20190817 19:24:53.309"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.309" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TR","personal_profile":{"first_name":"Recai","last_name":"Yüksel","date_of_birth":"1994-08-17T00:00:00.000Z","mobile_phone":"+90509758782","national_id":""},"address":{"country":"TR","address_line1":"8096 Bayankağan Centers","address_line2":"","city":"New Kıvılcımfurt","post_code":"58445","region_name":"Florida","landline":"+90509758782","first_name":"Recai","last_name":"Yüksel","company":"Umbrella Corp. TR"}}} </msg>
<msg timestamp="20190817 19:24:53.309" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.310" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TR', 'personal_profile': {'first_name': 'Recai', 'last_name': 'Yüksel', 'date_of_birth': '1994-08-17T00:00:00.000Z', 'mobile_phone': '+90509758782', ...</msg>
<status status="PASS" starttime="20190817 19:24:53.309" endtime="20190817 19:24:53.310"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.311" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.310" endtime="20190817 19:24:53.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.310" endtime="20190817 19:24:53.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.302" endtime="20190817 19:24:53.311"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.302" endtime="20190817 19:24:53.311"></status>
</kw>
<kw name="${item} = TM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.312" level="INFO">&amp;{parameter} = { locale=TM }</msg>
<status status="PASS" starttime="20190817 19:24:53.311" endtime="20190817 19:24:53.312"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.316" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.312" endtime="20190817 19:24:53.316"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.316" endtime="20190817 19:24:53.317"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.317" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+993","national_id":""},"address":{"country":"TM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+993","first_name":"","last_name":"","company":"Umbrella Corp. TM"}}} </msg>
<msg timestamp="20190817 19:24:53.318" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.318" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+993', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.317" endtime="20190817 19:24:53.318"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.319" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.318" endtime="20190817 19:24:53.319"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.318" endtime="20190817 19:24:53.319"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.311" endtime="20190817 19:24:53.319"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.311" endtime="20190817 19:24:53.319"></status>
</kw>
<kw name="${item} = TC" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.321" level="INFO">&amp;{parameter} = { locale=TC }</msg>
<status status="PASS" starttime="20190817 19:24:53.321" endtime="20190817 19:24:53.321"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.329" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.321" endtime="20190817 19:24:53.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.329" endtime="20190817 19:24:53.330"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.331" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TC","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"TC","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. TC"}}} </msg>
<msg timestamp="20190817 19:24:53.331" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.331" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TC', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'T...</msg>
<status status="PASS" starttime="20190817 19:24:53.330" endtime="20190817 19:24:53.331"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.332" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.331" endtime="20190817 19:24:53.332"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.331" endtime="20190817 19:24:53.332"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.320" endtime="20190817 19:24:53.332"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.320" endtime="20190817 19:24:53.332"></status>
</kw>
<kw name="${item} = TV" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.334" level="INFO">&amp;{parameter} = { locale=TV }</msg>
<status status="PASS" starttime="20190817 19:24:53.334" endtime="20190817 19:24:53.334"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.339" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.334" endtime="20190817 19:24:53.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.339" endtime="20190817 19:24:53.340"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.340" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"TV","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+688","national_id":""},"address":{"country":"TV","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+688","first_name":"","last_name":"","company":"Umbrella Corp. TV"}}} </msg>
<msg timestamp="20190817 19:24:53.340" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.341" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'TV', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+688', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.340" endtime="20190817 19:24:53.341"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.341" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.341" endtime="20190817 19:24:53.341"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.341" endtime="20190817 19:24:53.341"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.333" endtime="20190817 19:24:53.342"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.333" endtime="20190817 19:24:53.342"></status>
</kw>
<kw name="${item} = UG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.342" level="INFO">&amp;{parameter} = { locale=UG }</msg>
<status status="PASS" starttime="20190817 19:24:53.342" endtime="20190817 19:24:53.342"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.346" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.342" endtime="20190817 19:24:53.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.346" endtime="20190817 19:24:53.347"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.347" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"UG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+256","national_id":""},"address":{"country":"UG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+256","first_name":"","last_name":"","company":"Umbrella Corp. UG"}}} </msg>
<msg timestamp="20190817 19:24:53.347" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.347" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'UG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+256', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.347" endtime="20190817 19:24:53.348"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.349" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.348" endtime="20190817 19:24:53.349"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.348" endtime="20190817 19:24:53.349"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.342" endtime="20190817 19:24:53.349"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.342" endtime="20190817 19:24:53.349"></status>
</kw>
<kw name="${item} = AE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.350" level="INFO">&amp;{parameter} = { locale=AE }</msg>
<status status="PASS" starttime="20190817 19:24:53.350" endtime="20190817 19:24:53.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.357" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.351" endtime="20190817 19:24:53.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.357" endtime="20190817 19:24:53.357"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.358" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"AE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+971","national_id":""},"address":{"country":"AE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+971","first_name":"","last_name":"","company":"Umbrella Corp. AE"}}} </msg>
<msg timestamp="20190817 19:24:53.358" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.358" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'AE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+971', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.357" endtime="20190817 19:24:53.358"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.358" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.358" endtime="20190817 19:24:53.359"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.358" endtime="20190817 19:24:53.359"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.349" endtime="20190817 19:24:53.359"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.349" endtime="20190817 19:24:53.359"></status>
</kw>
<kw name="${item} = UM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.359" level="INFO">&amp;{parameter} = { locale=UM }</msg>
<status status="PASS" starttime="20190817 19:24:53.359" endtime="20190817 19:24:53.359"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.364" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.360" endtime="20190817 19:24:53.364"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.364" endtime="20190817 19:24:53.365"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.365" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.365" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.366" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.365" endtime="20190817 19:24:53.366"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.367" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.366" endtime="20190817 19:24:53.367"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.366" endtime="20190817 19:24:53.367"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.359" endtime="20190817 19:24:53.368"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.359" endtime="20190817 19:24:53.368"></status>
</kw>
<kw name="${item} = UY" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.369" level="INFO">&amp;{parameter} = { locale=UY }</msg>
<status status="PASS" starttime="20190817 19:24:53.369" endtime="20190817 19:24:53.369"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.375" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.370" endtime="20190817 19:24:53.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.375" endtime="20190817 19:24:53.376"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.376" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"UY","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+598","national_id":""},"address":{"country":"UY","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+598","first_name":"","last_name":"","company":"Umbrella Corp. UY"}}} </msg>
<msg timestamp="20190817 19:24:53.376" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.376" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'UY', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+598', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.376" endtime="20190817 19:24:53.376"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.378" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.377" endtime="20190817 19:24:53.378"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.377" endtime="20190817 19:24:53.378"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.368" endtime="20190817 19:24:53.378"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.368" endtime="20190817 19:24:53.378"></status>
</kw>
<kw name="${item} = UZ" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.379" level="INFO">&amp;{parameter} = { locale=UZ }</msg>
<status status="PASS" starttime="20190817 19:24:53.379" endtime="20190817 19:24:53.379"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.386" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.379" endtime="20190817 19:24:53.386"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.386" endtime="20190817 19:24:53.387"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.387" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"UZ","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+998","national_id":""},"address":{"country":"UZ","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+998","first_name":"","last_name":"","company":"Umbrella Corp. UZ"}}} </msg>
<msg timestamp="20190817 19:24:53.387" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.387" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'UZ', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+998', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.387" endtime="20190817 19:24:53.387"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.389" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.388" endtime="20190817 19:24:53.389"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.388" endtime="20190817 19:24:53.389"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.378" endtime="20190817 19:24:53.389"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.378" endtime="20190817 19:24:53.389"></status>
</kw>
<kw name="${item} = VU" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.391" level="INFO">&amp;{parameter} = { locale=VU }</msg>
<status status="PASS" starttime="20190817 19:24:53.390" endtime="20190817 19:24:53.391"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.397" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.391" endtime="20190817 19:24:53.397"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.397" endtime="20190817 19:24:53.397"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.398" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VU","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+678","national_id":""},"address":{"country":"VU","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+678","first_name":"","last_name":"","company":"Umbrella Corp. VU"}}} </msg>
<msg timestamp="20190817 19:24:53.398" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.398" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VU', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+678', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.397" endtime="20190817 19:24:53.398"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.398" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.398" endtime="20190817 19:24:53.398"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.398" endtime="20190817 19:24:53.398"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.389" endtime="20190817 19:24:53.399"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.389" endtime="20190817 19:24:53.399"></status>
</kw>
<kw name="${item} = VE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.400" level="INFO">&amp;{parameter} = { locale=VE }</msg>
<status status="PASS" starttime="20190817 19:24:53.399" endtime="20190817 19:24:53.400"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.404" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.400" endtime="20190817 19:24:53.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.405" endtime="20190817 19:24:53.405"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.406" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+58","national_id":""},"address":{"country":"VE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+58","first_name":"","last_name":"","company":"Umbrella Corp. VE"}}} </msg>
<msg timestamp="20190817 19:24:53.406" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.406" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+58', 'national_id': ''}, 'address': {'country': '...</msg>
<status status="PASS" starttime="20190817 19:24:53.406" endtime="20190817 19:24:53.406"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.407" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.407" endtime="20190817 19:24:53.407"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.406" endtime="20190817 19:24:53.408"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.399" endtime="20190817 19:24:53.408"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.399" endtime="20190817 19:24:53.408"></status>
</kw>
<kw name="${item} = VG" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.409" level="INFO">&amp;{parameter} = { locale=VG }</msg>
<status status="PASS" starttime="20190817 19:24:53.408" endtime="20190817 19:24:53.409"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.412" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.409" endtime="20190817 19:24:53.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.413" endtime="20190817 19:24:53.413"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.413" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VG","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"VG","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. VG"}}} </msg>
<msg timestamp="20190817 19:24:53.413" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.413" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VG', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'V...</msg>
<status status="PASS" starttime="20190817 19:24:53.413" endtime="20190817 19:24:53.413"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.414" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.414" endtime="20190817 19:24:53.414"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.414" endtime="20190817 19:24:53.414"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.408" endtime="20190817 19:24:53.414"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.408" endtime="20190817 19:24:53.414"></status>
</kw>
<kw name="${item} = VI" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.415" level="INFO">&amp;{parameter} = { locale=VI }</msg>
<status status="PASS" starttime="20190817 19:24:53.415" endtime="20190817 19:24:53.415"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.426" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.415" endtime="20190817 19:24:53.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.427" endtime="20190817 19:24:53.428"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.428" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"VI","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+1","national_id":""},"address":{"country":"VI","address_line1":"42284 Phùng Island","address_line2":"","city":"Loanfurt","post_code":"19948","region_name":"North Carolina","landline":"+1","first_name":"","last_name":"","company":"Umbrella Corp. VI"}}} </msg>
<msg timestamp="20190817 19:24:53.428" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.429" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'VI', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+1', 'national_id': ''}, 'address': {'country': 'V...</msg>
<status status="PASS" starttime="20190817 19:24:53.428" endtime="20190817 19:24:53.429"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.430" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.429" endtime="20190817 19:24:53.430"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.429" endtime="20190817 19:24:53.431"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.415" endtime="20190817 19:24:53.431"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.414" endtime="20190817 19:24:53.431"></status>
</kw>
<kw name="${item} = WF" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.432" level="INFO">&amp;{parameter} = { locale=WF }</msg>
<status status="PASS" starttime="20190817 19:24:53.432" endtime="20190817 19:24:53.432"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.440" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.433" endtime="20190817 19:24:53.440"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.441" endtime="20190817 19:24:53.441"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.442" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"WF","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+681","national_id":""},"address":{"country":"WF","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+681","first_name":"","last_name":"","company":"Umbrella Corp. WF"}}} </msg>
<msg timestamp="20190817 19:24:53.442" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.442" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'WF', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+681', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.441" endtime="20190817 19:24:53.442"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.443" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.443" endtime="20190817 19:24:53.443"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.442" endtime="20190817 19:24:53.444"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.431" endtime="20190817 19:24:53.444"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.431" endtime="20190817 19:24:53.444"></status>
</kw>
<kw name="${item} = EH" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.446" level="INFO">&amp;{parameter} = { locale=EH }</msg>
<status status="PASS" starttime="20190817 19:24:53.445" endtime="20190817 19:24:53.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.460" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.447" endtime="20190817 19:24:53.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.461" endtime="20190817 19:24:53.462"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.463" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.463" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.463" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.462" endtime="20190817 19:24:53.463"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.465" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.464" endtime="20190817 19:24:53.465"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.463" endtime="20190817 19:24:53.465"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.444" endtime="20190817 19:24:53.465"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.444" endtime="20190817 19:24:53.465"></status>
</kw>
<kw name="${item} = YE" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.466" level="INFO">&amp;{parameter} = { locale=YE }</msg>
<status status="PASS" starttime="20190817 19:24:53.466" endtime="20190817 19:24:53.466"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.474" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.467" endtime="20190817 19:24:53.474"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.474" endtime="20190817 19:24:53.475"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.475" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"YE","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+967","national_id":""},"address":{"country":"YE","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+967","first_name":"","last_name":"","company":"Umbrella Corp. YE"}}} </msg>
<msg timestamp="20190817 19:24:53.475" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.475" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'YE', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+967', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.475" endtime="20190817 19:24:53.475"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.476" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.476" endtime="20190817 19:24:53.476"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.476" endtime="20190817 19:24:53.476"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.466" endtime="20190817 19:24:53.477"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.465" endtime="20190817 19:24:53.477"></status>
</kw>
<kw name="${item} = ZM" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.478" level="INFO">&amp;{parameter} = { locale=ZM }</msg>
<status status="PASS" starttime="20190817 19:24:53.478" endtime="20190817 19:24:53.478"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.487" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.478" endtime="20190817 19:24:53.487"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.488" endtime="20190817 19:24:53.488"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.488" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ZM","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+260","national_id":""},"address":{"country":"ZM","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+260","first_name":"","last_name":"","company":"Umbrella Corp. ZM"}}} </msg>
<msg timestamp="20190817 19:24:53.488" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.488" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ZM', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+260', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.488" endtime="20190817 19:24:53.488"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.489" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.489" endtime="20190817 19:24:53.489"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.489" endtime="20190817 19:24:53.489"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.477" endtime="20190817 19:24:53.489"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.477" endtime="20190817 19:24:53.489"></status>
</kw>
<kw name="${item} = ZW" type="foritem">
<kw name="Unsupported Country Codes" library="generate_keywords">
<arguments>
<arg>${item}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${unsupported_country_code}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.490" level="INFO">&amp;{parameter} = { locale=ZW }</msg>
<status status="PASS" starttime="20190817 19:24:53.490" endtime="20190817 19:24:53.490"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190817 19:24:53.495" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.490" endtime="20190817 19:24:53.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.495" endtime="20190817 19:24:53.496"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.496" level="INFO">To JSON using : content={"message":"user generated","user":{"country":"ZW","personal_profile":{"first_name":"","last_name":"","date_of_birth":"","mobile_phone":"+263","national_id":""},"address":{"country":"ZW","address_line1":"","address_line2":"","city":"","post_code":"","region_name":"","landline":"+263","first_name":"","last_name":"","company":"Umbrella Corp. ZW"}}} </msg>
<msg timestamp="20190817 19:24:53.496" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.496" level="INFO">${json_data} = {'message': 'user generated', 'user': {'country': 'ZW', 'personal_profile': {'first_name': '', 'last_name': '', 'date_of_birth': '', 'mobile_phone': '+263', 'national_id': ''}, 'address': {'country': ...</msg>
<status status="PASS" starttime="20190817 19:24:53.496" endtime="20190817 19:24:53.496"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal As Strings</arg>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.497" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.497" endtime="20190817 19:24:53.497"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.497" endtime="20190817 19:24:53.497"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.489" endtime="20190817 19:24:53.497"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.489" endtime="20190817 19:24:53.497"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:51.621" endtime="20190817 19:24:53.498"></status>
</kw>
<doc>This will test unsupported country codes not generating any user.
Utilize 'Test Template' function of Robot Framework</doc>
<status status="FAIL" starttime="20190817 19:24:51.619" endtime="20190817 19:24:53.499" critical="yes">Several failures occurred:

1) user generated == user generated

2) user generated == user generated

3) user generated == user generated

4) user generated == user generated

5) user generated == user generated

6) user generated == user generated

7) user generated == user generated

8) user generated == user generated

9) user generated == user generated

    [ Message content over the limit has been removed. ]

184) user generated == user generated

185) user generated == user generated

186) user generated == user generated

187) user generated == user generated

188) user generated == user generated

189) user generated == user generated

190) user generated == user generated

191) user generated == user generated

192) user generated == user generated

193) user generated == user generated</status>
</test>
<test id="s1-t3" name="User Has Failed To Generate A User Using None Existent Country Code">
<kw name="Given POST Request Of Invalid Country Code Sent To /generate Using JSON Parameter" library="generate_keywords">
<arguments>
<arg>${NONE_EXISTENT_COUNTRY_CODE}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${locale}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.501" level="INFO">&amp;{parameter} = { locale=XX }</msg>
<status status="PASS" starttime="20190817 19:24:53.501" endtime="20190817 19:24:53.501"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${g_RESPONSE}</var>
</assign>
<msg timestamp="20190817 19:24:53.508" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.508" level="INFO">${g_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.501" endtime="20190817 19:24:53.508"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${g_RESPONSE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.508" level="INFO">${g_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.508" endtime="20190817 19:24:53.509"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.500" endtime="20190817 19:24:53.509"></status>
</kw>
<kw name="When Response Returns Ok Status" library="generate_keywords">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${g_RESPONSE.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.510" endtime="20190817 19:24:53.511"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.509" endtime="20190817 19:24:53.511"></status>
</kw>
<kw name="Then Response Message Should Not Be 'user generated'" library="generate_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${g_RESPONSE.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.513" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.513" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.513" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.512" endtime="20190817 19:24:53.513"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.515" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.514" endtime="20190817 19:24:53.515"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.512" endtime="20190817 19:24:53.516"></status>
</kw>
<doc>This will test unsupported country codes not generating any user.
Used gherkin syntax for this test case.
API Request: http://localhost/generate
Body { locale="XX" }</doc>
<status status="FAIL" starttime="20190817 19:24:53.499" endtime="20190817 19:24:53.516" critical="yes">user generated == user generated</status>
</test>
<test id="s1-t4" name="User Has Failed To Generate A User Using Null Country Code">
<kw name="Given POST Request Of Null Country Code Sent To /generate Using JSON Parameter" library="generate_keywords">
<arguments>
<arg>${BLANK_COUNTRY_CODE}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>locale=${locale}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.520" level="INFO">&amp;{parameter} = { locale= }</msg>
<status status="PASS" starttime="20190817 19:24:53.519" endtime="20190817 19:24:53.520"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${g_RESPONSE}</var>
</assign>
<msg timestamp="20190817 19:24:53.532" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.532" level="INFO">${g_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.520" endtime="20190817 19:24:53.532"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${g_RESPONSE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.533" level="INFO">${g_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.533" endtime="20190817 19:24:53.533"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.518" endtime="20190817 19:24:53.534"></status>
</kw>
<kw name="When Response Returns Ok Status" library="generate_keywords">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${g_RESPONSE.status_code}</arg>
<arg>${g_STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.534" endtime="20190817 19:24:53.535"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.534" endtime="20190817 19:24:53.535"></status>
</kw>
<kw name="Then Response Message Should Not Be 'user generated'" library="generate_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${g_RESPONSE.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.536" level="INFO">To JSON using : content={"message":"user generated","user":{}} </msg>
<msg timestamp="20190817 19:24:53.536" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.537" level="INFO">${json_data} = {'message': 'user generated', 'user': {}}</msg>
<status status="PASS" starttime="20190817 19:24:53.536" endtime="20190817 19:24:53.537"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.539" level="FAIL">user generated == user generated</msg>
<status status="FAIL" starttime="20190817 19:24:53.538" endtime="20190817 19:24:53.539"></status>
</kw>
<status status="FAIL" starttime="20190817 19:24:53.535" endtime="20190817 19:24:53.539"></status>
</kw>
<doc>This will test how the endpoint handle when passing null values.
Used gherkin syntax.
API Request: http://localhost/generate
Body { locale= ""}</doc>
<status status="FAIL" starttime="20190817 19:24:53.517" endtime="20190817 19:24:53.539" critical="yes">user generated == user generated</status>
</test>
<test id="s1-t5" name="User Has Failed To Generate A User Using Invalid Parameter">
<kw name="Given POST Request Of Valid Country Code Sent To /generate Using Invalid JSON Parameter" library="generate_keywords">
<arguments>
<arg>${VALID_COUNTRY_CODE}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>abcd=${locale}</arg>
</arguments>
<assign>
<var>&amp;{parameter}</var>
</assign>
<msg timestamp="20190817 19:24:53.542" level="INFO">&amp;{parameter} = { abcd=AL }</msg>
<status status="PASS" starttime="20190817 19:24:53.541" endtime="20190817 19:24:53.542"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${g_SESSION_NAME}</arg>
<arg>${g_GENERATE_URL}</arg>
<arg>json=${parameter}</arg>
</arguments>
<assign>
<var>${g_RESPONSE}</var>
</assign>
<msg timestamp="20190817 19:24:53.553" level="INFO">Post Request using : alias=hardware_test, uri=/generate, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190817 19:24:53.554" level="INFO">${g_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.542" endtime="20190817 19:24:53.554"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${g_RESPONSE}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.555" level="INFO">${g_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.554" endtime="20190817 19:24:53.555"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.541" endtime="20190817 19:24:53.555"></status>
</kw>
<kw name="When Response Returns Internal Server Status" library="generate_keywords">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${g_RESPONSE.status_code}</arg>
<arg>${g_STATUS_CODE_INTERNAL_SERVER_ERROR}</arg>
</arguments>
<msg timestamp="20190817 19:24:53.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190817 19:24:53.556" endtime="20190817 19:24:53.557"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.556" endtime="20190817 19:24:53.557"></status>
</kw>
<kw name="Then Response Message Should Not Be 'user not generated'" library="generate_keywords">
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${g_RESPONSE.content}</arg>
</arguments>
<assign>
<var>${json_data}</var>
</assign>
<msg timestamp="20190817 19:24:53.558" level="INFO">To JSON using : content={"message":"user not generated"} </msg>
<msg timestamp="20190817 19:24:53.558" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190817 19:24:53.558" level="INFO">${json_data} = {'message': 'user not generated'}</msg>
<status status="PASS" starttime="20190817 19:24:53.557" endtime="20190817 19:24:53.558"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${json_data['message']}</arg>
<arg>${USER_NOT_GENERATED_RESPONSE_MESSAGE}</arg>
</arguments>
<status status="PASS" starttime="20190817 19:24:53.558" endtime="20190817 19:24:53.558"></status>
</kw>
<status status="PASS" starttime="20190817 19:24:53.557" endtime="20190817 19:24:53.558"></status>
</kw>
<doc>This will test how the endpoint will handle when using incorrect parameter.
Used 'abcd' instead of 'locale'
API Request: http://localhost/generate
Body { abcd="AL" }</doc>
<status status="PASS" starttime="20190817 19:24:53.540" endtime="20190817 19:24:53.559" critical="yes"></status>
</test>
<doc>This a test suite that will test the generation of the user from /generate endpoint.</doc>
<status status="FAIL" starttime="20190817 19:24:49.370" endtime="20190817 19:24:53.563"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="4">Critical Tests</stat>
<stat pass="1" fail="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="4" id="s1" name="Generate Tests">Generate Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
